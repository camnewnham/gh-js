// Generated for: Rhino.UI 8.9.24194.18121
// Generated by: Microsoft.JavaScript.NodeApi.Generator 0.7.0.0
/* eslint-disable */

import './Eto';
import './RhinoCommon';

type DateTime = Date | { kind?: 'utc' | 'local' | 'unspecified' }

/** A JavaScript projection of a .NET type. */
interface IType {
	/**
	 * Constructs a new instance of the type.
	 * (Not available for static class or interface types.)
	 */
	new?(...args: any[]): IType;

	/** Gets the full name of the .NET type. */
	toString(): string;
}

declare module 'node-api-dotnet' {

	export namespace Analytics {
		export function Send(
			Category: string,
			Action: string,
			Label: string,
			Value: number,
			cutoffDate: DateTime,
		): void;

		export function Send(
			Category: string,
			Action: string,
			Label: string,
			Value: number,
		): void;

		export function Send(
			Category: string,
			Action: string,
			Label: string,
			cutoffDate: DateTime,
		): void;

		export function Send(
			Category: string,
			Action: string,
			Label: string,
		): void;

		export function Send(
			Category: string,
			Action: string,
			cutoffDate: DateTime,
		): void;

		export function Send(
			Category: string,
			Action: string,
		): void;

		export function Send(
			Category: string,
			cutoffDate: DateTime,
		): void;

		export function Send(Category: string): void;
	}

	export namespace Rhino.Resources {
		export namespace AssetExtensions {
			export function RuntimeResourceId(
				assembly: unknown,
				resourceIdString: string,
			): string;

			export function EtoAssets(assembly: unknown): Rhino.Resources.EtoAssets;

			export function SystemDrawingAssets(assembly: unknown): Rhino.Resources.SystemDrawingAssets;
		}
	}

	export namespace System.Reflection {
		/** Extension methods from {@link Rhino.Resources.AssetExtensions} */
		export interface Assembly {
			RuntimeResourceId(resourceIdString: string): string;

			EtoAssets(): Rhino.Resources.EtoAssets;

			SystemDrawingAssets(): Rhino.Resources.SystemDrawingAssets;
		}
	}

	export namespace Rhino.Resources {
		export class Assets {
			static readonly Rhino: Rhino.Resources.Assets;

			readonly Assembly: unknown;

			readonly Eto: Rhino.Resources.EtoAssets;

			readonly SystemDrawing: Rhino.Resources.SystemDrawingAssets;

			static Get(assembly: unknown): Rhino.Resources.Assets;

			RuntimeResourceId(resourceIdString: string): string;
		}
	}

	export namespace Rhino.Resources {
		export namespace EtoFonts {
			export const NormalFont: Eto.Drawing.Font;

			export const NormalBoldFont: Eto.Drawing.Font;

			export const HeadingFont: Eto.Drawing.Font;

			export const BoldHeadingFont: Eto.Drawing.Font;

			export const TitleFont: Eto.Drawing.Font;

			export const SmallFont: Eto.Drawing.Font;

			export const SmallBoldFont: Eto.Drawing.Font;

			export function GetUiFont(
				style: Rhino.UI.Fonts.Style,
				size: Rhino.UI.Fonts.Size,
			): Eto.Drawing.Font;
		}
	}

	export namespace Rhino.Resources {
		export class EtoAssets {
			readonly Icons: Rhino.Resources.ResourceCache$2<Eto.Drawing.Icon, Eto.Drawing.Size>;

			readonly Bitmaps: Rhino.Resources.ResourceCache$2<Eto.Drawing.Bitmap, Eto.Drawing.Size>;
		}
	}

	export namespace Rhino.Resources {
		export function ResourceCache$(TImage: IType, TSize: IType): typeof ResourceCache$2<any, any>;

		export class ResourceCache$2<TImage, TSize> {
			Get(
				resourceId: string,
				size: TSize,
				darkMode: boolean | undefined,
			): TImage;

			Get(
				resourceId: string,
				size: TSize,
			): TImage;

			Get(resourceId: string): TImage;

			TryGet(
				resourceId: string,
				size: TSize,
				darkMode: boolean | undefined,
			): TImage;

			TryGet(
				resourceId: string,
				size: TSize,
			): TImage;

			TryGet(resourceId: string): TImage;
		}
	}

	export namespace Rhino.Resources {
		export class SystemDrawingAssets {
			readonly Icons: Rhino.Resources.ResourceCache$2<unknown, unknown>;

			readonly Bitmaps: Rhino.Resources.ResourceCache$2<unknown, unknown>;
		}
	}

	export namespace Rhino.Resources {
		export namespace ResourceIds {
			export const FocalBlurTabIco: string;

			export const MacroEditorIco: string;

			export const NotificationsDefaultPanelIco: string;

			export const SplashCloseIco: string;

			export const IcoTreeArrowExpandedGrayIco: string;

			export const PropClippingPlaneIco: string;

			export const PropAngularDimIco: string;

			export const DevelopableLoftIco: string;

			export const PropCentermarkDimIco: string;

			export const PropDetailIco: string;

			export const PropLightIco: string;

			export const DocumentUsertextIco: string;

			export const PropTexturemappingIco: string;

			export const StatisticsIco: string;

			export const NotificationsInfoPanelIco: string;

			export const PropDimensionIco: string;

			export const BoxEditIco: string;

			export const ContentTagsIco: string;

			export const PropCameraIco: string;

			export const PropDetailsIco: string;

			export const SafeFrameIco: string;

			export const PropDotIco: string;

			export const PropThearenderIco: string;

			export const PointDeviationIco: string;

			export const PmPolyhedraIco: string;

			export const PropDecalsIco: string;

			export const TutorialsPanelIco: string;

			export const PropMaxwellIco: string;

			export const PropLinearDimIco: string;

			export const PlugInIco: string;

			export const PropBongoIco: string;

			export const IcoGearHotIco: string;

			export const PencilIco: string;

			export const MoveUVNIco: string;

			export const FileTypeBitmapIco: string;

			export const SplashCloseMouseoverIco: string;

			export const PropRadialDimIco: string;

			export const Notifications0InIconIco: string;

			export const PropObjectIco: string;

			export const ObjectProperties16x16Ico: string;

			export const PropFlamingonXtDecalIco: string;

			export const CurvePipingMacIco: string;

			export const PropOrdinateDimIco: string;

			export const NotificationsWarningPanelIco: string;

			export const IcoCloseIco: string;

			export const PropTextIco: string;

			export const PmColorpickerIco: string;

			export const IcoGearIco: string;

			export const PropBrazilIco: string;

			export const NotificationsSeriousPanelIco: string;

			export const MeshRepairIco: string;

			export const PropLeaderIco: string;

			export const PropMaterialIco: string;

			export const PropPenguinIco: string;

			export const DocumentUsertextMacIco: string;

			export const IcoTreeArrowCollapsedGrayIco: string;

			export const FileTypePdfIco: string;

			export const TutorialsDefaultPanelIco: string;

			export const CloseTagsIco: string;

			export const IcoCloseHotIco: string;

			export const PropHatchIco: string;

			export const PropFlamingonXtIco: string;

			export const TestResolutionIco: string;

			export const ObjectUsertextIco: string;

			export const DocumentTextIco: string;

			export const AttributeUserTextIco: string;

			export const PropCentermarkIco: string;

			export const IcoTreeArrowCollapsedIco: string;

			export const IcoTreeArrowExpandedIco: string;

			export const PmIcosphere32Png: string;

			export const RightMouseButtonPng: string;

			export const AnnotationArrowOpenarrowPng: string;

			export const GearPng: string;

			export const SelByKeyPng: string;

			export const PluginSortUpPng: string;

			export const PluginRenderPng: string;

			export const AnnotationArrowTickPng: string;

			export const AnnotationArrowSolidtrianglePng: string;

			export const PropDetailPng: string;

			export const TextBoldPng: string;

			export const LockPng: string;

			export const UsertextObjectPng: string;

			export const QuestionPng: string;

			export const PlayPng: string;

			export const PastekvPng: string;

			export const TextMiddlePng: string;

			export const StatisticsPng: string;

			export const CommandsPng: string;

			export const DeletePng: string;

			export const CheckmarkWithShadowPng: string;

			export const StackedFractionPng: string;

			export const AnnotationArrowLongtrianglePng: string;

			export const DocPropsDimensionPng: string;

			export const PlayGrayPng: string;

			export const PluginDisplayEnginePng: string;

			export const SelectValuePng: string;

			export const PluginDigitizePng: string;

			export const SelKeyValuePng: string;

			export const FilterPng: string;

			export const UsertextAddPng: string;

			export const ImportPng: string;

			export const AnnotationArrowShorttrianglePng: string;

			export const RhinoPng: string;

			export const UnderlinePng: string;

			export const TextBottomPng: string;

			export const AnnotationArrowRectanglePng: string;

			export const DocPropsLinetypesPng: string;

			export const ObjectPropertiesPng: string;

			export const Weaverbird32Png: string;

			export const AnnotationArrowDotPng: string;

			export const DocumentUsertextPng: string;

			export const PluginImportPng: string;

			export const DocumentsFolder16Png: string;

			export const TextLeftPng: string;

			export const SelByValuePng: string;

			export const GearsmallPng: string;

			export const MacroEditorPng: string;

			export const AnnotationArrowLongertrianglePng: string;

			export const PlugInPng: string;

			export const PluginExportPng: string;

			export const Iris32Png: string;

			export const UsertextMatchPng: string;

			export const TextItalicPng: string;

			export const PluginSortDownPng: string;

			export const Commands16Png: string;

			export const ExportPng: string;

			export const TextCenterPng: string;

			export const FolderopenPng: string;

			export const TextRightPng: string;

			export const LeftMouseButtonPng: string;

			export const AdvancedSettingsPng: string;

			export const Debug128128Png: string;

			export const Gha32Png: string;

			export const Metahopper32Png: string;

			export const GearpulldownsmallPng: string;

			export const RhpFilePng: string;

			export const DocumentsFolderPng: string;

			export const DeleteGrayPng: string;

			export const SelectKeyPng: string;

			export const CheckmarkPng: string;

			export const PluginDisplayPipelinePng: string;

			export const PluginUtilityPng: string;

			export const UnloadedPluginPng: string;

			export const TextTopPng: string;

			export const TextFunctionPng: string;

			export const CopykvPng: string;

			export const Info128128Png: string;

			export const Critical128128Png: string;

			export const Warning128128Png: string;

			export const LicensesPng: string;

			export const Plankton32Png: string;

			export const ImagingLibrary32Png: string;

			export const RhpFile75pxPng: string;

			export const AddItemPng: string;

			export const Serious128128Png: string;

			export const DocPropsEarthLocationPng: string;

			export const ViewportGridPng: string;

			export const PmShaderGraphPng: string;

			export const DocPropsHatchesPng: string;

			export const PmPanelingtools32Png: string;

			export const ViewLayoutPng: string;

			export const Kangaroo32Png: string;

			export const PmWaterman32Png: string;

			export const AttributeUserTextIcoAttributeUserTextIco: string;

			export const x3dmFileIco: string;

			export const x3dmbakFileIco: string;

			export const RhinoIco: string;

			export const RhinoDocIco: string;

			export const RhinoInstallerIconIco: string;

			export const LayFileIco: string;

			export const OtherFileIco: string;

			export const RhiFileIco: string;

			export const RhinoBetaIco: string;

			export const RhinoWipIco: string;

			export const RuiFileIco: string;

			export const RvbFileIco: string;

			export const RwsFileIco: string;

			export const RhinoTitleBlockPng: string;

			export const RhinoBetaLogoPng: string;

			export const RhinoBetaLogo150Png: string;

			export const RhinoBetaLogo200Png: string;

			export const RhinoBetaLogo300Png: string;

			export const RhinoLogoPng: string;

			export const RhinoLogo150Png: string;

			export const RhinoLogo200Png: string;

			export const RhinoLogo300Png: string;

			export const RhinoWIPLogo150Png: string;

			export const RhinoWIPLogo200Png: string;

			export const RhinoWIPLogo300Png: string;

			export const RhinoWipLogoPng: string;

			export const Rhino3splashBmp: string;

			export const RhpFileICO: string;

			export const LayerStateManagerIco: string;

			export const LayerstatePng: string;

			export const RestorePng: string;

			export const RestoreGrayPng: string;

			export const HelpPng: string;

			export const EdgeSofteningIco: string;

			export const ShutliningIco: string;

			export const ThicknessIco: string;

			export const DisplacementIco: string;

			export const TabLightManagerIco: string;

			export const TabNamedPositionsIco: string;

			export const TabNamedViewsIco: string;

			export const TabSnapshotIco: string;

			export const TabSunIco: string;

			export const NamedSelectionsObjectPng: string;

			export const DropperIco: string;

			export const LayoutsIco: string;

			export const CopyPng: string;

			export const CopyGrayPng: string;

			export const LayoutPng: string;

			export const NewPng: string;

			export const GearGrayPng: string;

			export const GearWhitePng: string;

			export const PluginSortDownGrayPng: string;

			export const PluginSortUpGrayPng: string;

			export const StartWithoutDebugingIco: string;

			export const StartDebuggingIco: string;

			export const DraftAnglePng: string;

			export const NamedSelectionsIco: string;

			export const UsertextDocPropsPng: string;

			export const SelectSelectionFilterIco: string;

			export const PackageUpdatePng: string;

			export const EyedropperIco: string;

			export const EyedropperDarkIco: string;

			export const UsertextFullPng: string;

			export const UsertextHalfPng: string;

			export const PrintPng: string;

			export const HatchGradientLinearPng: string;

			export const HatchGradientLinearReflectedPng: string;

			export const HatchGradientLinearRepeatPng: string;

			export const HatchGradientRadialPng: string;

			export const HatchGradientRadialReflectedPng: string;

			export const HatchGradientRadialRepeatPng: string;

			export const HatchGradientSolidPng: string;

			export const Packagemanager2xPng: string;

			export const PackagemanagerPng: string;

			export const FileSvg: string;

			export const LayerSvg: string;

			export const PropertiesSvg: string;

			export const RhinoIconPng: string;

			export const RhinoIcon190Png: string;

			export const RhinoLogoPngRhinoLogoPng: string;

			export const RhinoLogo190Png: string;

			export const RhiexecIco: string;

			export const InitializingRhinoPng: string;

			export const PluginCroppedPng: string;

			export const BetaMediumTilePng: string;

			export const BetaSmallTilePng: string;

			export const CommercialMediumTilePng: string;

			export const CommercialSmallTilePng: string;

			export const WIPMediumTilePng: string;

			export const WIPSmallTilePng: string;

			export const x3DDigitizingSvg: string;

			export const x3dFaceSubDAppendSvg: string;

			export const x3DDigitizingCalibrateDigitizerSvg: string;

			export const x3DDigitizingCurveDrawingCurveInterpolatePointsSvg: string;

			export const x3DDigitizingCurveInterpolateOnSurfaceSvg: string;

			export const x3DDigitizingDigitizePlanarSectionCurveSvg: string;

			export const x3DDigitizingDigLineSvg: string;

			export const x3DDigitizingMain2PointMainMultiplePointsSvg: string;

			export const x3DDigitizingPauseDigitizerSvg: string;

			export const x3DDigitizingPickAPointWithDigitizerSvg: string;

			export const x3DDigitizingSetDigitizerScaleSvg: string;

			export const x3DDigitizingSetViewRenderSidebarPlaceCameraAndTargetSvg: string;

			export const x3DDigitizingSetViewRenderSidebarPlaceTargetSvg: string;

			export const x3DDigitizingToolsConnectDigitizerSvg: string;

			export const x3DDigitizingToolsDisconnectDigitizerSvg: string;

			export const AddMissingBlockAttributeKeysSvg: string;

			export const AlignAndDistributeSvg: string;

			export const AlignAndDistributeAlignBottomSvg: string;

			export const AlignAndDistributeAlignCentersSvg: string;

			export const AlignAndDistributeAlignHorizontalCentersSvg: string;

			export const AlignAndDistributeAlignLeftSvg: string;

			export const AlignAndDistributeAlignRightSvg: string;

			export const AlignAndDistributeAlignTopSvg: string;

			export const AlignAndDistributeAlignVerticalCentersSvg: string;

			export const AlignAndDistributeDistributeSvg: string;

			export const AnalyzeSvg: string;

			export const AnalyzeAngleSvg: string;

			export const AnalyzeAreaCentroidSvg: string;

			export const AnalyzeCheckAllNewObjectsSvg: string;

			export const AnalyzeCheckObjectsSvg: string;

			export const AnalyzeClashSvg: string;

			export const AnalyzeCurvatureAnalysisSvg: string;

			export const AnalyzeCurvatureAnalysisOffSvg: string;

			export const AnalyzeCurvatureGraphOffSvg: string;

			export const AnalyzeCurveDeviationSvg: string;

			export const AnalyzeDirectionSvg: string;

			export const AnalyzeDistanceSvg: string;

			export const AnalyzeDomainSvg: string;

			export const AnalyzeEvaluatePointSvg: string;

			export const AnalyzeEvaluatePointUVCoordinatesSvg: string;

			export const AnalyzeFlipDirectionSvg: string;

			export const AnalyzeGeometricContinuityOf2CurvesSvg: string;

			export const AnalyzeSelectBadObjectsSvg: string;

			export const AnalyzeShowDirectionSvg: string;

			export const AnalyzeShowEdgesSvg: string;

			export const AnalyzeShowEdgesOffSvg: string;

			export const AnalyzeShowEndsSvg: string;

			export const AnimationSvg: string;

			export const AnimationAnimationPreviewSvg: string;

			export const AnimationAnimationToolsSvg: string;

			export const AnimationPreviewSvg: string;

			export const AnimationPreviewAnimationPreviewLastFrameSvg: string;

			export const AnimationPreviewAnimationPreviewFirstFrameSvg: string;

			export const AnimationPreviewAnimationPreviewFrameNumberSvg: string;

			export const AnimationPreviewAnimationPreviewNextFrameSvg: string;

			export const AnimationPreviewAnimationPreviewPreviousFrameSvg: string;

			export const AnimationRecordAnimationSvg: string;

			export const AnimationSetupSvg: string;

			export const AnimationSetupSetUp360DegreeTurntableAnimationSvg: string;

			export const AnimationSetupSetUpFlyThroughAnimationSvg: string;

			export const AnimationSetupSetUpOneDaySunStudySvg: string;

			export const AnimationSetupSetUpPathAnimationSvg: string;

			export const AnimationSetupSetUpSeasonalSunStudySvg: string;

			export const AnnotateSvg: string;

			export const AnnotateAddRemoveArrowheadOnCurveSvg: string;

			export const AnnotateAnnotateDot0Svg: string;

			export const AnnotateAnnotateDot1Svg: string;

			export const AnnotateAnnotateDot2Svg: string;

			export const AnnotateAnnotateDot3Svg: string;

			export const AnnotateAnnotateDot4Svg: string;

			export const AnnotateAnnotateDot5Svg: string;

			export const AnnotateAnnotateDot6Svg: string;

			export const AnnotateAnnotateDot7Svg: string;

			export const AnnotateAnnotateDot8Svg: string;

			export const AnnotateAnnotateDot9Svg: string;

			export const AnnotateDimensionDraftingAnnotateDotSvg: string;

			export const AnnotateDraftingConvertDotsToTextSvg: string;

			export const ArcSvg: string;

			export const ArcticModeSvg: string;

			export const ArcArcsThroughPointsSvg: string;

			export const ArcArcStartEndRadiusSvg: string;

			export const ArcCurveDrawingArcStartDirectionAtStartEndSvg: string;

			export const ArcCurveDrawingArcStartEndDirectionAtStartSvg: string;

			export const ArcCurveDrawingArcStartEndPointOnArcSvg: string;

			export const ArcCurveDrawingArcStartPointOnArcEndSvg: string;

			export const ArcCurveDrawingArcTangentToCurvesSvg: string;

			export const ArcCurveDrawinArcTangentTangentRadiusSvg: string;

			export const ArcCurveToolsConvertCurveToArcsSvg: string;

			export const ArcMain1MainCurveDrawingArcCenterStartAngleSvg: string;

			export const ArraySvg: string;

			export const ArrayArrayAlongCurveSvg: string;

			export const ArrayArrayAlongCurveOnSurfaceSvg: string;

			export const ArrayArrayOnSurfaceSvg: string;

			export const ArrayLinearArraySvg: string;

			export const ArrayPolarArraySvg: string;

			export const ArrayRectangularArraySvg: string;

			export const BackgroundBitmapSvg: string;

			export const BackgroundBitmapAlignBackgroundBitmapSvg: string;

			export const BackgroundBitmapBackgroundBitmapHideSvg: string;

			export const BackgroundBitmapMoveBackgroundBitmapSvg: string;

			export const BackgroundBitmapPlaceBackgroundBitmapSvg: string;

			export const BackgroundBitmapRemoveBackgroundBitmapSvg: string;

			export const BackgroundBitmapScaleBackgroundBitmapSvg: string;

			export const BackgroundBitmapShowBackgroundBitmapSvg: string;

			export const BlockSvg: string;

			export const BlockBlockResetScaleSvg: string;

			export const BlockBlockBlockEditSvg: string;

			export const BlockBlockManagerSvg: string;

			export const BlockExplodeBlockSvg: string;

			export const BlockFileExportWithOriginSvg: string;

			export const BlockMain1MainBlockDefinitionSvg: string;

			export const BlockReplaceBlockSvg: string;

			export const BlockSetModelBasePointSvg: string;

			export const BoxSvg: string;

			export const BoxBoundingBoxSvg: string;

			export const BoxBoundingBoxCPlaneOrientationSvg: string;

			export const BoxBox3PointsHeightSvg: string;

			export const BoxBoxCenterCornerHeightSvg: string;

			export const BoxMain1BoxCornerToCornerHeightSvg: string;

			export const CageSvg: string;

			export const CageReleaseObjectsFromControlCageSvg: string;

			export const CageSelectCaptivesSvg: string;

			export const CageSelectSelectControlsSvg: string;

			export const CageTransformDeformationToolsCageSvg: string;

			export const CageTransformDeformationToolsCageEditSvg: string;

			export const CircleSvg: string;

			export const CircleCircle3PointsSvg: string;

			export const CircleCircleAroundCurveSvg: string;

			export const CircleCircleDeformableSvg: string;

			export const CircleCircleFitPointsSvg: string;

			export const CircleCircleTangentTo3CurvesSvg: string;

			export const CircleCircleVerticalToCPlaneDiameterSvg: string;

			export const CircleCurveDrawingCircleTangentTangentRadiusSvg: string;

			export const CircleCurveDrawingCircleVerticalToCPlaneCenterRadiusSvg: string;

			export const CircleCurveDrawingCircleDiameterSvg: string;

			export const CircleMain1MainCurveDrawingCircleCenterRadiusSvg: string;

			export const CollapseMeshSvg: string;

			export const CollapseMeshCollapseMeshEdgeSvg: string;

			export const CollapseMeshCollapseMeshFaceSvg: string;

			export const CollapseMeshCollapseMeshFacesByAreaSvg: string;

			export const CollapseMeshCollapseMeshFacesByAspectRatioSvg: string;

			export const CollapseMeshCollapseMeshFacesByEdgeLengthSvg: string;

			export const CollapseMeshCollapseMeshVertexSvg: string;

			export const CollapseMeshMoveSvg: string;

			export const ConvertTextToBlockAttributeSvg: string;

			export const CPlanesSvg: string;

			export const CPlanesImportNamedCPlanesFromFileSvg: string;

			export const CPlanesRestoreCPlaneByNameSvg: string;

			export const CPlanesRotateCPlaneSvg: string;

			export const CPlanesSaveCPlaneByNameSvg: string;

			export const CPlanesSelectSavedCPlaneSvg: string;

			export const CPlanesSetCPlaneBy3PointsSvg: string;

			export const CPlanesSetCPlaneByXAxisSvg: string;

			export const CPlanesSetCPlaneByZAxisSvg: string;

			export const CPlanesSetCPlaneElevationSvg: string;

			export const CPlanesSetCPlaneModeSvg: string;

			export const CPlanesSetCPlanePerpendicularToCurveSvg: string;

			export const CPlanesSetCPlaneToObjectSvg: string;

			export const CPlanesSetCPlaneToSurfaceSvg: string;

			export const CPlanesSetCPlaneToViewSvg: string;

			export const CPlanesSetCPlaneWorldBackSvg: string;

			export const CPlanesSetCPlaneWorldBottomSvg: string;

			export const CPlanesSetCPlaneWorldFrontSvg: string;

			export const CPlanesSetCPlaneWorldLeftSvg: string;

			export const CPlanesSetCPlaneWorldRightSvg: string;

			export const CPlanesSetCPlaneWorldTopSvg: string;

			export const CPlanesSetMobileConstructionPlaneSvg: string;

			export const CPlanesSetUPlaneModeSvg: string;

			export const CPlanesStandardSetCPlaneOriginSvg: string;

			export const CPlanesToggleCPlanePanelSvg: string;

			export const CPlanesUndoRedoCPlaneSvg: string;

			export const CPlanesUndoUndoCPlaneSvg: string;

			export const CPlaneSetCPlaneVerticalSvg: string;

			export const CPlaneViewSvg: string;

			export const CreateGridSvg: string;

			export const CreateGridCreateGridArraySvg: string;

			export const CreateGridCreateGridExtrude1CurveSvg: string;

			export const CreateGridCreateGridExtrude2CurvesSvg: string;

			export const CreateGridCreateGridOneProjectionCurveSvg: string;

			export const CreateGridCreateGridPointsSvg: string;

			export const CreateGridCreateGridPointsOnSurfaceSvg: string;

			export const CreateGridCreateGridPolarArraySvg: string;

			export const CreateGridCreateGridSurfaceDomainVariableSvg: string;

			export const CreateGridCreateGridSurfaceEqualDistanceSvg: string;

			export const CreateGridCreateGridTwoProjectionCurvesSvg: string;

			export const CreateGridCreateGridUseSurfaceBaseUVIsoSvg: string;

			export const CreateGridCreateGridUseSurfaceBaseUVIso01Svg: string;

			export const CreateGridCreateGridUseSurfaceBaseUVIso02Svg: string;

			export const CreateGridCreateGridUVCurvesSvg: string;

			export const CreateGridCreateGridUCurvesSvg: string;

			export const CreateGridUseSurfaceBaseUVIsocurvesAndDivideByNumberOrDistance00Svg: string;

			export const CreateGridUseSurfaceDomainParameterizationSvg: string;

			export const CurveSvg: string;

			export const CurveConicSvg: string;

			export const CurveConicPerpendicularAtStartSvg: string;

			export const CurveCurveThroughPolylineVerticesSvg: string;

			export const CurveCurveControlPointsFromPolylineSvg: string;

			export const CurveCurveCurveDrawingHandleCurveSvg: string;

			export const CurveCurveDrawingConicTangentAtStartSvg: string;

			export const CurveCurveDrawingConicTangentAtStartEndSvg: string;

			export const CurveCurveDrawingHelixSvg: string;

			export const CurveCurveDrawingNewInV6Parabola3PtSvg: string;

			export const CurveCurveDrawingParabolaByFocusSvg: string;

			export const CurveCurveDrawingParabolaByVertexSvg: string;

			export const CurveCurveDrawingSketchSvg: string;

			export const CurveCurveDrawingSketchOnSurfaceSvg: string;

			export const CurveCurveDrawingVerticalHelixSvg: string;

			export const CurveCurveToolsTweenCurvesSvg: string;

			export const CurveDrawingSvg: string;

			export const CurveFlatPiralSvg: string;

			export const CurveFromObjectSvg: string;

			export const CurveFromObjectApplyUVCurvesSvg: string;

			export const CurveFromObjectBlendPerpendicularSvg: string;

			export const CurveFromObjectContourSvg: string;

			export const CurveFromObjectCreateVCurvesSvg: string;

			export const CurveFromObjectCurveToolsMain1ProjectCurvesSvg: string;

			export const CurveFromObjectCurveToolsNewInV6MoveExtractedIsocurveSvg: string;

			export const CurveFromObjectCurveToolsProjectCurvesLooseSvg: string;

			export const CurveFromObjectDuplicateEdgeSvg: string;

			export const CurveFromObjectDuplicateFaceBorderSvg: string;

			export const CurveFromObjectDuplicateMeshEdgeSvg: string;

			export const CurveFromObjectExtractIsocurveSvg: string;

			export const CurveFromObjectExtractWireframeSvg: string;

			export const CurveFromObjectGeodesicCurveSvg: string;

			export const CurveFromObjectIntersectObjectsSvg: string;

			export const CurveFromObjectIntersectTwoSetsSvg: string;

			export const CurveFromObjectMeshOutlineSvg: string;

			export const CurveFromObjectPointCloudSectionSvg: string;

			export const CurveFromObjectPoinExtractPointsSvg: string;

			export const CurveFromObjectPullCurveSvg: string;

			export const CurveFromObjectPullCurveLooseSvg: string;

			export const CurveFromObjectSectionSvg: string;

			export const CurveFromObjectSilhouetteSvg: string;

			export const CurveHyperbolaSvg: string;

			export const CurveMain2MainCurveDrawingControlPointCurveSvg: string;

			export const CurveMain2MainCurveDrawingCurveThroughPointsSvg: string;

			export const CurveNewInV6CatenarySvg: string;

			export const CurveSketchOnPolygonMeshSvg: string;

			export const CurveSpiralSvg: string;

			export const CurveToolsSvg: string;

			export const CurveToolsAdjustableCurveBlendSvg: string;

			export const CurveToolsAdjustClosedCurveSeamSvg: string;

			export const CurveToolsArcBlendSvg: string;

			export const CurveToolsBlendCurvesSvg: string;

			export const CurveToolsChamferCurvesSvg: string;

			export const CurveToolsChamferCurvesRepeatSvg: string;

			export const CurveToolsChangeDegreeSvg: string;

			export const CurveToolsCloseOpenCurvesSvg: string;

			export const CurveToolsConnectRepeatSvg: string;

			export const CurveToolsContinueControlPointCurveSvg: string;

			export const CurveToolsContinueInterpCrvSvg: string;

			export const CurveToolsCopySubCurveSvg: string;

			export const CurveToolsCurveBooleanDeleteAllInputSvg: string;

			export const CurveToolsCurveToolsNewInV6OffsetCurveMultipleSvg: string;

			export const CurveToolsCurveFrom2ViewsSvg: string;

			export const CurveToolsCurveFromCrossSectionProfilesSvg: string;

			export const CurveToolsCurveSymetrySvg: string;

			export const CurveToolsDeleteSubCurveSvg: string;

			export const CurveToolsExtendConnectSvg: string;

			export const CurveToolsExtendExtendCurveSvg: string;

			export const CurveToolsExtendExtendCurveToBoundarySvg: string;

			export const CurveToolsExtractSubCurveSvg: string;

			export const CurveToolsFairCurveSvg: string;

			export const CurveToolsFilletCornersSvg: string;

			export const CurveToolsFilletCurvesRepeatSvg: string;

			export const CurveToolsGeometryFixMainPointsOnSvg: string;

			export const CurveToolsInsertLineIntoCurveSvg: string;

			export const CurveToolsLinesConvertCurveToPolylineSvg: string;

			export const CurveToolsMain2MainFilletCurvesSvg: string;

			export const CurveToolsMain2PointsOffSvg: string;

			export const CurveToolsMakeNonPeriodicSvg: string;

			export const CurveToolsMakePeriodicSvg: string;

			export const CurveToolsMatchCurveDirSvg: string;

			export const CurveToolsMatchCurveSvg: string;

			export const CurveToolsOffsetCurveSvg: string;

			export const CurveToolsOffsetCurveNormalToSurfaceSvg: string;

			export const CurveToolsOffsetCurveOnSurfaceSvg: string;

			export const CurveToolsPointMarkCurveEndSvg: string;

			export const CurveToolsRebuildCurveSvg: string;

			export const CurveToolsRebuildCurvesToMasterCurveSvg: string;

			export const CurveToolsRebuildCurveNonUniformSvg: string;

			export const CurveToolsRefitCurveSvg: string;

			export const CurveToolsSimplifyLinesAndArcsSvg: string;

			export const CurveToolsSubCurveSvg: string;

			export const CurveToolsSurfaceToolsRemoveMultipleKnotsSvg: string;

			export const CurveToolsToolsUtilitiesNewInV6AddGuideSvg: string;

			export const CurveToolsToolsUtilitiesNewInV6RemoveGuideSvg: string;

			export const DefaultEditPythonScriptSvg: string;

			export const DeformationToolsSvg: string;

			export const DeformationToolsFlowAlongCurveSvg: string;

			export const DeformationToolsMaelstromSvg: string;

			export const DeformationToolsSplopSvg: string;

			export const DiagnosticsSvg: string;

			export const DiagnosticsAuditSvg: string;

			export const DiagnosticsAudit3dmFileSvg: string;

			export const DiagnosticsGeometryFixExtractBadSurfacesSvg: string;

			export const DiagnosticsListObjectDatabaseSvg: string;

			export const DiagnosticsObjectDetailsSvg: string;

			export const DiagnosticsToolsNewInV6SystemInfoSvg: string;

			export const DiagnosticsToolsUtilitiesRescue3dmFileSvg: string;

			export const DimensionSvg: string;

			export const DimensionDimCreaseAngleSvg: string;

			export const DimensionDimCurveLengthSvg: string;

			export const DimensionDraftingAlignedDimensionSvg: string;

			export const DimensionDraftingAlignedDimensionContinuousSvg: string;

			export const DimensionDraftingAngleDimensionSvg: string;

			export const DimensionDraftingCenterMarkSvg: string;

			export const DimensionDraftingDiameterDimensionSvg: string;

			export const DimensionDraftingHorizontalDimensionSvg: string;

			export const DimensionDraftingHorizontalDimensionContinuousSvg: string;

			export const DimensionDraftingLeaderSvg: string;

			export const DimensionDraftingOrdinateDimensionSvg: string;

			export const DimensionDraftingRadialDimensionSvg: string;

			export const DimensionDraftingRecenterDimensionTextSvg: string;

			export const DimensionDraftingRotatedDimensionSvg: string;

			export const DimensionDraftingRotatedDimensionContinuousSvg: string;

			export const DimensionDraftingSetCurrentDimStyleSvg: string;

			export const DimensionDraftingSingleLineOfTextSvg: string;

			export const DimensionDraftingStandardLinearDimensionSvg: string;

			export const DimensionDraftingStandardLinearDimensionContinuousSvg: string;

			export const DimensionDraftingTextSvg: string;

			export const DimensionDraftingVerticalDimensionSvg: string;

			export const DimensionDraftingVerticalDimensionContinuousSvg: string;

			export const DimensionRevCloudCurveSvg: string;

			export const DisplaySvg: string;

			export const DisplayArtisticDisplaySvg: string;

			export const DisplayArtisticDisplayAllSvg: string;

			export const DisplayDisplayPanelSvg: string;

			export const DisplayGhostedViewportSvg: string;

			export const DisplayGhostedViewportAllSvg: string;

			export const DisplayPenDisplaySvg: string;

			export const DisplayPenDisplayAllSvg: string;

			export const DisplayRenderedViewportAllSvg: string;

			export const DisplayRenderedViewportSvg: string;

			export const DisplaySetObjectShadingAttributesSvg: string;

			export const DisplayShadedViewportAllSvg: string;

			export const DisplayTechnicalDisplaySvg: string;

			export const DisplayTechnicalDisplayAllSvg: string;

			export const DisplayToggleShadeSelectedModeSvg: string;

			export const DisplayXRayViewportSvg: string;

			export const DisplayXRayViewportAllSvg: string;

			export const DraftingSvg: string;

			export const DraftingDisplayPrintDisplaySvg: string;

			export const DraftingDrawOrderBlankSvg: string;

			export const DraftingLayoutNewInV6ChangeSpaceSvg: string;

			export const DraftingLinetypeDisplaySvg: string;

			export const DragModeSvg: string;

			export const DragModeSetDragModeCPlaneSvg: string;

			export const DragModeSetDragModeWorldSvg: string;

			export const DragModeSetDragModeControlPolygonSvg: string;

			export const DragModeSetDragModeUVNSvg: string;

			export const DragModeSetDragModeViewSvg: string;

			export const DrawOrderSvg: string;

			export const DrawOrderBringForwardSvg: string;

			export const DrawOrderBringToFrontSvg: string;

			export const DrawOrderClearDrawOrderSvg: string;

			export const DrawOrderSendBackwardSvg: string;

			export const DrawOrderSendToBackSvg: string;

			export const EdgeToolsSvg: string;

			export const EdgeToolsMarkNakedEdgesSvg: string;

			export const EdgeToolsMergeAllEdgesSvg: string;

			export const EdgeToolsZoomNakedAllSvg: string;

			export const EdgeToolsZoomNakedNextSvg: string;

			export const EdgeToolsZoomNakedPreviousSvg: string;

			export const EllipseSvg: string;

			export const EllipseCurveDrawingEllipseDiameterSvg: string;

			export const EllipseEllipseAroundCurveSvg: string;

			export const EllipseEllipseByCornersSvg: string;

			export const EllipseEllipseDeformableSvg: string;

			export const EllipseEllipseFromFociSvg: string;

			export const EllipseMainCurveDrawingEllipseFromCenterSvg: string;

			export const EllipsoidSvg: string;

			export const EllipsoidEllipsoidAroundCurveSvg: string;

			export const EllipsoidEllipsoidByCornersSvg: string;

			export const EllipsoidEllipsoidByDiameterSvg: string;

			export const EllipsoidEllipsoidFromFociSvg: string;

			export const EllipsoidSolidsSidebarSolidCreationEllipsoidFromCenterSvg: string;

			export const ExtendSvg: string;

			export const ExtendExtendByArcKeepRadiusSvg: string;

			export const ExtendExtendByArcToPointSvg: string;

			export const ExtendExtendByArcWithCenterSvg: string;

			export const ExtendExtendByLineSvg: string;

			export const ExtendExtendCurveOnSurfaceSvg: string;

			export const ExtendExtendCurveSmoothSvg: string;

			export const ExtractCustomMappingObjectSvg: string;

			export const ExtractMeshExtractMeshEdgesSvg: string;

			export const ExtractMeshExtractMeshFacesByAreaSvg: string;

			export const ExtractMeshExtractMeshFacesByAspectRatioSvg: string;

			export const ExtractMeshExtractMeshFacesByDraftAngleSvg: string;

			export const ExtractMeshExtractMeshFacesByEdgeLengthSvg: string;

			export const ExtractMeshExtractMeshPartSvg: string;

			export const ExtrudeSvg: string;

			export const ExtrudeExtrudeSolidSurfaceSidebarSurfaceCreationExtrudeCurveTaperedSvg: string;

			export const ExtrudeSolidSvg: string;

			export const ExtrudeSolidBossSvg: string;

			export const ExtrudeSolidExtrudeCurveAlongCurveSvg: string;

			export const ExtrudeSolidExtrudeCurveAlongSubcurveSvg: string;

			export const ExtrudeSolidExtrudeCurveToPointSvg: string;

			export const ExtrudeSolidExtrudeSurfaceAlongCurveSvg: string;

			export const ExtrudeSolidExtrudeSurfaceAlongSubcurveSvg: string;

			export const ExtrudeSolidExtrudeSurfaceTaperedSvg: string;

			export const ExtrudeSolidExtrudeSurfaceToPointSvg: string;

			export const ExtrudeSolidRibSvg: string;

			export const ExtrudeSolidSlabFromPolylineSvg: string;

			export const ExtrudeSolidSolidsSidebarExtrudeClosedPlanarCurveSvg: string;

			export const ExtrudeSolidSolidsSidebarSolidCreationExtrudeSurfaceSvg: string;

			export const ExtrudeSurfaceSidebarExtrudeAlongSubcurveSvg: string;

			export const ExtrudeSurfaceSidebarSurfaceCreationExtrudeAlongCurveSvg: string;

			export const ExtrudeSurfaceSidebarSurfaceCreationExtrudeCurveNormalToSurfaceSvg: string;

			export const ExtrudeSurfaceSidebarSurfaceCreationExtrudeStraightSvg: string;

			export const ExtrudeSurfaceSidebarSurfaceCreationExtrudeToPointSvg: string;

			export const FileAutoSaveSvg: string;

			export const FileExportSvg: string;

			export const FileExportBitmapsSvg: string;

			export const FileIncrementalSaveSvg: string;

			export const FileNotesSvg: string;

			export const FilePopupStandardSTLToolsSaveSvg: string;

			export const FilePopupSTLToolsSaveAsSvg: string;

			export const FileRevertSvg: string;

			export const FileSaveAsTemplateFileSvg: string;

			export const FileSaveGeometryOnlySvg: string;

			export const FileSaveSmallSvg: string;

			export const FileSetWorkingDirectorySvg: string;

			export const FileStandardNewFileSvg: string;

			export const FileStandardSTLToolsImportMergeSvg: string;

			export const FileStandardSTLToolsOpenSvg: string;

			export const FileWorksessionWorksessionSvg: string;

			export const GeneralUtilitySvg: string;

			export const GeneralUtilityGeneralUtilityDivideCurveSvg: string;

			export const GeneralUtilityGeneralUtilityDivideCurveByDistanceSvg: string;

			export const GeneralUtilityGeneralUtilityExportSerializedEdgesSvg: string;

			export const GeneralUtilityGeneralUtilityExportSerializedPointsSvg: string;

			export const GeneralUtilityGeneralUtilityMeanCurvesSvg: string;

			export const GeneralUtilityGeneralUtilityMeanSurfaceSvg: string;

			export const GeneralUtilityGeneralUtilityRemoveOverlappedPointsSvg: string;

			export const GeneralUtilityGeneralUtilitySerializeEdgesSvg: string;

			export const GeneralUtilityGeneralUtilitySerializeObjectsNameSvg: string;

			export const GeneralUtilityGeneralUtilitySerializePointsSvg: string;

			export const GeneralUtilityGeneralUtilitySurfaceFromControlGridSvg: string;

			export const GeneralUtilityGeneralUtilitySurfaceFromGridSvg: string;

			export const GeneralUtilityGeneralUtilityTagObjectsNamesSvg: string;

			export const GeneralUtilityGeneralUtilityTagWithSerializedDataSvg: string;

			export const GeneralUtilityGeneralUtilityUnifyCurvesDirectionSvg: string;

			export const GeometryFixSvg: string;

			export const GeometryFixEdgeToolsJoin2NakedEdgesSvg: string;

			export const GeometryFixInvertHideSvg: string;

			export const GeometryFixMain1JoinSvg: string;

			export const GeometryFixMain1SolidsSidebarTrimSvg: string;

			export const GeometryFixMain2ExplodeSvg: string;

			export const GeometryFixMain2SplitSvg: string;

			export const GeometryFixMain2SplitSurfaceByIsocurveSvg: string;

			export const GeometryFixOrganicHideObjectsSvg: string;

			export const GeometryFixOrganicShowObjectsSvg: string;

			export const GeometryFixPointsOffSvg: string;

			export const GeometryFixStandardUndoRedoSvg: string;

			export const GeometryFixStandardUndoUndoSvg: string;

			export const GeometryFixSTLToolsEdgeToolsNewInV6RemovNakedMicroEdgesSvg: string;

			export const GeometryFixSurfaceToolsDetachTrimSvg: string;

			export const GeometryFixSurfaceToolsShrinkTrimmedSurfaceToEdgeSvg: string;

			export const GeometryFixTransformSmoothSvg: string;

			export const GeometryFixUntrimSurfaceSvg: string;

			export const GeometryFixVisibilityShowSelectedObjectsSvg: string;

			export const GrasshopperPluginListSvg: string;

			export const GridUtilitySvg: string;

			export const GridUtilityGridUtilityChangeGridDensitySvg: string;

			export const GridUtilityGridUtilityChangeGridSeamSvg: string;

			export const GridUtilityGridUtilityCleanOverlapedGridPointsSvg: string;

			export const GridUtilityGridUtilityCloseGridSvg: string;

			export const GridUtilityGridUtilityCompactGridToRemoveHolesSvg: string;

			export const GridUtilityGridUtilityConvertRectangularGridToDiagonalOneSvg: string;

			export const GridUtilityGridUtilityConvertRectangularGridToDiamondOneSvg: string;

			export const GridUtilityGridUtilityExtendGridSvg: string;

			export const GridUtilityGridUtilityExtractCenterGridSvg: string;

			export const GridUtilityGridUtilityMeanGridsSvg: string;

			export const GridUtilityGridUtilityOffsetGridByImageHeightfieldSvg: string;

			export const GridUtilityGridUtilityOffsetPointsSvg: string;

			export const GridUtilityGridUtilityReverseGridUAndOrVDirectionsSvg: string;

			export const GridUtilityGridUtilityReverseRowsDirectionSvg: string;

			export const GridUtilityGridUtilityShiftGridRowsAndOrColumnsSvg: string;

			export const GridUtilityGridUtilityShuffleGridPointsUsingAttratorsSvg: string;

			export const GridUtilityGridUtilitySwapGridUVDirectionsSvg: string;

			export const GridUtilityGridUtilityTrimGridSvg: string;

			export const GridUtilityGridUtilityWeave2GridsIntoOneGridSvg: string;

			export const GroupingSvg: string;

			export const GroupingAddToGroupSvg: string;

			export const GroupingMain1MainGroupSvg: string;

			export const GroupingMain1MainUngroupSvg: string;

			export const GroupingRemoveFromGroupSvg: string;

			export const GroupingSetGroupNameSvg: string;

			export const GumballSvg: string;

			export const GumballGumballAlignmentCPlaneSvg: string;

			export const GumballGumballAlignmentToObjectSvg: string;

			export const GumballGumballAlignmentToWorldSvg: string;

			export const GumballNewInV6GumballAutoresetSvg: string;

			export const GumballRelocateGumballSvg: string;

			export const HelpSvg: string;

			export const HelpCommandContextHelpSvg: string;

			export const HelpDisplayAllCommandsSvg: string;

			export const HelpStandardHelpTopicsSvg: string;

			export const HideClustersSvg: string;

			export const HistorySvg: string;

			export const HistoryRecordHistorySvg: string;

			export const HistorySelectHistorySelectChildrenSvg: string;

			export const HistorySelectHistorySelectParentsSvg: string;

			export const HistorySelectSelectHistorySelectObjectsWithHistorySvg: string;

			export const HistoryStopHistoryRecordingSvg: string;

			export const HistoryUnlockObjectsWithHistorySvg: string;

			export const HistoryUpdateHistoryOnAllObjectsSvg: string;

			export const HistoryUpdateHistoryOnSelectedObjectsSvg: string;

			export const HolesSvg: string;

			export const HolesSolidEditingSolidToolsPlaceHoleSvg: string;

			export const HolesSolidEditingSolidToolsRoundHoleSvg: string;

			export const HolesSolidToolsArrayHoleSvg: string;

			export const HolesSolidToolsArrayHolePolarSvg: string;

			export const HolesSolidToolsMakeHoleSvg: string;

			export const HolesSolidToolsMoveHoleSvg: string;

			export const HolesSolidToolsNewInV6CopyHoleSvg: string;

			export const HolesSolidToolsRevolvedHoleSvg: string;

			export const HolesSolidToolsRotateHoleSvg: string;

			export const HolesSolidToolsUntrimAllHolesSvg: string;

			export const HolesSolidToolsUntrimHolesSvg: string;

			export const HTMLSvg: string;

			export const HTMLHideWebBrowserSvg: string;

			export const HTMLUtilitiesWebBrowserSvg: string;

			export const IntersectSelfSvg: string;

			export const IsometricSvg: string;

			export const IsometricIsometricNESvg: string;

			export const IsometricIsometricNWSvg: string;

			export const IsometricIsometricSESvg: string;

			export const IsometricIsometricSWSvg: string;

			export const LayerBookSvg: string;

			export const LayerBookLayerBookSvg: string;

			export const LayerBookLayerbookNextSvg: string;

			export const LayerBookLayerbookPauseSvg: string;

			export const LayerBookLayerbookPreviousSvg: string;

			export const LayerbookPrepareToSaveSvg: string;

			export const LayerChangeToCurrentLayerSvg: string;

			export const LayerChangeObjectLayerSvg: string;

			export const LayerCloseLayersSvg: string;

			export const LayerCopyObjectsToLayerSvg: string;

			export const LayerDuplicateLayerSvg: string;

			export const LayerMatchObjectLayerSvg: string;

			export const LayerOneLayerOffSvg: string;

			export const LayerSetCurrentLayerSvg: string;

			export const LayerSetCurrentLayerToObjectSvg: string;

			export const LayerStandardLayersSvg: string;

			export const LayoutImportLayoutSvg: string;

			export const LayoutPanelNewInV7Svg: string;

			export const LensLengthSvg: string;

			export const LensLength00DollyZoom00Svg: string;

			export const LightToolsSvg: string;

			export const LightsSvg: string;

			export const LightsPropertiesRenderToolsLightPropertiesSvg: string;

			export const LightsRenderToolsBounceHighlightSvg: string;

			export const LightsRenderToolsDirectionalLightSvg: string;

			export const LightsRenderToolsEditLightByHighlightSvg: string;

			export const LightsRenderToolsLinearLightSvg: string;

			export const LightsRenderToolsPointLightSvg: string;

			export const LightsRenderToolsRectangularLightSvg: string;

			export const LightsRenderToolsStandardSpotlightSvg: string;

			export const LightToolsRenderToolsAddASpotlightFromCurrentViewSvg: string;

			export const LightToolsRenderToolsEditLightByLookingSvg: string;

			export const LightToolsRenderToolsNewSpotlightByLookingSvg: string;

			export const LightToolsRenderToolsSetSpotlightToViewSvg: string;

			export const LightToolsRenderToolsSetViewToSpotlightSvg: string;

			export const LinesSvg: string;

			export const LinesCurveDrawingLineSvg: string;

			export const LinesCurveDrawingLineNormalToSurfaceSvg: string;

			export const LinesCurveDrawingLinePerpendicularFromCurveSvg: string;

			export const LinesCurveDrawingLinePerpendicularToCurveSvg: string;

			export const LinesCurveDrawingLineTangentFromCurveSvg: string;

			export const LinesCurveDrawingLineVerticalToCPlaneSvg: string;

			export const LinesCurveDrawingLineVerticalToCPlaneFromMidpointSvg: string;

			export const LinesCurveDrawingSurfaceNormalBothSidesSvg: string;

			export const LinesLineAngledSvg: string;

			export const LinesLineAngledFromMidpointSvg: string;

			export const LinesLineBisectorSvg: string;

			export const LinesLineBisectorFromMidpointSvg: string;

			export const LinesLineBy4PointsSvg: string;

			export const LinesLineBy4PointsFromMidpointSvg: string;

			export const LinesLineFromMidpointSvg: string;

			export const LinesLinePerpendicularTo2CurvesSvg: string;

			export const LinesLineTangentAndPerpendicularToCurvesSvg: string;

			export const LinesLineTangentTo2CurvesSvg: string;

			export const LinesLineThroughPointsSvg: string;

			export const LinesMainCurveDrawingLineSegmentsSvg: string;

			export const LinesMainCurveDrawingPolylineSvg: string;

			export const LinesPolylineOnMeshSvg: string;

			export const LinesPolylineThroughPointsSvg: string;

			export const LockSvg: string;

			export const LookAboutSvg: string;

			export const LookAboutLookDownSvg: string;

			export const LookAboutLookLeftSvg: string;

			export const LookAboutLookRightSvg: string;

			export const LookAboutLookUpSvg: string;

			export const Main1Svg: string;

			export const Main1MainCopyInPlaceSvg: string;

			export const Main1MainEditPointsOffSvg: string;

			export const Main1MainTextObjectSvg: string;

			export const Main1PointEditMainEditPointsOnSvg: string;

			export const Main1PolygonMainCurveDrawingPolygonCenterRadiusSvg: string;

			export const Main1ScaleTransformMainScale2DSvg: string;

			export const Main1ScaleTransformMainScale3DSvg: string;

			export const Main1TransformDeformationToolsMainFlowAlongSurfaceSvg: string;

			export const Main1TransformMainCopySvg: string;

			export const Main2Svg: string;

			export const Main2MeshToolsMainMeshCreationMeshFromSurfacePolysurfaceSvg: string;

			export const Main2PointMainSinglePointSvg: string;

			export const Main2RectangleMainCurveDrawingRectangleCornerToCornerSvg: string;

			export const Main2SurfaceToolsMainFilletSurfaceSvg: string;

			export const Main2TransformMainAlignObjectsSvg: string;

			export const Main2TransformMainRotate2DSvg: string;

			export const Main2TransformMainRotate3DSvg: string;

			export const ManagePatternsSvg: string;

			export const ManagePatternsManagePatterns2DPatternsManagerSvg: string;

			export const ManagePatternsManagePatterns3DPatternsManagerSvg: string;

			export const ManagePatternsManagePatternsLoad2DPatternsSvg: string;

			export const ManagePatternsManagePatternsLoad3DPatternsSvg: string;

			export const ManagePatternsManagePatternsSave2DCustomPatternsSvg: string;

			export const ManagePatternsManagePatternsSave3DCustomPatternsSvg: string;

			export const MassPropertiesSvg: string;

			export const MassPropertiesAreaSvg: string;

			export const MassPropertiesAreaMomentsSvg: string;

			export const MassPropertiesHydrostaticsSvg: string;

			export const MassPropertiesVolumeSvg: string;

			export const MassPropertiesVolumeCentroidSvg: string;

			export const MassPropertiesVolumeMomentsSvg: string;

			export const MeshBooleansSvg: string;

			export const MeshBooleansMeshBooleanDifferenceSvg: string;

			export const MeshBooleansMeshBooleanIntersectionSvg: string;

			export const MeshBooleansMeshBooleanSplitSvg: string;

			export const MeshBooleansMeshToolsMeshBooleanUnionSvg: string;

			export const MeshCreationSvg: string;

			export const MeshCreationExtractMeshFromNURBSControlPolygonSvg: string;

			export const MeshCreationMeshBoxSvg: string;

			export const MeshCreationMeshConeSvg: string;

			export const MeshCreationMeshCylinderSvg: string;

			export const MeshCreationMeshEllipsoidFromCenterSvg: string;

			export const MeshCreationMeshFromClosedPolylineSvg: string;

			export const MeshCreationMeshPlaneSvg: string;

			export const MeshCreationMeshSphereSvg: string;

			export const MeshCreationMeshTConeSvg: string;

			export const MeshCreationMeshTorusSvg: string;

			export const MeshToolsSvg: string;

			export const MeshToolsAddAMeshFaceSvg: string;

			export const MeshToolsAlignMeshVerticesToToleranceSvg: string;

			export const MeshToolsApplyMeshToNURBSSurfaceSvg: string;

			export const MeshToolsApplyMeshUVNSvg: string;

			export const MeshToolsCollapseMeshToolbarSvg: string;

			export const MeshToolsCullDegenerateMeshFacesSvg: string;

			export const MeshToolsDeleteMeshFacesSvg: string;

			export const MeshToolsFillAllHolesInMeshSvg: string;

			export const MeshToolsMerge2MeshFacesSvg: string;

			export const MeshToolsMergeFacesSvg: string;

			export const MeshToolsMeshFromLinesCopySvg: string;

			export const MeshToolsMeshCreationMeshPatchSvg: string;

			export const MeshToolsMeshCreationNewInV6MeshFromLinesSvg: string;

			export const MeshToolsMeshRepairWizardSvg: string;

			export const MeshToolsMeshSplitSvg: string;

			export const MeshToolsMeshTrimSvg: string;

			export const MeshToolsNewInV6AddNgonsToMeshSvg: string;

			export const MeshToolsNewInV6DeleteMeshNgonsSvg: string;

			export const MeshToolsOffsetMeshSvg: string;

			export const MeshToolsRebuildMeshSvg: string;

			export const MeshToolsRebuildMeshNormalsSvg: string;

			export const MeshToolsReduceMeshPolygonCountSvg: string;

			export const MeshToolsSplitDisjointMeshSvg: string;

			export const MeshToolsSwapMeshEdgeSvg: string;

			export const MeshToolsTriangulateNonPlanarQuadsSvg: string;

			export const MeshToolsWeldSelectedMeshVerticesSvg: string;

			export const MeshUtilitiesAppendToMeshSvg: string;

			export const MeshUtilitiesAutoPullOffSvg: string;

			export const MeshUtilitiesAutoPullOnSvg: string;

			export const MeshUtilitiesBevelSvg: string;

			export const MeshUtilitiesChainSvg: string;

			export const MeshUtilitiesDoneSvg: string;

			export const MeshUtilitiesExtrudeMeshSvg: string;

			export const MeshUtilitiesFromEdgeSvg: string;

			export const MeshUtilitiesInsertEdgeLoopSvg: string;

			export const MeshUtilitiesInsertEdgeRingSvg: string;

			export const MeshUtilitiesMainSvg: string;

			export const MeshUtilitiesNGonSvg: string;

			export const MeshUtilitiesNoChainSvg: string;

			export const MeshUtilitiesQuadSvg: string;

			export const MeshUtilitiesSelectEdgeRingSvg: string;

			export const MeshUtilitiesStitchSvg: string;

			export const MeshUtilitiesSubDCreaseSvg: string;

			export const MeshUtilitiesSubDInsetSvg: string;

			export const MeshUtilitiesSubDRemoveCreaseSvg: string;

			export const MeshUtilitiesTriangleSvg: string;

			export const MeshUtilitiesUndoSvg: string;

			export const MoveSvg: string;

			export const MoveEditCurveWithFixedLengthSvg: string;

			export const MoveMoveSubcurveSvg: string;

			export const MoveNormalSvg: string;

			export const MoveSoftTransformSvg: string;

			export const MoveSoftEditSurfaceSvg: string;

			export const MoveTransformSoftEditCurveSvg: string;

			export const MoveVerticalSvg: string;

			export const NewInV6NotificationsToggleSvg: string;

			export const NewInV7Svg: string;

			export const NotoolbuttonSvg: string;

			export const ObjectSnapSvg: string;

			export const ObjectSnapCenterSvg: string;

			export const ObjectSnapDisableEnableObjectSnapSvg: string;

			export const ObjectSnapEndPointMidCenIntTanPerpAndQuadSvg: string;

			export const ObjectSnapGridSizeSvg: string;

			export const ObjectSnapHideObjectSnapToolbarSvg: string;

			export const ObjectSnapIntersectionSvg: string;

			export const ObjectSnapNoObjectSnapSvg: string;

			export const ObjectSnapOrthoToggleSvg: string;

			export const ObjectSnapOsnapAlongLineSvg: string;

			export const ObjectSnapOSnapAlongParallelSvg: string;

			export const ObjectSnapOsnapBetweenSvg: string;

			export const ObjectSnapOSnapClearPersistentObjectSnapsSvg: string;

			export const ObjectSnapOSnapEndSvg: string;

			export const ObjectSnapOSnapFromSvg: string;

			export const ObjectSnapOSnapKnotSvg: string;

			export const ObjectSnapOsnapMidpointSvg: string;

			export const ObjectSnapOSnapNearSvg: string;

			export const ObjectSnapOSnapOnCurveSvg: string;

			export const ObjectSnapOSnapOnPolysurfaceSvg: string;

			export const ObjectSnapOSnapOnSurfaceSvg: string;

			export const ObjectSnapOsnapPointSvg: string;

			export const ObjectSnapOSnapVertexSvg: string;

			export const ObjectSnapPerpendicularFromSvg: string;

			export const ObjectSnapPerpendicularToSvg: string;

			export const ObjectSnapPersistentCenterSvg: string;

			export const ObjectSnapPersistentEndSvg: string;

			export const ObjectSnapPersistentEndPointMidCenIntTanPerpAndQuadSvg: string;

			export const ObjectSnapPersistentIntersectionSvg: string;

			export const ObjectSnapPersistentKnotSvg: string;

			export const ObjectSnapPersistentMidpointSvg: string;

			export const ObjectSnapPersistentNearSvg: string;

			export const ObjectSnapPersistentOnCurveSvg: string;

			export const ObjectSnapPersistentOnPolysurfaceSvg: string;

			export const ObjectSnapPersistentOnSurfaceSvg: string;

			export const ObjectSnapPersistentPerpendicularToSvg: string;

			export const ObjectSnapPersistentPointSvg: string;

			export const ObjectSnapPersistentQuadrantSvg: string;

			export const ObjectSnapPersistentTangentToSvg: string;

			export const ObjectSnapQuadrantSvg: string;

			export const ObjectSnapSetOrthoAngleSvg: string;

			export const ObjectSnapShowObjectSnapToolbarSvg: string;

			export const ObjectSnapSmartTrackingOffSvg: string;

			export const ObjectSnapSmartTrackingOnSvg: string;

			export const ObjectSnapSnapToMeshObjectSvg: string;

			export const ObjectSnapSnapToLockedToggleSvg: string;

			export const ObjectSnapTangentFromSvg: string;

			export const ObjectSnapTangentToSvg: string;

			export const ObjectSnapVertexSvg: string;

			export const OrganicSvg: string;

			export const OrganicGumballGumballSvg: string;

			export const OrganicGumballNewInV6DragStrengthSvg: string;

			export const OrganicInsertEditPointSvg: string;

			export const OrganicMoveWorldXSvg: string;

			export const OrganicMoveWorldYSvg: string;

			export const OrganicMoveWorldYSvgOrganicMoveWorldYSvg: string;

			export const OrganicMoveWorldZSvg: string;

			export const OrganicMoveWorldZSvgOrganicMoveWorldZSvg: string;

			export const OrganicMoveXSvg: string;

			export const OrganicMoveYSvg: string;

			export const OrganicMoveYSvgOrganicMoveYSvg: string;

			export const OrganicMoveZSvg: string;

			export const OrganicMoveZSvgOrganicMoveZSvg: string;

			export const OrganicPointEditDragModeSetDragModeSvg: string;

			export const OrganicPointEditInsertKnotSvg: string;

			export const OrganicPointEditRemoveKnotSvg: string;

			export const OrganicPopupStandardSTLToolsDisplayShadedViewportSvg: string;

			export const OrganicPopupStandardSTLToolsDisplayWireframeViewportSvg: string;

			export const OrganicSelectSelectPointsLassoPointsSvg: string;

			export const OrganicTransformMoveWorldXSvg: string;

			export const OrganicTransformMoveXSvg: string;

			export const PanelSvg: string;

			export const PanelingToolsSvg: string;

			export const PanelingToolsPanelingTools2DPatternsManagerSvg: string;

			export const PanelingToolsPanelingToolsGridArraySvg: string;

			export const PanelingToolsPanelingToolsGridDirectionSvg: string;

			export const PanelingToolsPanelingToolsOffsetEdgesSvg: string;

			export const PanelingToolsPanelingToolsPanelingToolsScriptingSvg: string;

			export const PanelingToolsPanelingToolsPanelBySubdivideSvg: string;

			export const PanelingToolsPanelingToolsPanelGridSvg: string;

			export const PanelingToolsPanelingToolsSurfaceFromControlGridSvg: string;

			export const PanelingToolsPanelingToolsSurfaceFromGridSvg: string;

			export const PanelsUtilitySvg: string;

			export const PanelsUtilityPanelsUtilityAnalyzeFlatFacesPanelsSvg: string;

			export const PanelsUtilityPanelsUtilityCreatePlanarLipsSvg: string;

			export const PanelsUtilityPanelsUtilityExtrudeEdgesSvg: string;

			export const PanelsUtilityPanelsUtilityFinEdgesSvg: string;

			export const PanelsUtilityPanelsUtilityGroupSmilarCurvesSvg: string;

			export const PanelsUtilityPanelsUtilityOffsetEdgesSvg: string;

			export const PanelsUtilityPanelsUtilityOffsetFacesBorderSvg: string;

			export const PanelsUtilityPanelsUtilityUnifyFacesDirectionSvg: string;

			export const PanelsUtilityPanelsUtilityUnrollEdgesSvg: string;

			export const PanelsUtilityPanelsUtilityUnrollFacesSvg: string;

			export const PanelsUtilityPanelsUtilityUnrollPointsSvg: string;

			export const PanelFromGridSvg: string;

			export const PanelFromGridPanelFromGridOrientToGridSvg: string;

			export const PanelFromGridPanelFromGridPanel3DCustomSvg: string;

			export const PanelFromGridPanelFromGridPanel3DCustomVariableSvg: string;

			export const PanelFromGridPanelFromGridPanelCustomSvg: string;

			export const PanelFromGridPanelFromGridPanelCustom2DVariableSvg: string;

			export const PanelFromGridPanelFromGridPanelGridSvg: string;

			export const PanelFromGridPanelFromGridPanelGrid3DSvg: string;

			export const PanelFromGridPanelFromGridPanelQuadSvg: string;

			export const PanelPanelPanelBySubdivideSvg: string;

			export const PanelPanelPanelPointsOnSurfaceSvg: string;

			export const PanelPanelTriangulatePointsSvg: string;

			export const PlanarDifferenceSvg: string;

			export const PlanarIntersectionSvg: string;

			export const PlanarUnionSvg: string;

			export const PlaneSvg: string;

			export const PlaneNewInV6InfinitePlaneSvg: string;

			export const PlaneSurfaceSidebarSurfaceCreationCuttingPlaneSvg: string;

			export const PlaneSurfaceSidebarSurfaceCreationVerticalPlaneSvg: string;

			export const PlaneSurfaceSidebarViewportLayoutSurfaceCreationPictureSvg: string;

			export const PointSvg: string;

			export const PointAddToPointCloudSvg: string;

			export const PointClosestPointSvg: string;

			export const PointDivideCurveByLengthSvg: string;

			export const PointDivideCurveByNumberOfSegmentsSvg: string;

			export const PointEditSvg: string;

			export const PointEditCullControlPolygonBackfacesSvg: string;

			export const PointEditEditControlPointWeightSvg: string;

			export const PointEditHandlebarEditorSvg: string;

			export const PointEditInsertAControlPointSvg: string;

			export const PointEditInsertKinkSvg: string;

			export const PointEditMoveUVNSvg: string;

			export const PointEditPointsOffSelectedObjectsSvg: string;

			export const PointEditRemoveACurveControlPointSvg: string;

			export const PointEditTurnMoveUVNOffSvg: string;

			export const PointMarkFociSvg: string;

			export const PointPointCloudSvg: string;

			export const PointPointGridSvg: string;

			export const PointRemoveFromPointCloudSvg: string;

			export const PolygonSvg: string;

			export const PolygonCurveDrawingPolygonStarSvg: string;

			export const PolygonCurveDrawingSquareCenterCornerSvg: string;

			export const PolygonCurveDrawingSquareEdgeSvg: string;

			export const PolygonPolygonCircumscribedCenterRadiusSvg: string;

			export const PolygonPolygonEdgeSvg: string;

			export const PolygonSquareCircumscribedCenterRadiusSvg: string;

			export const PopupSvg: string;

			export const PopupRenderPreviewViewportSvg: string;

			export const PopupSetViewStandardViewZoomExtentsAllViewportsSvg: string;

			export const PopupStandardVisibilityLockLockObjectsSvg: string;

			export const PopupStandardVisibilityVisibilityLockLockUnlockObjectsSvg: string;

			export const RectangleSvg: string;

			export const RectangleCurveDrawingRectangle3PointsSvg: string;

			export const RectangleCurveDrawingRectangleVerticalSvg: string;

			export const RectangleCurveDrawingRoundedRectangleSvg: string;

			export const RectangleCurveDrawingRoundedRectangleConicCornersSvg: string;

			export const RectangleRectangleCenterCornerSvg: string;

			export const RefitTrimSvg: string;

			export const ReflectPauseRemoveExistingSymmetrySvg: string;

			export const RemovePerFaceColorsSvg: string;

			export const RenderSidebarPerspectiveViewSvg: string;

			export const RenderToolsSvg: string;

			export const RenderToolsApplyCurvePipingSvg: string;

			export const RenderToolsApplyEdgeSofteningSvg: string;

			export const RenderToolsEnvironmentsSvg: string;

			export const RenderToolsHideMappingWidgetsSvg: string;

			export const RenderToolsLightsPanelSvg: string;

			export const RenderToolsMatchMaterialPropertiesSvg: string;

			export const RenderToolsMaterialsPanelSvg: string;

			export const RenderToolsNewInV6ApplyThicknessSvg: string;

			export const RenderToolsRenderPreviewSvg: string;

			export const RenderToolsSetMaterialSourceLayerSvg: string;

			export const RenderToolsSetRenderColorSvg: string;

			export const RenderToolsSetRenderGlossColorSvg: string;

			export const RenderToolsShowMappingWidgetsSvg: string;

			export const RenderToolsStandardRenderSvg: string;

			export const RenderToolsSunSvg: string;

			export const RenderToolsSynchronizeRenderColorsSvg: string;

			export const RenderToolsTextureToolsToggleTexturesPanelSvg: string;

			export const RenderToolsToggleLibrariesPanelSvg: string;

			export const ScaleSvg: string;

			export const ScaleScale1DSvg: string;

			export const ScaleScaleByPlaneSvg: string;

			export const ScaleScaleNonUniformSvg: string;

			export const ScriptingSamplesSvg: string;

			export const ScriptingSamplesDivideCrvVariableSvg: string;

			export const ScriptingSamplesDivideCurveByDirectDistanceSvg: string;

			export const ScriptingSamplesDivideCurveSpanByDistanceSvg: string;

			export const ScriptingSamplesDivideCurveSpanByNumberOrDistanceSvg: string;

			export const ScriptingSamplesDivideMultiCrvsVariableSvg: string;

			export const ScriptingSamplesDivideSrfVariableSvg: string;

			export const ScriptingSamplesDivideSurfaceByDirectDistanceSvg: string;

			export const ScriptingSamplesDivideSurfaceUVSpanByNumberOrDistanceSvg: string;

			export const ScriptingSamplesExtrude2CurvesSvg: string;

			export const ScriptingSamplesGridByArraySvg: string;

			export const ScriptingSamplesGridByArrayRhinoScriptSvg: string;

			export const ScriptingSamplesGridByArrayRhinoScript2Svg: string;

			export const ScriptingSamplesGridByPolarArraySvg: string;

			export const ScriptingSamplesGridBySurfaceDistanceSvg: string;

			export const ScriptingSamplesGridBySurfaceDomainSvg: string;

			export const ScriptingSamplesGridBySurfaceDomainRhinoScriptSampleSvg: string;

			export const ScriptingSamplesGridBySurfaceDomainVariableAttractorCurvesSvg: string;

			export const ScriptingSamplesGridBySurfaceDomainVariableAttractorPointsSvg: string;

			export const ScriptingSamplesGridBySurfaceDomainVariableGaussCurvatureSvg: string;

			export const ScriptingSamplesGridBySurfaceDomainVariableRandomSvg: string;

			export const ScriptingSamplesGridBySurfaceUVSvg: string;

			export const ScriptingSamplesGridByUVCurvesSvg: string;

			export const ScriptingSamplesGridByUCurvesSvg: string;

			export const ScriptingSamplesGridObjectByDirectionSvg: string;

			export const ScriptingSamplesPanelingToolsScriptingSvg: string;

			export const ScriptingSamplesPanelBySubdivideSvg: string;

			export const ScriptingSamplesPanelCustomByGridSvg: string;

			export const ScriptingSamplesPanelEdgesByGridSvg: string;

			export const ScriptingSamplesPanelEdgesByGridWithBaseObjectSvg: string;

			export const ScriptingSamplesPanelFacesByGridSvg: string;

			export const ScriptingSamplesPanelFacesByGridWithBaseObjectSvg: string;

			export const ScriptingSamplesPanelFlatFacesByGridSvg: string;

			export const ScriptingSamplesPanelFlatFacesByGridScriptSvg: string;

			export const ScriptingSamplesPanelFlatFacesByGridWithBaseObjectSvg: string;

			export const ScriptingSamplesPanelFlatFacesByGridWithBaseObjectRhinoScriptSvg: string;

			export const ScriptingSamplesPanelRandomPointsAutoGeneratePointsSvg: string;

			export const ScriptingSamplesPanelRandomPointsSelectPointsSvg: string;

			export const ScriptingSamplesQuadsByGridSvg: string;

			export const ScriptingSamplesSrfVariableGrid1Svg: string;

			export const ScriptingSamplesSrfVariableGrid2Svg: string;

			export const ScriptingSamplesSurfaceFromControlGridSvg: string;

			export const ScriptingSamplesSurfaceFromGridRhinoScriptSampleSvg: string;

			export const SelDimOverrideSvg: string;

			export const SelDimTextOverrideSvg: string;

			export const SelectSvg: string;

			export const SelectChainSvg: string;

			export const SelectChainSelectChainWithG0ContinuitySvg: string;

			export const SelectChainSelectChainWithG1ContinuitySvg: string;

			export const SelectChainSelectChainWithG2ContinuitySvg: string;

			export const SelectCurvesSvg: string;

			export const SelectCurvesNewInV6SelectPlanarCurvesSvg: string;

			export const SelectCurvesNewInV6SelectSubCurveSvg: string;

			export const SelectCurvesSelectByLinetypeSvg: string;

			export const SelectCurvesSelectClosedCurvesSvg: string;

			export const SelectCurvesSelectLinesSvg: string;

			export const SelectCurvesSelectOpenCurvesSvg: string;

			export const SelectCurvesSelectPolylinesSvg: string;

			export const SelectCurvesSelectShortCurvesSvg: string;

			export const SelectCurvesSelSelfIntersectingCrvSvg: string;

			export const SelectHistorySvg: string;

			export const SelectInvertControlPointSelectionSvg: string;

			export const SelectInvertSelectionSvg: string;

			export const SelectMeshesSvg: string;

			export const SelectMeshesSelectPolysurfacesSelectSurfacesSelVisibleSvg: string;

			export const SelectNamedSelectionsSvg: string;

			export const SelectNewInV6SelectByFenceSvg: string;

			export const SelectNewInV6SelectByKeySvg: string;

			export const SelectNewInV6SelVolumeObjectSvg: string;

			export const SelectPointsSvg: string;

			export const SelectPointsAddNextUSvg: string;

			export const SelectPointsAddNextVSvg: string;

			export const SelectPointsAddPreviousUSvg: string;

			export const SelectPointsAddPreviousVSvg: string;

			export const SelectPointsDeselectConnectedPointsSvg: string;

			export const SelectPointsInvertPointSelectionSvg: string;

			export const SelectPointsNewInV6SelControlPointSvg: string;

			export const SelectPointsNewInV6SelectControlPointRegionSvg: string;

			export const SelectPointsNextUSvg: string;

			export const SelectPointsNextVSvg: string;

			export const SelectPointsPreviousUSvg: string;

			export const SelectPointsPreviousVSvg: string;

			export const SelectPointsSelectConnectedPointsSvg: string;

			export const SelectPointsSelectPointsByBrushingSvg: string;

			export const SelectPointsSelectUSvg: string;

			export const SelectPointsSelectUVSvg: string;

			export const SelectPointsSelectVSvg: string;

			export const SelectPointsShowHiddenPointsSvg: string;

			export const SelectPolysurfacesSvg: string;

			export const SelectPolysurfacesEdgeToolsSelectOpenPolysurfacesSvg: string;

			export const SelectPolysurfacesSelectClosedPolysurfacesSvg: string;

			export const SelectPolysurfacesSelectExtrusionsSvg: string;

			export const SelectSelectionFilterSvg: string;

			export const SelectSelectionFilterNoneSvg: string;

			export const SelectSelectAllBlockInstancesSvg: string;

			export const SelectSelectAllDuplicateObjectsSvg: string;

			export const SelectSelectBlocksByNameSvg: string;

			export const SelectSelectBy3DBoxSvg: string;

			export const SelectSelectByBrushingSvg: string;

			export const SelectSelectByCircleSvg: string;

			export const SelectSelectByColorSvg: string;

			export const SelectSelectByGroupNameSvg: string;

			export const SelectSelectByLayerSvg: string;

			export const SelectSelectByObjectIDSvg: string;

			export const SelectSelectByObjectNameSvg: string;

			export const SelectSelectBySphereSvg: string;

			export const SelectSelectChainSvg: string;

			export const SelectSelectCurvesSelectCurvesSvg: string;

			export const SelectSelectDimensionsSvg: string;

			export const SelectSelectDotsSvg: string;

			export const SelectSelectDuplicateObjectsSvg: string;

			export const SelectSelectHatchesSvg: string;

			export const SelectSelectLastCreatedObjectsSvg: string;

			export const SelectSelectLayerByNumberSvg: string;

			export const SelectSelectLightsSvg: string;

			export const SelectSelectMeshesSelectMeshesSvg: string;

			export const SelectSelectNoneSvg: string;

			export const SelectSelectNonManifoldObjectsSvg: string;

			export const SelectSelectPointsSvg: string;

			export const SelectSelectPointCloudsSvg: string;

			export const SelectSelectPolysurfacesSelectPolysurfacesSvg: string;

			export const SelectSelectPreviousSelectionSvg: string;

			export const SelectSelectSurfacesSelectSurfacesSvg: string;

			export const SelectSelectTextBlocksSvg: string;

			export const SelectSubDSvg: string;

			export const SelectSurfacesSvg: string;

			export const SelectSurfacesNewInV6SelectPicturesSvg: string;

			export const SelectSurfacesNewInV6SelectPlanarSurfacesSvg: string;

			export const SelectSurfacesSelectClosedSurfacesSvg: string;

			export const SelectSurfacesSelectOpenSurfacesSvg: string;

			export const SelectSurfacesSelectTrimmedSurfacesSvg: string;

			export const SelectSurfacesSelectUntrimmedSurfacesSvg: string;

			export const SetViewIsometricBlankSvg: string;

			export const SetViewNamedViewsPanelSvg: string;

			export const SetViewPlanViewOfCPlaneSvg: string;

			export const SetViewRenderSidebarSvg: string;

			export const SetViewRenderSidebarBackViewSvg: string;

			export const SetViewRenderSidebarBottomViewSvg: string;

			export const SetViewRenderSidebarFrontViewSvg: string;

			export const SetViewRenderSidebarLeftViewSvg: string;

			export const SetViewRenderSidebarRestoreViewByNameSvg: string;

			export const SetViewRenderSidebarTopViewSvg: string;

			export const SetViewStandardRenderSidebarRightViewSvg: string;

			export const SetViewStandardViewPanShiftRMBSvg: string;

			export const SetViewStandardViewRenderSidebarZoomSelectedAllViewportsSvg: string;

			export const SetViewStandardViewRotateCameraCtrlAltRMBSvg: string;

			export const SetViewStandardViewRotateViewCtrlShiftRMBSvg: string;

			export const SetViewViewportLayoutReadViewportLayoutFromFileSvg: string;

			export const SetViewViewportLayoutRenderSidebarChangeViewProjectionSvg: string;

			export const SetViewViewportLayoutRenderSidebarSetPerspectiveAngleSvg: string;

			export const SetViewViewCalibrate11ScaleSvg: string;

			export const SetViewViewRenderSidebarZoomLensSvg: string;

			export const SetViewViewTurntableSvg: string;

			export const SetViewViewTurntableOneCycleSvg: string;

			export const SetViewWalkAboutSvg: string;

			export const SolidsSidebarSvg: string;

			export const SolidsSidebarParaboloidVertexFocusSvg: string;

			export const SolidsSidebarPipeSvg: string;

			export const SolidsSidebarSolidCreationConeSvg: string;

			export const SolidsSidebarSolidCreationCylinderSvg: string;

			export const SolidsSidebarSolidCreationParaboloidSvg: string;

			export const SolidsSidebarSolidCreationPipeFlatCapsSvg: string;

			export const SolidsSidebarSolidCreationPipeRoundCapsSvg: string;

			export const SolidsSidebarSolidCreationPyramidSvg: string;

			export const SolidsSidebarSolidCreationTorusSvg: string;

			export const SolidsSidebarSolidCreationTruncatedPyramidSvg: string;

			export const SolidsSidebarSolidCreationTubeSvg: string;

			export const SolidsSidebarSolidToolsShellSvg: string;

			export const SolidsSidebarSphereSolidCreationSphereDiameterSvg: string;

			export const SolidsSidebarSphereSphereCenterRadiusSvg: string;

			export const SolidCreationSvg: string;

			export const SolidCreationExtrudeClosedPlanarCurveSvg: string;

			export const SolidCreationSphereCenterRadiusSvg: string;

			export const SolidEditingSvg: string;

			export const SolidEditingSolidToolsExtrudeFaceSvg: string;

			export const SolidEditingSolidToolsExtrudeFaceAlongPathSvg: string;

			export const SolidEditingSolidToolsMergeAllCoplanarFacesSvg: string;

			export const SolidEditingSolidToolsMergeTwoCoplanarFacesSvg: string;

			export const SolidEditingSolidToolsMoveFaceSvg: string;

			export const SolidEditingSolidToolsMoveFaceToABoundarySvg: string;

			export const SolidEditingSolidToolsMoveUntrimmedEdgeSvg: string;

			export const SolidEditingSolidToolsWireCutSvg: string;

			export const SolidToolsSvg: string;

			export const SolidToolsBlendEdgesSvg: string;

			export const SolidToolsBoolean2ObjectsSvg: string;

			export const SolidToolsBooleanSplitSvg: string;

			export const SolidToolsChamferEdgesSvg: string;

			export const SolidToolsCreateSolidSvg: string;

			export const SolidToolsFilletEdgesSvg: string;

			export const SolidToolsSolidToolsSolidCreationUnjoinEdgeSvg: string;

			export const SphereSvg: string;

			export const SphereSphere3PointsSvg: string;

			export const SphereSphere4PointsSvg: string;

			export const SphereSphereAroundCurveSvg: string;

			export const SphereSphereFitPointsSvg: string;

			export const SphereSphereFromCircleTangentToCurvesSvg: string;

			export const StandardSvg: string;

			export const StandardCloseLayersSvg: string;

			export const StandardCopyCtrlCSvg: string;

			export const StandardCutCtrlXSvg: string;

			export const StandardDisplayShadeSvg: string;

			export const StandardDisplayShadeAllViewportsSvg: string;

			export const StandardExportSvg: string;

			export const StandardObjectSnapsSvg: string;

			export const StandardPasteCtrlVSvg: string;

			export const StandardPasteToCurrentLayerSvg: string;

			export const StandardStandardToolsOptionsSvg: string;

			export const StandardViewportLayout4DefaultViewportsSvg: string;

			export const StandardViewportLayout4ViewportsSvg: string;

			export const StandardViewZoomByScaleFactorSvg: string;

			export const StandardViewZoomTargetSvg: string;

			export const StepSizeSvg: string;

			export const StepSizeStepSizeCustomStepsSvg: string;

			export const StepSizeStepSizeLargeStepsSvg: string;

			export const StepSizeStepSizeMediumLargeStepsSvg: string;

			export const StepSizeStepSizeMediumSmallStepsSvg: string;

			export const StepSizeStepSizeMediumStepsSvg: string;

			export const StepSizeStepSizeSmallStepsSvg: string;

			export const STLToolsSvg: string;

			export const STLToolsDisplayToggleFlatShadeModeSvg: string;

			export const STLToolsHideUnselectedControlPointsSvg: string;

			export const STLToolsMeshCreationSingleMeshFaceSvg: string;

			export const STLToolsSelectUnweldedMeshEdgePointsSvg: string;

			export const STLToolsShowControlPointsSvg: string;

			export const STLToolsVisibilityHideControlPointsSvg: string;

			export const SubDSvg: string;

			export const SubDLoftSvg: string;

			export const SubDBevelSvg: string;

			export const SubDEllipsoidSvg: string;

			export const SubDFillSubDHoleSvg: string;

			export const SubDInsertEdgeSvg: string;

			export const SubDMakeSubDFriendlyCrvSvg: string;

			export const SubDReflectSvg: string;

			export const SubDRepairSubDSvg: string;

			export const SubDSelectionFilterEdgesSvg: string;

			export const SubDSelectionFilterFacesSvg: string;

			export const SubDSelectionFilterVerticesSvg: string;

			export const SubDSelectSubDObjectsSvg: string;

			export const SubDSelSubDFriendlyCrvSvg: string;

			export const SubDSubDBoxSvg: string;

			export const SubDSubDConeSvg: string;

			export const SubDSubDCylinderSvg: string;

			export const SubDTorusSvg: string;

			export const SurfaceAnalysisDisplayCaptureViewportToClipboardSvg: string;

			export const SurfaceAnalysisSvg: string;

			export const SurfaceAnalysisDisplayCaptureViewportToFileSvg: string;

			export const SurfaceAnalysisDraftAngleAnalysisOffSvg: string;

			export const SurfaceAnalysisEdgeContinuitySvg: string;

			export const SurfaceAnalysisEnvironmentMapSvg: string;

			export const SurfaceAnalysisEnvironmentMapOffSvg: string;

			export const SurfaceAnalysisPointFromUVCoordinatesSvg: string;

			export const SurfaceAnalysisPointSetDeviationSvg: string;

			export const SurfaceAnalysisThicknessAnalysisSvg: string;

			export const SurfaceAnalysisThicknessAnalysisOffSvg: string;

			export const SurfaceAnalysisUVCoordinatesOfAPointSvg: string;

			export const SurfaceAnalysisZebraAnalysisSvg: string;

			export const SurfaceAnalysisZebraAnalysisOffSvg: string;

			export const SurfaceCreationSvg: string;

			export const SurfaceCreationNewInV6DevLoftSvg: string;

			export const SurfaceCreationRibbonOffsetSvg: string;

			export const SurfaceSidebarSvg: string;

			export const SurfaceSidebarSurfaceCreationSurfaceFromPlanarCurvesSvg: string;

			export const SurfaceSidebarSurfaceCreationLoftSvg: string;

			export const SurfaceSidebarSurfaceCreationPatchSvg: string;

			export const SurfaceSidebarSurfaceCreationRevolveSvg: string;

			export const SurfaceSidebarSurfaceCreationSurfaceFrom23Or4EdgeCurvesSvg: string;

			export const SurfaceSidebarSurfaceCreationSurfaceFromNetworkOfCurvesSvg: string;

			export const SurfaceSidebarSurfaceCreationSurfaceFromPointGridSvg: string;

			export const SurfaceToolsSvg: string;

			export const SurfaceToolsBlendSurfaceSvg: string;

			export const SurfaceToolsChamferSurfaceSvg: string;

			export const SurfaceToolsDivideAlongCreasesSvg: string;

			export const SurfaceToolsDivideAlongCreasesSplitAtTangentsSvg: string;

			export const SurfaceToolsEdgeToolsEdgeToolsMergeEdgeSvg: string;

			export const SurfaceToolsEdgeToolsRebuildEdgesSvg: string;

			export const SurfaceToolsEdgeToolsSplitEdgeSvg: string;

			export const SurfaceToolsFlattenSurfaceSvg: string;

			export const SurfaceToolsMakeSurfaceNonPeriodicSvg: string;

			export const SurfaceToolsMakeSurfacePeriodicSvg: string;

			export const SurfaceToolsMakeUniformUVSvg: string;

			export const SurfaceToolsMatchSurfaceMultipleMatchesSvg: string;

			export const SurfaceToolsMergeSurfacesSvg: string;

			export const SurfaceToolsOffsetSurfaceSvg: string;

			export const SurfaceToolsRebuildSurfaceSvg: string;

			export const SurfaceToolsRebuildUVSvg: string;

			export const SurfaceToolsSetSurfaceTangentSvg: string;

			export const SurfaceToolsSmashSvg: string;

			export const SurfaceToolsSymmetrySvg: string;

			export const SurfaceToolsTweenSurfacesSvg: string;

			export const SurfaceToolsUnrollDevelopableSurfaceSvg: string;

			export const SurfaceToolsVariableOffsetOfSurfaceSvg: string;

			export const SurfaceToolsVariableRadiusSurfaceBlendSvg: string;

			export const SurfaceToolsVariableRadiusSurfaceChamferSvg: string;

			export const TextureMappingSvg: string;

			export const TextureMappingApplyCylindricalMappingSvg: string;

			export const TextureMappingApplyPlanarMappingSvg: string;

			export const TextureMappingApplySphericalMappingSvg: string;

			export const TextureMappingApplySurfaceUVMappingSvg: string;

			export const TextureMappingMappingOffSvg: string;

			export const TextureMappingMappingOnSvg: string;

			export const TextureMappingMatchMappingSvg: string;

			export const TextureMappingRemoveMappingChannelSvg: string;

			export const TextureToolsSvg: string;

			export const TextureToolsDisableBumpMapSvg: string;

			export const TextureToolsDisableEnvironmentMapSvg: string;

			export const TextureToolsDisableTextureMapSvg: string;

			export const TextureToolsDisableTransparencyMapSvg: string;

			export const TextureToolsEnableBumpMapSvg: string;

			export const TextureToolsEnableEnvironmentMapSvg: string;

			export const TextureToolsEnableTextureMapSvg: string;

			export const TextureToolsRefreshAllTexturesSvg: string;

			export const ToolsSvg: string;

			export const ToolsCommandHistorySvg: string;

			export const ToolsOpenToolbarCollectionSvg: string;

			export const ToolsPlaceGISEarthAnchorPointSvg: string;

			export const ToolsPlugInManagerSvg: string;

			export const ToolsSaveAnOpenToolbarCollectionSvg: string;

			export const ToolsSaveCommandHistoryAsSvg: string;

			export const ToolsSaveOpenToolbarCollectionsSvg: string;

			export const TransformSvg: string;

			export const TransformDeformationToolsBendSvg: string;

			export const TransformDeformationToolsTaperSvg: string;

			export const TransformDeformationToolsTwistSvg: string;

			export const TransformFlowAlongCurveSvg: string;

			export const TransformMirrorSvg: string;

			export const TransformMirrorOn3PointPlaneSvg: string;

			export const TransformOrient2PointsSvg: string;

			export const TransformOrient3PointsSvg: string;

			export const TransformOrientCurveToEdgeSvg: string;

			export const TransformOrientOnSurfaceSvg: string;

			export const TransformOrientPerpendicularToCurveSvg: string;

			export const TransformProjectToCPlaneSvg: string;

			export const TransformRemapToCPlaneSvg: string;

			export const TransformSetPointsSvg: string;

			export const TransformShearSvg: string;

			export const UndoSvg: string;

			export const UndoClearUndoSvg: string;

			export const UndoRedoMultipleSvg: string;

			export const UndoUndoMultipleSvg: string;

			export const UndoUndoSelectedSvg: string;

			export const UtilitiesAttachGHSDataSvg: string;

			export const UtilitiesCalculatorSvg: string;

			export const UtilitiesClearRenderAndAnalysisMeshesSvg: string;

			export const UtilitiesExportOptionsSvg: string;

			export const UtilitiesImportOptionsSvg: string;

			export const UtilitiesLayerbookRewindSvg: string;

			export const UtilitiesOpenHyperlinkSvg: string;

			export const UtilitiesPackageManagerSvg: string;

			export const UtilitiesPurgeUnusedBlockDefinitionsAndLayersSvg: string;

			export const UtilitiesUtilitiesRPNCalculatorSvg: string;

			export const ViewSvg: string;

			export const ViewportLayoutSvg: string;

			export const ViewportLayout3DefaultViewportsSvg: string;

			export const ViewportLayout3ViewportsSvg: string;

			export const ViewportLayoutCloseCurrentViewportSvg: string;

			export const ViewportLayoutGridDisplayOffSvg: string;

			export const ViewportLayoutGridDisplayOnSvg: string;

			export const ViewportLayoutMaximizeRestoreViewportSvg: string;

			export const ViewportLayoutNewFloatingPerspectiveViewportSvg: string;

			export const ViewportLayoutNewFloatingViewportSvg: string;

			export const ViewportLayoutNewViewportSvg: string;

			export const ViewportLayoutSetLensLengthSvg: string;

			export const ViewportLayoutSplitViewportHorizontallySvg: string;

			export const ViewportLayoutSplitViewportVerticallySvg: string;

			export const ViewportLayoutSynchronizeViewsSvg: string;

			export const ViewportLayoutToggleFloatingViewportStateSvg: string;

			export const ViewportLayoutToggleViewportTabsSvg: string;

			export const ViewportLayoutViewportTabControlsSvg: string;

			export const ViewportLayoutVisibilityDisplayClippingPlaneSvg: string;

			export const ViewportLockViewportSvg: string;

			export const ViewSetRedrawOffSvg: string;

			export const ViewSetRedrawOnSvg: string;

			export const ViewTiltViewSvg: string;

			export const ViewViewportLayoutNewInV6OneViewSvg: string;

			export const ViewViewportLayoutToggleLinkedViewsSvg: string;

			export const VisibilitySvg: string;

			export const VisibilityDisplayEnableClippingPlaneSvg: string;

			export const VisibilityInvertSelectionAndHideControlPointsSvg: string;

			export const VisibilityLockNewInV6IsolateLockObjectsSvg: string;

			export const VisibilityLockUnlockSelectedObjectsSvg: string;

			export const VisibilityNewInV6IsolateObjectsSvg: string;

			export const VisibilityNewInV6UnisolateSvg: string;

			export const VisibilityNewInV6UnisolateLockSvg: string;

			export const VisibilityShowHiddenControlPointsSvg: string;

			export const VisibilityShowPointsSvg: string;

			export const WalkAboutLookaboutSvg: string;

			export const WalkAboutSvg: string;

			export const WalkAboutElevatorDownSvg: string;

			export const WalkAboutElevatorDown2Svg: string;

			export const WalkAboutElevatorUpSvg: string;

			export const WalkAboutLensLengthPresetsSvg: string;

			export const WalkAboutStepSizeFlyoutSvg: string;

			export const WalkAboutWalkBackSvg: string;

			export const WalkAboutWalkForwardSvg: string;

			export const WalkAboutWalkLeftSvg: string;

			export const WalkAboutWalkRightSvg: string;

			export const WeldingSvg: string;

			export const WeldingUnweldMeshSvg: string;

			export const WeldingUnweldMeshEdgeSvg: string;

			export const WeldingWeldMeshEdgeSvg: string;

			export const WeldingWeldMeshVerticesSvg: string;

			export const WorksessionSvg: string;

			export const WorksessionLimitReferenceModelSvg: string;

			export const Svg_CreateGridMacroSvg: string;

			export const Svg_ScriptingSamplesMacro122Svg: string;

			export const Svg_ScriptingSamplesMacro124Svg: string;

			export const Svg_ScriptingSamplesMacro90Svg: string;

			export const Tabs_PropMaterialSvg: string;

			export const Tabs_TabBoxEditSvg: string;

			export const Tabs_TabDocumentUsertextSvg: string;

			export const Tabs_TabEnvironmentsSvg: string;

			export const Tabs_TabGroundPlaneSvg: string;

			export const Tabs_TabLayerStatesSvg: string;

			export const Tabs_TabLayoutsSvg: string;

			export const Tabs_TabLibrariesSvg: string;

			export const Tabs_TabLightManagerIcoSvg: string;

			export const Tabs_TabMacroEditorSvg: string;

			export const Tabs_TabMeshRepairSvg: string;

			export const Tabs_TabMoveUVNSvg: string;

			export const Tabs_TabNamedCPlanesSvg: string;

			export const Tabs_TabNamedPositionsSvg: string;

			export const Tabs_TabNamedSelectionsSvg: string;

			export const Tabs_TabPointDeviationSvg: string;

			export const Tabs_TabRenderSettingsSvg: string;

			export const Tabs_TabSnapshotSvg: string;

			export const Tabs_TabSunSvg: string;

			export const Tabs_TabTexturesSvg: string;

			export const Tabs_NotificationsDefaultSvg: string;

			export const Tabs_NotificationsInfoSvg: string;

			export const Tabs_NotificationsSeriousSvg: string;

			export const Tabs_NotificationsWarningSvg: string;

			export const Tabs_PropertiesSvg: string;

			export const Tabs_TabCalculatorSvg: string;

			export const Tabs_TabDisplaySvg: string;

			export const Tabs_TabHelpSvg: string;

			export const Tabs_TabNamedViewsSvg: string;

			export const Tabs_TabNotesSvg: string;

			export const Tabs_TabRPNCalculatorSvg: string;

			export const Tabs_TabTutorialsSvg: string;

			export const Tabs_TabWebBrowserSvg: string;

			export const Tabs_TabObjectManagerSvg: string;

			export const LicenseDiscovery_anotherKeyPng: string;

			export const LicenseDiscovery_assignToAccountPng: string;

			export const LicenseDiscovery_assignToComputerPng: string;

			export const LicenseDiscovery_emailIconPng: string;

			export const LicenseDiscovery_enterAnotherKey2xPng: string;

			export const LicenseDiscovery_enterAnotherKey8xPng: string;

			export const LicenseDiscovery_enterLicenseKeyPng: string;

			export const LicenseDiscovery_enterPreviousLicenseKeyPng: string;

			export const LicenseDiscovery_errorIconPng: string;

			export const LicenseDiscovery_genericErrorIconPng: string;

			export const LicenseDiscovery_invalidLicensePng: string;

			export const LicenseDiscovery_licenseFoundPng: string;

			export const LicenseDiscovery_licenseInUsePng: string;

			export const LicenseDiscovery_loginPng: string;

			export const LicenseDiscovery_notFoundPng: string;

			export const LicenseDiscovery_previousLicenseArrowPng: string;

			export const LicenseDiscovery_readyToAssignPng: string;

			export const LicenseDiscovery_readyToMovePng: string;

			export const LicenseDiscovery_readyToValidatePng: string;

			export const LicenseDiscovery_searchingPng: string;

			export const LicenseDiscovery_sendemailPng: string;

			export const LicenseDiscovery_wrongEmailPng: string;

			export const LicenseDiscovery_zooIconPng: string;

			export const LicenseDiscovery_zooPng: string;

			export const LicenseDiscovery_assignToAccountSvg: string;

			export const LicenseDiscovery_assignToComputerSvg: string;

			export const LicenseDiscovery_emailIconSvg: string;

			export const LicenseDiscovery_emailSvg: string;

			export const LicenseDiscovery_enterAnotherKeySvg: string;

			export const LicenseDiscovery_enterLicenseKeySvg: string;

			export const LicenseDiscovery_enterPreviousLicenseKeySvg: string;

			export const LicenseDiscovery_errorIconSvg: string;

			export const LicenseDiscovery_genericErrorIconSvg: string;

			export const LicenseDiscovery_invalidLicenseSvg: string;

			export const LicenseDiscovery_licenseFoundSvg: string;

			export const LicenseDiscovery_licenseInUseSvg: string;

			export const LicenseDiscovery_loginSvg: string;

			export const LicenseDiscovery_notFoundSvg: string;

			export const LicenseDiscovery_previousLicenseArrowSvg: string;

			export const LicenseDiscovery_readyToAssignSvg: string;

			export const LicenseDiscovery_readyToMoveSvg: string;

			export const LicenseDiscovery_readyToValidateSvg: string;

			export const LicenseDiscovery_searchingSvg: string;

			export const LicenseDiscovery_sendemailSvg: string;

			export const LicenseDiscovery_wrongEmailSvg: string;

			export const LicenseDiscovery_zooIconSvg: string;

			export const LicenseDiscovery_zooSvg: string;

			export const LicenseDiscovery_emailPng: string;

			export const LicenseDiscovery_removeLicenseKeyPng: string;

			export const LicenseDiscovery_removeLicenseKeySvg: string;

			export const LicenseDiscovery_validationSuccessPng: string;

			export const LicenseDiscovery_validationSuccessSvg: string;

			export const LicenseDiscovery_enterAnotherKeyPng: string;

			export const LicenseDiscovery_logoutPng: string;

			export const LicenseDiscovery_logoutSvg: string;

			export const Svg_PackSubDFacesSvg: string;

			export const Svg_SelDimAngularSvg: string;

			export const Svg_SelDimCentermarkSvg: string;

			export const Svg_SelDimLinearSvg: string;

			export const Svg_SelDimOrdinateSvg: string;

			export const Svg_SetPerFaceColorByFacePackSvg: string;

			export const Svg_ArcVisionHelpSvg: string;

			export const Svg_AvailSvg: string;

			export const Svg_MassPopulateSvg: string;

			export const Svg_PlanarBooleansSvg: string;

			export const Svg_PluginHelpSvg: string;

			export const Svg_RPCAboutSvg: string;

			export const Svg_RPCMassEditSvg: string;

			export const Svg_RpcOpenPropSvg: string;

			export const Svg_RPCSiteSvg: string;

			export const Svg_SubDUnfriendSvg: string;

			export const Svg_MergeMaterialsSvg: string;

			export const Svg_RPCAvailAppSvg: string;

			export const Svg_SelFontUseSvg: string;

			export const RadiateSvg: string;

			export const RadiateFindSvg: string;

			export const Tabs_PushPinHotSvg: string;

			export const Tabs_PushPinNormalSvg: string;

			export const Tabs_PushPinUnpinHotSvg: string;

			export const Tabs_PushPinUnpinNormalSvg: string;

			export const DeleteSvg: string;

			export const DeleteGraySvg: string;

			export const FileSvgFileSvg: string;

			export const HelpSvgHelpSvg: string;

			export const LayerSvgLayerSvg: string;

			export const LayerStateSvg: string;

			export const OpenSvg: string;

			export const OpenGraySvg: string;

			export const PropertiesSvgPropertiesSvg: string;

			export const RestoreSvg: string;

			export const RestoreGraySvg: string;

			export const SaveSvg: string;

			export const SaveGraySvg: string;

			export const CheckSvg: string;

			export const DocumentSvg: string;

			export const DocumentGraySvg: string;

			export const DocumentsSvg: string;

			export const DocumentsGraySvg: string;

			export const DownSvg: string;

			export const DownGraySvg: string;

			export const HalfLockSvg: string;

			export const HalfOffSvg: string;

			export const LayoutMenuSvg: string;

			export const LayoutMenuGraySvg: string;

			export const LeftSvg: string;

			export const LeftGraySvg: string;

			export const LockSvgLockSvg: string;

			export const OffSvg: string;

			export const OnSvg: string;

			export const ToolsMenuSvg: string;

			export const ToolsMenuGraySvg: string;

			export const UpSvg: string;

			export const UpGraySvg: string;

			export const UnlockSvg: string;

			export const Svg_BatchRenderNamedViewsSvg: string;

			export const Svg_ExtractOriginalCaptivesSvg: string;

			export const Svg_UngroupAllNestedSvg: string;

			export const Svg_AddSnapToSubDObjectSvg: string;

			export const Svg_RemoveSymmetrySvg: string;

			export const Svg_SetDimensionLayerSvg: string;

			export const Svg_SubDRevolveSvg: string;

			export const Svg_BlockAddMissingBlockAttributeKeysSvg: string;

			export const Svg_FileOpenSvg: string;

			export const Svg_RenderToolsEdgeSofteningSvg: string;

			export const Svg_RibbonOffsetSvg: string;

			export const Svg_ShowSelectedInDetailSvg: string;

			export const Svg_SolidBooleanUnionSvg: string;

			export const Svg_SolidShellSvg: string;

			export const Svg_StandardGrasshopperSvg: string;

			export const Svg_TextureMappingUnwrapSvg: string;

			export const Svg_ShowLayersInDetailSvg: string;

			export const DeleteXSvg: string;

			export const LinkSvg: string;

			export const UnlinkSvg: string;

			export const MRToolPaletteAppPrefPng: string;

			export const Svg_SketchConstraintsSvg: string;

			export const RestoreWorkspaceSvg: string;

			export const UpdateWorkspaceSvg: string;

			export const WorkspacesPanelSvg: string;

			export const LayerCurrentPng: string;

			export const LayerHiddenPng: string;

			export const LayerLockedPng: string;

			export const LayerUnlockedPng: string;

			export const LayerUnlockedPersistPng: string;

			export const LayerVisiblePng: string;

			export const LayerVisiblePersistPng: string;

			export const Svg_ConstraintsAddNewSvg: string;

			export const Svg_ObjectManagerApplicationSvg: string;

			export const Svg_ObjectManagerBlockSvg: string;

			export const Svg_ObjectManagerBlockInstanceSvg: string;

			export const Svg_ObjectManagerBlocksSvg: string;

			export const Svg_ObjectManagerBlocksGraySvg: string;

			export const Svg_ObjectManagerDocumentSvg: string;

			export const Svg_ObjectManagerEnvironmentsSvg: string;

			export const Svg_ObjectManagerEnvironmentsGraySvg: string;

			export const Svg_ObjectManagerGroupSvg: string;

			export const Svg_ObjectManagerGroupMemberSvg: string;

			export const Svg_ObjectManagerGroupsSvg: string;

			export const Svg_ObjectManagerGroupsGraySvg: string;

			export const Svg_ObjectManagerLayerSvg: string;

			export const Svg_ObjectManagerLayersSvg: string;

			export const Svg_ObjectManagerLayersGraySvg: string;

			export const Svg_ObjectManagerLayerCurrentSvg: string;

			export const Svg_ObjectManagerLayerHiddenSvg: string;

			export const Svg_ObjectManagerLayerLockedSvg: string;

			export const Svg_ObjectManagerLayerLockedGraySvg: string;

			export const Svg_ObjectManagerLayerUnlockedSvg: string;

			export const Svg_ObjectManagerLayerUnlockedGraySvg: string;

			export const Svg_ObjectManagerLayerVisibleSvg: string;

			export const Svg_ObjectManagerLayerVisibleGraySvg: string;

			export const Svg_ObjectManagerLightSvg: string;

			export const Svg_ObjectManagerLightsSvg: string;

			export const Svg_ObjectManagerLightsGraySvg: string;

			export const Svg_ObjectManagerMaterialsSvg: string;

			export const Svg_ObjectManagerMaterialsGraySvg: string;

			export const Svg_ObjectManagerNamedViewsSvg: string;

			export const Svg_ObjectManagerObjectSvg: string;

			export const Svg_ObjectManagerObjectsSvg: string;

			export const Svg_ObjectManagerObjectsGraySvg: string;

			export const Svg_ObjectManagerTexturesSvg: string;

			export const Svg_ObjectManagerTexturesGraySvg: string;

			export const Svg_ObjectManagerViewSvg: string;

			export const Svg_ObjectManagerViewsSvg: string;

			export const Svg_ObjectManagerViewsGraySvg: string;

			export const Svg_ObjectManagerBlockInstanceSvgSvg_ObjectManagerBlockInstanceSvg: string;

			export const Svg_ObjectManagerClippingPlaneSvg: string;

			export const Svg_ObjectManagerCurveSvg: string;

			export const Svg_ObjectManagerExtrusionSvg: string;

			export const Svg_ObjectManagerHatchSvg: string;

			export const Svg_ObjectManagerLeaderSvg: string;

			export const Svg_ObjectManagerMeshSvg: string;

			export const Svg_ObjectManagerPointSvg: string;

			export const Svg_ObjectManagerPointSetSvg: string;

			export const Svg_ObjectManagerPolysurfaceSvg: string;

			export const Svg_ObjectManagerSubDSvg: string;

			export const Svg_ObjectManagerSurfaceSvg: string;

			export const Svg_ObjectManagerTextSvg: string;

			export const Svg_ObjectManagerTextDotSvg: string;

			export const Svg_ObjectManagerUpdateSvg: string;

			export const Svg_ObjectManagerInformationSvg: string;

			export const Svg_ObjectManagerUpdateGraySvg: string;

			export const Svg_EmptyTransparentIconSvg: string;

			export const HatchLinearPng: string;

			export const HatchLinearReflectPng: string;

			export const HatchRadialPng: string;

			export const HatchRadialWrappedPng: string;

			export const Svg_ConstraintsSketchAddObjectSvg: string;

			export const GradientReversePng: string;

			export const LayerChangeToCurrentSvg: string;

			export const Svg_HatchGradientResetBoundarySvg: string;

			export const Svg_HatchReverseGradientColorsSvg: string;

			export const HatchGradientResetBoundaryDarkSvg: string;

			export const HatchReverseGradientColorsDarkSvg: string;

			export const LayerChangeToCurrentGraySvg: string;

			export const Svg_ConstraintsAlignedLengthSvg: string;

			export const Svg_ConstraintsEqualRadiusSvg: string;

			export const Svg_ConstraintsOffsetSvg: string;

			export const Svg_ConstraintsRadiusSvg: string;

			export const Tabs_TabLayersSvg: string;

			export const FilterMenuBlueSvg: string;

			export const FilterMenuGreenSvg: string;

			export const FilterMenuRedSvg: string;

			export const Svg_RecentlyUsedSvg: string;

			export const TextFunctionIco: string;

			export const Svg_textFunctionSvg: string;

			export const Svg_ConstraintsAlignedLengthViewSvg: string;

			export const Svg_ConstraintsAnchorSvg: string;

			export const Svg_ConstraintsAnchorViewSvg: string;

			export const Svg_ConstraintsAngleViewSvg: string;

			export const Svg_ConstraintsCoincidentSvg: string;

			export const Svg_ConstraintsCoincidentViewSvg: string;

			export const Svg_ConstraintsCollinearViewSvg: string;

			export const Svg_ConstraintsEqualAngleViewSvg: string;

			export const Svg_ConstraintsEqualLengthSvg: string;

			export const Svg_ConstraintsEqualLengthViewSvg: string;

			export const Svg_ConstraintsEqualRadiusViewSvg: string;

			export const Svg_ConstraintsHorizontalSvg: string;

			export const Svg_ConstraintsHorizontalViewSvg: string;

			export const Svg_ConstraintsLengthRatioSvg: string;

			export const Svg_ConstraintsLengthRatioViewSvg: string;

			export const Svg_ConstraintsLengthViewSvg: string;

			export const Svg_ConstraintsOffsetViewSvg: string;

			export const Svg_ConstraintsOnCurveSvg: string;

			export const Svg_ConstraintsOnCurveViewSvg: string;

			export const Svg_ConstraintsOnLineViewSvg: string;

			export const Svg_ConstraintsParallelSvg: string;

			export const Svg_ConstraintsParallelViewSvg: string;

			export const Svg_ConstraintsPerpendicularSvg: string;

			export const Svg_ConstraintsPerpendicularViewSvg: string;

			export const Svg_ConstraintsPointOnLineSvg: string;

			export const Svg_ConstraintsPointOnLineViewSvg: string;

			export const Svg_ConstraintsRadiusViewSvg: string;

			export const Svg_ConstraintsTangentArcViewSvg: string;

			export const Svg_ConstraintsVerticalSvg: string;

			export const Svg_ConstraintsVerticalViewSvg: string;

			export const Svg_ConstraintsTangentArcSvg: string;

			export const Svg_ConstraintsLengthSvg: string;

			export const Svg_ConstraintsEqualAngleSvg: string;

			export const Svg_ConstraintsCollinearSvg: string;

			export const Svg_ConstraintsAngleSvg: string;

			export const Svg_ConstraintsOnLineSvg: string;

			export const KeyboardShortcutsSvg: string;

			export const GearSvg: string;

			export const GearHotSvg: string;

			export const Svg_checkmarkNoShadowSvg: string;

			export const Svg_namedItemCopyGraySvg: string;

			export const Svg_namedItemCopyHotSvg: string;

			export const Svg_namedItemDeleteGraySvg: string;

			export const Svg_namedItemDeleteHotSvg: string;

			export const Svg_namedItemDownGraySvg: string;

			export const Svg_namedItemDownHotSvg: string;

			export const Svg_namedItemDuplicateGraySvg: string;

			export const Svg_namedItemDuplicateHotSvg: string;

			export const Svg_namedItemHelpSvg: string;

			export const Svg_namedItemImportFrom3dmFileGraySvg: string;

			export const Svg_namedItemImportFrom3dmFileHotSvg: string;

			export const Svg_namedItemPasteGraySvg: string;

			export const Svg_namedItemPasteHotSvg: string;

			export const Svg_namedItemPropertiesGraySvg: string;

			export const Svg_namedItemPropertiesHotSvg: string;

			export const Svg_namedItemRestoreGraySvg: string;

			export const Svg_namedItemRestoreHotSvg: string;

			export const Svg_namedItemSaveGraySvg: string;

			export const Svg_namedItemSaveHotSvg: string;

			export const Svg_namedItemUpGraySvg: string;

			export const Svg_namedItemUpHotSvg: string;

			export const Svg_namedPositionsAppendGraySvg: string;

			export const Svg_namedPositionsAppendHotSvg: string;

			export const Svg_namedPositionsUpdateGraySvg: string;

			export const Svg_namedPositionsUpdateHotSvg: string;

			export const Svg_namedViewAnimationGraySvg: string;

			export const Svg_namedViewAnimationHotSvg: string;

			export const Svg_namedViewCreateUsingWidgetGraySvg: string;

			export const Svg_namedViewCreateUsingWidgetHotSvg: string;

			export const Svg_namedViewEditByLookingGraySvg: string;

			export const Svg_namedViewEditByLookingHotSvg: string;

			export const Svg_snapshotsAnimationGraySvg: string;

			export const Svg_snapshotsAnimationHotSvg: string;

			export const Svg_snapshotsRestorePartialGraySvg: string;

			export const Svg_snapshotsRestorePartialHotSvg: string;

			export const Svg_snapshotsSlideshowGraySvg: string;

			export const Svg_snapshotsSlideshowHotSvg: string;

			export const Svg_stackedFractionSvg: string;

			export const Svg_textBoldSvg: string;

			export const Svg_textBottomSvg: string;

			export const Svg_textCenterSvg: string;

			export const Svg_textItalicSvg: string;

			export const Svg_textLeftSvg: string;

			export const Svg_textMiddleSvg: string;

			export const Svg_textRightSvg: string;

			export const Svg_textTopSvg: string;

			export const Svg_underlineSvg: string;

			export const MRKeyboardAppPrefPng: string;

			export const Svg_namedItemHelpGraySvg: string;

			export const Svg_namedPositionSelectObjectsHotSvg: string;

			export const Svg_namedViewLockGraySvg: string;

			export const Svg_namedViewLockHotSvg: string;

			export const Svg_namedViewShowWidgetGraySvg: string;

			export const Svg_namedViewShowWidgetHotSvg: string;

			export const Svg_namedPositionSelectObjectsGraySvg: string;

			export const Svg_namedViewLockSvg: string;

			export const Svg_namedViewRenameSvg: string;

			export const Svg_namedViewRenameGraySvg: string;

			export const Svg_ConstraintsDisableIconsInViewSvg: string;

			export const Svg_ConstraintsEnableIconsInViewSvg: string;

			export const Svg_TextureMappingFitToObjectByOriginalMappingSvg: string;

			export const Svg_TextureMappingSetSizeToAspectRatioOfImageSvg: string;

			export const Svg_TextureMappingSetSizeToBeEqualInAllDirectionsSvg: string;

			export const Svg_TextureMappingSetTextureSizeToOneInAllDirectionsSvg: string;

			export const Svg_TexturesEnvironmentMapSvg: string;

			export const Svg_TextureMappingMaterialScreenSvg: string;

			export const Svg_TextureMappingMaterialMappingChannelSvg: string;

			export const Svg_TextureMappingMaterialWCSBoxSvg: string;

			export const Svg_TextureMappingMaterialWCSSvg: string;

			export const Svg_BlockManagerAddObjectsToBlockSvg: string;

			export const Svg_TextureMappingRepeatSvg: string;

			export const Svg_TextureMappingDisplayInViewportSvg: string;

			export const Svg_TextureMappingPreviewLocalMappingSvg: string;

			export const Tabs_TabBlockInstancesSvg: string;

			export const PropBlockInstanceIco: string;

			export const MacStatusBarHistorySvg: string;

			export const Svg_TextureMappingPreviewIn3DVariesSvg: string;

			export const Svg_TextureMappingPreviewIn3DSvg: string;

			export const Svg_TextureMappingPreviewLocalMappingVariesSvg: string;

			export const Svg_TextureMappingRepeatVariesSvg: string;

			export const Svg_TextureClampingClamp2Svg: string;

			export const Svg_TextureColorAdjustmentGrayscaleVariesSvg: string;

			export const Svg_TextureColorAdjustmentInvertSvg: string;

			export const Svg_TextureClampingClampVariesSvg: string;

			export const Svg_TextureClampingClampScaleToClampRange2Svg: string;

			export const Svg_TextureClampingClampScaleToClampRangeSvg: string;

			export const Svg_TextureColorAdjustmentGrayscaleSvg: string;

			export const Svg_TextureClampingClampSvg: string;

			export const Svg_TextureColorAdjustmentInvertVariesSvg: string;

			export const Svg_TextureClampingClampScaleToClampRangeVariesSvg: string;

			export const Svg_TextureClampingClampScaleToClampRangeDarkmode2Svg: string;

			export const Svg_TextureClampingClampDarkmode2Svg: string;

			export const Svg_TextureColorAdjustmentInvertVariesSvgSvg_TextureColorAdjustmentInvertVariesSvg: string;

			export const Svg_ArcSmallSvg: string;

			export const Svg_CurveSmallSvg: string;

			export const Svg_LinesMainCurveDrawingPolylineSmallSvg: string;

			export const Svg_LinesSmallSvg: string;

			export const Svg_BlocksAddMissingBlockAttributeKeysSvg: string;

			export const Svg_ConstraintsMidPointSvg: string;

			export const Svg_ConstraintsMidPointViewSvg: string;

			export const Tabs_TabConstraintsSvg: string;

			export const Tabs_TabClippingPlaneSvg: string;

			export const Svg_LockSmallClosedSvg: string;

			export const Svg_LockSmallOpenSvg: string;

			export const Svg_SubDExpandEdgesSvg: string;

			export const Svg_SurfaceEditToolsUntrimAllSvg: string;

			export const Svg_SurfaceToolsSurfaceFlatteningSmashSvg: string;

			export const Svg_WindowMacrosSvg: string;

			export const Svg_WindowContainersSvg: string;

			export const Svg_LightsPanelSpotlightHardnessSvg: string;

			export const Svg_LightsPanelShadowIntensitySvg: string;

			export const Svg_LightsPanelFalloffInverseSquaredSvg: string;

			export const Svg_LightsPanelIntensitySvg: string;

			export const Svg_LightsPanelSkylightOnSvg: string;

			export const Svg_LightsPanelSunOnSvg: string;

			export const Svg_LightsPanelShowLightsOnLayersThatAreOffSvg: string;

			export const Svg_LightsPanelFalloffLinearSvg: string;

			export const Svg_LightsPanelLightSelectionToViewportSvg: string;

			export const Svg_LightsPanelFalloffConstantSvg: string;

			export const Svg_LightsPanelSkylightOffBlueSvg: string;

			export const Svg_LightsPanelShowGroupsSvg: string;

			export const Svg_LightsPanelSunOffBlueSvg: string;

			export const Svg_ShrinkWrapSvg: string;

			export const LayerLockSvg: string;

			export const LayerLockPersistSvg: string;

			export const LayerOffSvg: string;

			export const LayerOffGlobalSvg: string;

			export const LayerOffPersistSvg: string;

			export const LayerOnSvg: string;

			export const LayerUnlockSvg: string;

			export const Tabs_TabObjectSnapSvg: string;

			export const BackSvg: string;

			export const BackGraySvg: string;

			export const ForwardSvg: string;

			export const ForwardGraySvg: string;

			export const HomeSvg: string;

			export const HomeGraySvg: string;

			export const RefreshSvg: string;

			export const RefreshGraySvg: string;

			export const Svg_TexturesMirrorAlternateTilesSvg: string;

			export const Svg_TexturesEnableFilteringSvg: string;

			export const Svg_TexturesTreatAsLinearOnSvg: string;

			export const Svg_TexturesTreatAsLinearVariesSvg: string;

			export const Svg_TexturesEnableFilteringVariesSvg: string;

			export const Svg_TexturesMirrorAlternateTilesVariesSvg: string;

			export const Svg_TexturesSwapColorsVariesSvg: string;

			export const Svg_TexturesSuperSampleSvg: string;

			export const Svg_TexturesSuperSampleVariesSvg: string;

			export const Svg_TexturesSwapColorsSvg: string;

			export const Svg_BlockManagerMakeUniqueSvg: string;

			export const Svg_BlockManagerEmbeddedandLinkedBlockSvg: string;

			export const Svg_BlockManagerEmbeddedBlockSvg: string;

			export const Svg_BlockManagerLinkedBlockSvg: string;

			export const Svg_ObjectManagerBlockInstanceOldSvg: string;

			export const Svg_BlockManagerMakeUniqueGraySvg: string;

			export const Svg_BlockManagerBlockInstancesDarkmodeSvg: string;

			export const Svg_BlockManagerAddObjectsToBlockGraySvg: string;

			export const Svg_ConvertToSingleSpansSvg: string;

			export const Svg_GeometryFixMain1JoinCopySvg: string;

			export const Svg_LayoutCopyDetailToViewportSvg: string;

			export const Svg_MaterialPanelUseAlphaChannelVariesSvg: string;

			export const Svg_MaterialPanelSelfIlluminationSvg: string;

			export const Svg_MaterialPanelUseColorMaskSvg: string;

			export const Svg_MaterialPanelSelfIlluminationVariesSvg: string;

			export const Svg_MaterialPanelGrayscaleSvg: string;

			export const Svg_MaterialPanelUseAlphaChannelSvg: string;

			export const Svg_MaterialPanelUseColorMaskVariesSvg: string;

			export const Svg_MaterialPanelGrayscaleVariesSvg: string;

			export const Svg_SectionToolsRunscriptSvg: string;

			export const Svg_SectionToolsStClearSectionViewsSvg: string;

			export const Svg_SectionToolsStCreateSvg: string;

			export const Svg_SectionToolsStDeleteSectionsSvg: string;

			export const Svg_SectionToolsStEdit2DLayoutSvg: string;

			export const Svg_SectionToolsStEditSectionsSvg: string;

			export const Svg_SectionToolsStEditSectionsHintSvg: string;

			export const Svg_SectionToolsStEditSectionsObjectsSvg: string;

			export const Svg_SectionToolsStExtractSectionsSvg: string;

			export const Svg_SectionToolsStLayoutSvg: string;

			export const Svg_SectionToolsStLockSectionsSvg: string;

			export const Svg_SectionToolsStMake2DSvg: string;

			export const Svg_SectionToolsStMoveSectionsSvg: string;

			export const Svg_SectionToolsStReportSvg: string;

			export const Svg_SectionToolsStRotateSectionsSvg: string;

			export const Svg_SectionToolsStSaveToNamedCPlanesSvg: string;

			export const Svg_SectionToolsStViewSectionsSvg: string;

			export const StatusBarGridSnapSvg: string;

			export const StatusBarObjectSnapSvg: string;

			export const StatusBarOrthoSvg: string;

			export const StatusBarPlanarSvg: string;

			export const StatusBarRecordHistorySvg: string;

			export const StatusBarSelectionFilterSvg: string;

			export const StatusBarSmartTrackSvg: string;

			export const Svg_SelectDimensionsSelDimAngularSvg: string;

			export const Svg_SelectDimensionsSelDimCentermarkSvg: string;

			export const Svg_SelectDimensionsSelDimLinearSvg: string;

			export const Svg_SelectDimensionsSelDimOrdinateSvg: string;

			export const Svg_TexturePanelWithColorSvg: string;

			export const Svg_DimenssionExtractLineTypeSegmentsSvg: string;

			export const Svg_SelectSelClippingPlaneInViewportSvg: string;

			export const Svg_SelectSelClippingPlaneInViewportDarkSvg: string;

			export const Svg_MaterialPanelAlphaTransparencySvg: string;

			export const Svg_MaterialPanelFresnelReflectivitySvg: string;

			export const AddMenuPng: string;

			export const AddTopMenuPng: string;

			export const MenuAddSubPng: string;

			export const MenuPropertiesPng: string;

			export const MenuSeparatorPng: string;

			export const FilterMenuGraySvg: string;

			export const CPlusPlusPng: string;

			export const CSharpPng: string;

			export const Svg_BlockManagerTaskBlockInfoSvg: string;

			export const Svg_BlockManagerTaskDeleteSvg: string;

			export const Svg_BlockManagerTaskDuplicateSvg: string;

			export const Svg_BlockManagerTaskInsertSvg: string;

			export const Svg_BlockManagerTaskRenameSvg: string;

			export const Svg_BlockManagerTaskSaveSvg: string;

			export const Svg_BlockManagerTaskSelectInstancesSvg: string;

			export const Svg_RenderPresetsIndustrialDesignIDSvg: string;

			export const Svg_RenderPresetsJewelrySvg: string;

			export const Svg_RenderPresetsAutomotiveSvg: string;

			export const Svg_BlockManagerUpdateSvg: string;

			export const Svg_BlockManagerUpdateGraySvg: string;

			export const Svg_BlockDefinitionPropertiesPopOutSvg: string;

			export const EllipseSvgEllipseSvg: string;

			export const LineSvg: string;

			export const PaintBucketSvg: string;

			export const PencilSvg: string;

			export const RectangleSvgRectangleSvg: string;

			export const Svg_MaterialPanelAddTextureSvg: string;

			export const Svg_MaterialPanelAddMaterialSvg: string;

			export const Svg_MaterialPanelAddEnvironmentSvg: string;

			export const Svg_snapshotsRestorePartialSvg: string;

			export const Svg_namedItemUpSvg: string;

			export const Svg_RenderPresetsIndustrialDesignIDColorfulSvg: string;

			export const LayerPerViewportOffSvg: string;

			export const LayerPerViewportOnSvg: string;

			export const LayerPerViewportPersistSvg: string;

			export const Svg_TextureMappingPreviewLocalMappingNewSvg: string;

			export const Svg_TextureMappingRepeatNewSvg: string;

			export const Svg_TextureMappingPreviewLocalMappingNewVariesSvg: string;

			export const Svg_TextureMappingRepeatNewVariesSvg: string;

			export const SVGEditorEllipseSvg: string;

			export const SVGEditorEyeDropperSvg: string;

			export const SVGEditorLineSvg: string;

			export const SVGEditorPencilSvg: string;

			export const SVGEditorRectangleSvg: string;

			export const SVGEditorRedoSvg: string;

			export const SVGEditorUndoSvg: string;

			export const Tabs_LeftSidebarSvg: string;

			export const Tabs_RightSidebarSvg: string;

			export const Svg_RenderPresetsRuralSvg: string;

			export const Svg_RenderPresetsUrbanSvg: string;

			export const Svg_RenderPresetsSunsetSvg: string;

			export const Svg_ca142d2eB1b6434b96b04eaac7e346acDarkSvg: string;

			export const Svg_06360c6970484f29Be12752b2b3d72cbDarkSvg: string;

			export const Svg_6e6045ca69d94f12Bc6fEf510ed721b9DarkSvg: string;

			export const Svg_e7368a196e0440d582a83266930e8cc4DarkSvg: string;

			export const Svg_namedItemAddHotDarkmodeSvg: string;

			export const Svg_namedItemAddHotSvg: string;

			export const Svg_ce8e20f2D38a4c89Afc8412931bb46a9DarkSvg: string;

			export const Svg_3f33af61Df32483c917d0218d278a361DarkSvg: string;

			export const Svg_52e4c70f81604954B5d2998950d8e08bDarkSvg: string;

			export const Svg_1393bc195b124187Bb9a7ab18cba9540DarkSvg: string;

			export const Svg_8d41fcf87e0d4836Ad7eE30a0bbbeed5DarkSvg: string;

			export const Svg_ccb8282f83a24f54AfccFf92fb92dfbaSvg: string;

			export const Svg_ccb8282f83a24f54AfccFf92fb92dfbaDarkSvg: string;

			export const Svg_d8096f35E6b245dcAcaa06f945a9668eDarkSvg: string;

			export const Svg_23ffffa84e7942baA33a401e4d2ab4a3Svg: string;

			export const Svg_23ffffa84e7942baA33a401e4d2ab4a3DarkSvg: string;

			export const Svg_SunDialogHereSvg: string;

			export const Svg_UVEditorShowSelectedInUVEditorSvg: string;

			export const Svg_UVEditorExportBitmapSvg: string;

			export const Svg_UVEditorRemoveConstraintsSvg: string;

			export const Svg_UVEditorAddEdgeStraighteningConstraintSvg: string;

			export const Svg_UVEditorExportSvg: string;

			export const Svg_UVEditorPackTextureMeshesSvg: string;

			export const Svg_UVEditorAddVertexPinningConstraintSvg: string;

			export const Svg_UVEditorResetZoomSvg: string;

			export const Svg_UVEditorCaptureToClipboardSvg: string;

			export const PropSectionToolsIco: string;

			export const NewDetailOffSvg: string;

			export const NewDetailOnSvg: string;

			export const BackGrayAutoDarkmodeSvg: string;

			export const BackAutoDarkmodeSvg: string;

			export const CheckAutoDarkmodeSvg: string;

			export const DeleteGrayAutoDarkmodeSvg: string;

			export const DeleteXAutoDarkmodeSvg: string;

			export const DeleteAutoDarkmodeSvg: string;

			export const DocumentGrayAutoDarkmodeSvg: string;

			export const DocumentsGrayAutoDarkmodeSvg: string;

			export const DocumentsAutoDarkmodeSvg: string;

			export const DocumentAutoDarkmodeSvg: string;

			export const DownGrayAutoDarkmodeSvg: string;

			export const DownAutoDarkmodeSvg: string;

			export const EllipseAutoDarkmodeSvg: string;

			export const FileAutoDarkmodeSvg: string;

			export const FilterMenuBlueAutoDarkmodeSvg: string;

			export const FilterMenuGrayAutoDarkmodeSvg: string;

			export const FilterMenuGreenAutoDarkmodeSvg: string;

			export const FilterMenuRedAutoDarkmodeSvg: string;

			export const ForwardGrayAutoDarkmodeSvg: string;

			export const ForwardAutoDarkmodeSvg: string;

			export const GearHotAutoDarkmodeSvg: string;

			export const GearAutoDarkmodeSvg: string;

			export const HalfLockAutoDarkmodeSvg: string;

			export const HalfOffAutoDarkmodeSvg: string;

			export const HelpAutoDarkmodeSvg: string;

			export const HomeGrayAutoDarkmodeSvg: string;

			export const HomeAutoDarkmodeSvg: string;

			export const KeyboardShortcutsAutoDarkmodeSvg: string;

			export const LayerChangeToCurrentGrayAutoDarkmodeSvg: string;

			export const LayerLockPersistAutoDarkmodeSvg: string;

			export const LayerLockAutoDarkmodeSvg: string;

			export const LayerOffGlobalAutoDarkmodeSvg: string;

			export const LayerOffPersistAutoDarkmodeSvg: string;

			export const LayerOffAutoDarkmodeSvg: string;

			export const LayerOnAutoDarkmodeSvg: string;

			export const LayerPerViewportOffAutoDarkmodeSvg: string;

			export const LayerPerViewportOnAutoDarkmodeSvg: string;

			export const LayerPerViewportPersistAutoDarkmodeSvg: string;

			export const LayerStateAutoDarkmodeSvg: string;

			export const LayerUnlockAutoDarkmodeSvg: string;

			export const LayerAutoDarkmodeSvg: string;

			export const LayoutMenuGrayAutoDarkmodeSvg: string;

			export const LayoutMenuAutoDarkmodeSvg: string;

			export const LineAutoDarkmodeSvg: string;

			export const LinkAutoDarkmodeSvg: string;

			export const LockAutoDarkmodeSvg: string;

			export const MacStatusBarHistoryAutoDarkmodeSvg: string;

			export const OffAutoDarkmodeSvg: string;

			export const OnAutoDarkmodeSvg: string;

			export const OpenGrayAutoDarkmodeSvg: string;

			export const OpenAutoDarkmodeSvg: string;

			export const PaintBucketAutoDarkmodeSvg: string;

			export const PencilAutoDarkmodeSvg: string;

			export const PropertiesAutoDarkmodeSvg: string;

			export const RectangleAutoDarkmodeSvg: string;

			export const RefreshGrayAutoDarkmodeSvg: string;

			export const RefreshAutoDarkmodeSvg: string;

			export const RestoreGrayAutoDarkmodeSvg: string;

			export const RestoreAutoDarkmodeSvg: string;

			export const RestoreWorkspaceAutoDarkmodeSvg: string;

			export const SaveGrayAutoDarkmodeSvg: string;

			export const SaveAutoDarkmodeSvg: string;

			export const StatusBarGridSnapAutoDarkmodeSvg: string;

			export const StatusBarObjectSnapAutoDarkmodeSvg: string;

			export const StatusBarOrthoAutoDarkmodeSvg: string;

			export const StatusBarPlanarAutoDarkmodeSvg: string;

			export const StatusBarRecordHistoryAutoDarkmodeSvg: string;

			export const StatusBarSelectionFilterAutoDarkmodeSvg: string;

			export const StatusBarSmartTrackAutoDarkmodeSvg: string;

			export const SVGEditorEllipseAutoDarkmodeSvg: string;

			export const SVGEditorEyeDropperAutoDarkmodeSvg: string;

			export const SVGEditorLineAutoDarkmodeSvg: string;

			export const SVGEditorPencilAutoDarkmodeSvg: string;

			export const SVGEditorRectangleAutoDarkmodeSvg: string;

			export const SVGEditorRedoAutoDarkmodeSvg: string;

			export const SVGEditorUndoAutoDarkmodeSvg: string;

			export const ToolsMenuGrayAutoDarkmodeSvg: string;

			export const ToolsMenuAutoDarkmodeSvg: string;

			export const UnlinkAutoDarkmodeSvg: string;

			export const UnlockAutoDarkmodeSvg: string;

			export const UpdateWorkspaceAutoDarkmodeSvg: string;

			export const UpGrayAutoDarkmodeSvg: string;

			export const UpAutoDarkmodeSvg: string;

			export const WorkspacesPanelAutoDarkmodeSvg: string;

			export const LicenseDiscovery_assignToAccountAutoDarkmodeSvg: string;

			export const LicenseDiscovery_assignToComputerAutoDarkmodeSvg: string;

			export const LicenseDiscovery_emailIconAutoDarkmodeSvg: string;

			export const LicenseDiscovery_emailAutoDarkmodeSvg: string;

			export const LicenseDiscovery_enterAnotherKeyAutoDarkmodeSvg: string;

			export const LicenseDiscovery_enterLicenseKeyAutoDarkmodeSvg: string;

			export const LicenseDiscovery_enterPreviousLicenseKeyAutoDarkmodeSvg: string;

			export const LicenseDiscovery_errorIconAutoDarkmodeSvg: string;

			export const LicenseDiscovery_genericErrorIconAutoDarkmodeSvg: string;

			export const LicenseDiscovery_invalidLicenseAutoDarkmodeSvg: string;

			export const LicenseDiscovery_licenseFoundAutoDarkmodeSvg: string;

			export const LicenseDiscovery_licenseInUseAutoDarkmodeSvg: string;

			export const LicenseDiscovery_loginAutoDarkmodeSvg: string;

			export const LicenseDiscovery_logoutAutoDarkmodeSvg: string;

			export const LicenseDiscovery_notFoundAutoDarkmodeSvg: string;

			export const LicenseDiscovery_previousLicenseArrowAutoDarkmodeSvg: string;

			export const LicenseDiscovery_readyToAssignAutoDarkmodeSvg: string;

			export const LicenseDiscovery_readyToMoveAutoDarkmodeSvg: string;

			export const LicenseDiscovery_readyToValidateAutoDarkmodeSvg: string;

			export const LicenseDiscovery_removeLicenseKeyAutoDarkmodeSvg: string;

			export const LicenseDiscovery_searchingAutoDarkmodeSvg: string;

			export const LicenseDiscovery_sendemailAutoDarkmodeSvg: string;

			export const LicenseDiscovery_validationSuccessAutoDarkmodeSvg: string;

			export const LicenseDiscovery_wrongEmailAutoDarkmodeSvg: string;

			export const LicenseDiscovery_zooIconAutoDarkmodeSvg: string;

			export const LicenseDiscovery_zooAutoDarkmodeSvg: string;

			export const Svg_06360c6970484f29Be12752b2b3d72cbDarkAutoDarkmodeSvg: string;

			export const Svg_1393bc195b124187Bb9a7ab18cba9540DarkAutoDarkmodeSvg: string;

			export const Svg_23ffffa84e7942baA33a401e4d2ab4a3AutoDarkmodeSvg: string;

			export const Svg_23ffffa84e7942baA33a401e4d2ab4a3DarkAutoDarkmodeSvg: string;

			export const Svg_3DDigitizingAutoDarkmodeSvg: string;

			export const Svg_3dFaceSubDAppendAutoDarkmodeSvg: string;

			export const Svg_3DDigitizingCalibrateDigitizerAutoDarkmodeSvg: string;

			export const Svg_3DDigitizingCurveDrawingCurveInterpolatePointsAutoDarkmodeSvg: string;

			export const Svg_3DDigitizingCurveInterpolateOnSurfaceAutoDarkmodeSvg: string;

			export const Svg_3DDigitizingDigitizePlanarSectionCurveAutoDarkmodeSvg: string;

			export const Svg_3DDigitizingDigLineAutoDarkmodeSvg: string;

			export const Svg_3DDigitizingMain2PointMainMultiplePointsAutoDarkmodeSvg: string;

			export const Svg_3DDigitizingPauseDigitizerAutoDarkmodeSvg: string;

			export const Svg_3DDigitizingPickAPointWithDigitizerAutoDarkmodeSvg: string;

			export const Svg_3DDigitizingSetDigitizerScaleAutoDarkmodeSvg: string;

			export const Svg_3DDigitizingSetViewRenderSidebarPlaceCameraAndTargetAutoDarkmodeSvg: string;

			export const Svg_3DDigitizingSetViewRenderSidebarPlaceTargetAutoDarkmodeSvg: string;

			export const Svg_3DDigitizingToolsConnectDigitizerAutoDarkmodeSvg: string;

			export const Svg_3DDigitizingToolsDisconnectDigitizerAutoDarkmodeSvg: string;

			export const Svg_3f33af61Df32483c917d0218d278a361DarkAutoDarkmodeSvg: string;

			export const Svg_52e4c70f81604954B5d2998950d8e08bDarkAutoDarkmodeSvg: string;

			export const Svg_6e6045ca69d94f12Bc6fEf510ed721b9DarkAutoDarkmodeSvg: string;

			export const Svg_8d41fcf87e0d4836Ad7eE30a0bbbeed5DarkAutoDarkmodeSvg: string;

			export const Svg_AddSnapToSubDObjectAutoDarkmodeSvg: string;

			export const Svg_AddMissingBlockAttributeKeysAutoDarkmodeSvg: string;

			export const Svg_AlignAndDistributeAlignBottomAutoDarkmodeSvg: string;

			export const Svg_AlignAndDistributeAutoDarkmodeSvg: string;

			export const Svg_AlignAndDistributeAlignCentersAutoDarkmodeSvg: string;

			export const Svg_AlignAndDistributeAlignHorizontalCentersAutoDarkmodeSvg: string;

			export const Svg_AlignAndDistributeAlignLeftAutoDarkmodeSvg: string;

			export const Svg_AlignAndDistributeAlignRightAutoDarkmodeSvg: string;

			export const Svg_AlignAndDistributeAlignTopAutoDarkmodeSvg: string;

			export const Svg_AlignAndDistributeAlignVerticalCentersAutoDarkmodeSvg: string;

			export const Svg_AlignAndDistributeDistributeAutoDarkmodeSvg: string;

			export const Svg_AnalyzeAngleAutoDarkmodeSvg: string;

			export const Svg_AnalyzeAreaCentroidAutoDarkmodeSvg: string;

			export const Svg_AnalyzeAutoDarkmodeSvg: string;

			export const Svg_AnalyzeCheckAllNewObjectsAutoDarkmodeSvg: string;

			export const Svg_AnalyzeCheckObjectsAutoDarkmodeSvg: string;

			export const Svg_AnalyzeClashAutoDarkmodeSvg: string;

			export const Svg_AnalyzeCurvatureAnalysisAutoDarkmodeSvg: string;

			export const Svg_AnalyzeCurvatureAnalysisOffAutoDarkmodeSvg: string;

			export const Svg_AnalyzeCurvatureAutoDarkmodeSvg: string;

			export const Svg_AnalyzeCurvatureGraphOffAutoDarkmodeSvg: string;

			export const Svg_AnalyzeCurveDeviationAutoDarkmodeSvg: string;

			export const Svg_AnalyzeDirectionAutoDarkmodeSvg: string;

			export const Svg_AnalyzeDistanceAutoDarkmodeSvg: string;

			export const Svg_AnalyzeDomainAutoDarkmodeSvg: string;

			export const Svg_AnalyzeEvaluatePointAutoDarkmodeSvg: string;

			export const Svg_AnalyzeEvaluatePointUVCoordinatesAutoDarkmodeSvg: string;

			export const Svg_AnalyzeFlipDirectionAutoDarkmodeSvg: string;

			export const Svg_AnalyzeGeometricContinuityOf2CurvesAutoDarkmodeSvg: string;

			export const Svg_AnalyzeSelectBadObjectsAutoDarkmodeSvg: string;

			export const Svg_AnalyzeShowDirectionAutoDarkmodeSvg: string;

			export const Svg_AnalyzeShowEdgesAutoDarkmodeSvg: string;

			export const Svg_AnalyzeShowEdgesOffAutoDarkmodeSvg: string;

			export const Svg_AnalyzeShowEndsAutoDarkmodeSvg: string;

			export const Svg_AnimationAnimationPreviewAutoDarkmodeSvg: string;

			export const Svg_AnimationAnimationToolsAutoDarkmodeSvg: string;

			export const Svg_AnimationAutoDarkmodeSvg: string;

			export const Svg_AnimationPreviewAnimationPreviewLastFrameAutoDarkmodeSvg: string;

			export const Svg_AnimationPreviewAnimationPreviewFirstFrameAutoDarkmodeSvg: string;

			export const Svg_AnimationPreviewAnimationPreviewFrameNumberAutoDarkmodeSvg: string;

			export const Svg_AnimationPreviewAnimationPreviewNextFrameAutoDarkmodeSvg: string;

			export const Svg_AnimationPreviewAnimationPreviewPreviousFrameAutoDarkmodeSvg: string;

			export const Svg_AnimationPreviewAutoDarkmodeSvg: string;

			export const Svg_AnimationRecordAnimationAutoDarkmodeSvg: string;

			export const Svg_AnimationSetupAutoDarkmodeSvg: string;

			export const Svg_AnimationSetupSetUp360DegreeTurntableAnimationAutoDarkmodeSvg: string;

			export const Svg_AnimationSetupSetUpFlyThroughAnimationAutoDarkmodeSvg: string;

			export const Svg_AnimationSetupSetUpOneDaySunStudyAutoDarkmodeSvg: string;

			export const Svg_AnimationSetupSetUpPathAnimationAutoDarkmodeSvg: string;

			export const Svg_AnimationSetupSetUpSeasonalSunStudyAutoDarkmodeSvg: string;

			export const Svg_AnnotateAddRemoveArrowheadOnCurveAutoDarkmodeSvg: string;

			export const Svg_AnnotateAnnotateDot0AutoDarkmodeSvg: string;

			export const Svg_AnnotateAnnotateDot1AutoDarkmodeSvg: string;

			export const Svg_AnnotateAnnotateDot2AutoDarkmodeSvg: string;

			export const Svg_AnnotateAnnotateDot3AutoDarkmodeSvg: string;

			export const Svg_AnnotateAnnotateDot4AutoDarkmodeSvg: string;

			export const Svg_AnnotateAnnotateDot5AutoDarkmodeSvg: string;

			export const Svg_AnnotateAnnotateDot6AutoDarkmodeSvg: string;

			export const Svg_AnnotateAnnotateDot7AutoDarkmodeSvg: string;

			export const Svg_AnnotateAnnotateDot8AutoDarkmodeSvg: string;

			export const Svg_AnnotateAnnotateDot9AutoDarkmodeSvg: string;

			export const Svg_AnnotateAutoDarkmodeSvg: string;

			export const Svg_AnnotateDimensionDraftingAnnotateDotAutoDarkmodeSvg: string;

			export const Svg_AnnotateDraftingConvertDotsToTextAutoDarkmodeSvg: string;

			export const Svg_ArcticModeAutoDarkmodeSvg: string;

			export const Svg_ArcVisionHelpAutoDarkmodeSvg: string;

			export const Svg_ArcArcsThroughPointsAutoDarkmodeSvg: string;

			export const Svg_ArcArcStartEndRadiusAutoDarkmodeSvg: string;

			export const Svg_ArcAutoDarkmodeSvg: string;

			export const Svg_ArcCurveDrawingArcStartDirectionAtStartEndAutoDarkmodeSvg: string;

			export const Svg_ArcCurveDrawingArcStartEndDirectionAtStartAutoDarkmodeSvg: string;

			export const Svg_ArcCurveDrawingArcStartEndPointOnArcAutoDarkmodeSvg: string;

			export const Svg_ArcCurveDrawingArcStartPointOnArcEndAutoDarkmodeSvg: string;

			export const Svg_ArcCurveDrawingArcTangentToCurvesAutoDarkmodeSvg: string;

			export const Svg_ArcCurveDrawinArcTangentTangentRadiusAutoDarkmodeSvg: string;

			export const Svg_ArcCurveToolsConvertCurveToArcsAutoDarkmodeSvg: string;

			export const Svg_ArcDarkmodeAutoDarkmodeSvg: string;

			export const Svg_ArcMain1MainCurveDrawingArcCenterStartAngleAutoDarkmodeSvg: string;

			export const Svg_ArcSmallAutoDarkmodeSvg: string;

			export const Svg_ArcSmallDarkmodeAutoDarkmodeSvg: string;

			export const Svg_ArrayArrayAlongCurveAutoDarkmodeSvg: string;

			export const Svg_ArrayArrayAlongCurveOnSurfaceAutoDarkmodeSvg: string;

			export const Svg_ArrayArrayOnSurfaceAutoDarkmodeSvg: string;

			export const Svg_ArrayAutoDarkmodeSvg: string;

			export const Svg_ArrayLinearArrayAutoDarkmodeSvg: string;

			export const Svg_ArrayPolarArrayAutoDarkmodeSvg: string;

			export const Svg_ArrayRectangularArrayAutoDarkmodeSvg: string;

			export const Svg_AvailAutoDarkmodeSvg: string;

			export const Svg_BackgroundBitmapAlignBackgroundBitmapAutoDarkmodeSvg: string;

			export const Svg_BackgroundBitmapAutoDarkmodeSvg: string;

			export const Svg_BackgroundBitmapBackgroundBitmapHideAutoDarkmodeSvg: string;

			export const Svg_BackgroundBitmapMoveBackgroundBitmapAutoDarkmodeSvg: string;

			export const Svg_BackgroundBitmapPlaceBackgroundBitmapAutoDarkmodeSvg: string;

			export const Svg_BackgroundBitmapRemoveBackgroundBitmapAutoDarkmodeSvg: string;

			export const Svg_BackgroundBitmapScaleBackgroundBitmapAutoDarkmodeSvg: string;

			export const Svg_BackgroundBitmapShowBackgroundBitmapAutoDarkmodeSvg: string;

			export const Svg_BatchRenderNamedViewsAutoDarkmodeSvg: string;

			export const Svg_BlockManagerAddObjectsToBlockAutoDarkmodeSvg: string;

			export const Svg_BlockManagerAddObjectsToBlockDarkmodeAutoDarkmodeSvg: string;

			export const Svg_BlockManagerAddObjectsToBlockGrayAutoDarkmodeSvg: string;

			export const Svg_BlockManagerBlockInstancesDarkmodeAutoDarkmodeSvg: string;

			export const Svg_BlockManagerEmbeddedandLinkedBlockAutoDarkmodeSvg: string;

			export const Svg_BlockManagerEmbeddedandLinkedBlockDarkmodeAutoDarkmodeSvg: string;

			export const Svg_BlockManagerEmbeddedBlockAutoDarkmodeSvg: string;

			export const Svg_BlockManagerEmbeddedBlockDarkmodeAutoDarkmodeSvg: string;

			export const Svg_BlockManagerLinkedBlockAutoDarkmodeSvg: string;

			export const Svg_BlockManagerLinkedBlockDarkmodeAutoDarkmodeSvg: string;

			export const Svg_BlockManagerMakeUniqueAutoDarkmodeSvg: string;

			export const Svg_BlockManagerMakeUniqueDarkmodeAutoDarkmodeSvg: string;

			export const Svg_BlockManagerMakeUniqueGrayAutoDarkmodeSvg: string;

			export const Svg_BlockManagerTaskBlockInfoAutoDarkmodeSvg: string;

			export const Svg_BlockManagerTaskBlockInfoDarkmodeAutoDarkmodeSvg: string;

			export const Svg_BlockManagerTaskDeleteAutoDarkmodeSvg: string;

			export const Svg_BlockManagerTaskDuplicateAutoDarkmodeSvg: string;

			export const Svg_BlockManagerTaskDuplicateDarkmodeAutoDarkmodeSvg: string;

			export const Svg_BlockManagerTaskInsertAutoDarkmodeSvg: string;

			export const Svg_BlockManagerTaskInsertDarkmodeAutoDarkmodeSvg: string;

			export const Svg_BlockManagerTaskRenameAutoDarkmodeSvg: string;

			export const Svg_BlockManagerTaskRenameDarkmodeAutoDarkmodeSvg: string;

			export const Svg_BlockAutoDarkmodeSvg: string;

			export const Svg_BlockManagerTaskSaveAutoDarkmodeSvg: string;

			export const Svg_BlockManagerTaskSaveDarkmodeAutoDarkmodeSvg: string;

			export const Svg_BlockManagerTaskSelectInstancesAutoDarkmodeSvg: string;

			export const Svg_BlockManagerTaskSelectInstancesDarkmodeAutoDarkmodeSvg: string;

			export const Svg_BlockManagerUpdateAutoDarkmodeSvg: string;

			export const Svg_BlockManagerUpdateDarkmodeAutoDarkmodeSvg: string;

			export const Svg_BlockManagerUpdateGrayAutoDarkmodeSvg: string;

			export const Svg_BlocksAddMissingBlockAttributeKeysAutoDarkmodeSvg: string;

			export const Svg_BlockAddMissingBlockAttributeKeysAutoDarkmodeSvg: string;

			export const Svg_BlockBlockResetScaleAutoDarkmodeSvg: string;

			export const Svg_BlockBlockBlockEditAutoDarkmodeSvg: string;

			export const Svg_BlockBlockManagerAutoDarkmodeSvg: string;

			export const Svg_BlockDefinitionPropertiesPopOutAutoDarkmodeSvg: string;

			export const Svg_BlockDefinitionPropertiesPopOutDarkmodeAutoDarkmodeSvg: string;

			export const Svg_BlockExplodeBlockAutoDarkmodeSvg: string;

			export const Svg_BlockFileExportWithOriginAutoDarkmodeSvg: string;

			export const Svg_BlockMain1MainBlockDefinitionAutoDarkmodeSvg: string;

			export const Svg_BlockReplaceBlockAutoDarkmodeSvg: string;

			export const Svg_BlockSetModelBasePointAutoDarkmodeSvg: string;

			export const Svg_BoxAutoDarkmodeSvg: string;

			export const Svg_BoxBoundingBoxAutoDarkmodeSvg: string;

			export const Svg_BoxBoundingBoxCPlaneOrientationAutoDarkmodeSvg: string;

			export const Svg_BoxBox3PointsHeightAutoDarkmodeSvg: string;

			export const Svg_BoxBoxCenterCornerHeightAutoDarkmodeSvg: string;

			export const Svg_BoxMain1BoxCornerToCornerHeightAutoDarkmodeSvg: string;

			export const Svg_ca142d2eB1b6434b96b04eaac7e346acDarkAutoDarkmodeSvg: string;

			export const Svg_CageAutoDarkmodeSvg: string;

			export const Svg_CageReleaseObjectsFromControlCageAutoDarkmodeSvg: string;

			export const Svg_CageSelectCaptivesAutoDarkmodeSvg: string;

			export const Svg_CageSelectSelectControlsAutoDarkmodeSvg: string;

			export const Svg_CageTransformDeformationToolsCageAutoDarkmodeSvg: string;

			export const Svg_CageTransformDeformationToolsCageEditAutoDarkmodeSvg: string;

			export const Svg_ccb8282f83a24f54AfccFf92fb92dfbaAutoDarkmodeSvg: string;

			export const Svg_ccb8282f83a24f54AfccFf92fb92dfbaDarkAutoDarkmodeSvg: string;

			export const Svg_ce8e20f2D38a4c89Afc8412931bb46a9DarkAutoDarkmodeSvg: string;

			export const Svg_checkmarkNoShadowAutoDarkmodeSvg: string;

			export const Svg_checkmarkNoShadowDarkmodeAutoDarkmodeSvg: string;

			export const Svg_CircleAutoDarkmodeSvg: string;

			export const Svg_CircleCircle3PointsAutoDarkmodeSvg: string;

			export const Svg_CircleCircleAroundCurveAutoDarkmodeSvg: string;

			export const Svg_CircleCircleDeformableAutoDarkmodeSvg: string;

			export const Svg_CircleCircleFitPointsAutoDarkmodeSvg: string;

			export const Svg_CircleCircleTangentTo3CurvesAutoDarkmodeSvg: string;

			export const Svg_CircleCircleVerticalToCPlaneDiameterAutoDarkmodeSvg: string;

			export const Svg_CircleCurveDrawingCircleTangentTangentRadiusAutoDarkmodeSvg: string;

			export const Svg_CircleCurveDrawingCircleVerticalToCPlaneCenterRadiusAutoDarkmodeSvg: string;

			export const Svg_CircleCurveDrawingCircleDiameterAutoDarkmodeSvg: string;

			export const Svg_CircleMain1MainCurveDrawingCircleCenterRadiusAutoDarkmodeSvg: string;

			export const Svg_CollapseMeshAutoDarkmodeSvg: string;

			export const Svg_CollapseMeshCollapseMeshEdgeAutoDarkmodeSvg: string;

			export const Svg_CollapseMeshCollapseMeshFacesByAreaAutoDarkmodeSvg: string;

			export const Svg_CollapseMeshCollapseMeshFacesByAspectRatioAutoDarkmodeSvg: string;

			export const Svg_CollapseMeshCollapseMeshFacesByEdgeLengthAutoDarkmodeSvg: string;

			export const Svg_CollapseMeshCollapseMeshFaceAutoDarkmodeSvg: string;

			export const Svg_CollapseMeshCollapseMeshVertexAutoDarkmodeSvg: string;

			export const Svg_CollapseMeshMoveAutoDarkmodeSvg: string;

			export const Svg_ConstraintsAddNewAutoDarkmodeSvg: string;

			export const Svg_ConstraintsAlignedLengthAutoDarkmodeSvg: string;

			export const Svg_ConstraintsAlignedLengthDarkmodeAutoDarkmodeSvg: string;

			export const Svg_ConstraintsAlignedLengthViewAutoDarkmodeSvg: string;

			export const Svg_ConstraintsAnchorAutoDarkmodeSvg: string;

			export const Svg_ConstraintsAnchorDarkmodeAutoDarkmodeSvg: string;

			export const Svg_ConstraintsAnchorViewAutoDarkmodeSvg: string;

			export const Svg_ConstraintsAngleAutoDarkmodeSvg: string;

			export const Svg_ConstraintsAngleDarkmodeAutoDarkmodeSvg: string;

			export const Svg_ConstraintsAngleViewAutoDarkmodeSvg: string;

			export const Svg_ConstraintsCoincidentAutoDarkmodeSvg: string;

			export const Svg_ConstraintsCoincidentDarkmodeAutoDarkmodeSvg: string;

			export const Svg_ConstraintsCoincidentViewAutoDarkmodeSvg: string;

			export const Svg_ConstraintsCollinearAutoDarkmodeSvg: string;

			export const Svg_ConstraintsCollinearDarkmodeAutoDarkmodeSvg: string;

			export const Svg_ConstraintsCollinearViewAutoDarkmodeSvg: string;

			export const Svg_ConstraintsDisableIconsInViewAutoDarkmodeSvg: string;

			export const Svg_ConstraintsDisableIconsInViewDarkmodeAutoDarkmodeSvg: string;

			export const Svg_ConstraintsEnableIconsInViewAutoDarkmodeSvg: string;

			export const Svg_ConstraintsEnableIconsInViewDarkmodeAutoDarkmodeSvg: string;

			export const Svg_ConstraintsEqualAngleAutoDarkmodeSvg: string;

			export const Svg_ConstraintsEqualAngleDarkmodeAutoDarkmodeSvg: string;

			export const Svg_ConstraintsEqualAngleViewAutoDarkmodeSvg: string;

			export const Svg_ConstraintsEqualLengthAutoDarkmodeSvg: string;

			export const Svg_ConstraintsEqualLengthDarkmodeAutoDarkmodeSvg: string;

			export const Svg_ConstraintsEqualLengthViewAutoDarkmodeSvg: string;

			export const Svg_ConstraintsEqualRadiusAutoDarkmodeSvg: string;

			export const Svg_ConstraintsEqualRadiusDarkmodeAutoDarkmodeSvg: string;

			export const Svg_ConstraintsEqualRadiusViewAutoDarkmodeSvg: string;

			export const Svg_ConstraintsHorizontalAutoDarkmodeSvg: string;

			export const Svg_ConstraintsHorizontalDarkmodeAutoDarkmodeSvg: string;

			export const Svg_ConstraintsHorizontalViewAutoDarkmodeSvg: string;

			export const Svg_ConstraintsLengthAutoDarkmodeSvg: string;

			export const Svg_ConstraintsLengthDarkmodeAutoDarkmodeSvg: string;

			export const Svg_ConstraintsLengthRatioAutoDarkmodeSvg: string;

			export const Svg_ConstraintsLengthRatioDarkmodeAutoDarkmodeSvg: string;

			export const Svg_ConstraintsLengthRatioViewAutoDarkmodeSvg: string;

			export const Svg_ConstraintsLengthViewAutoDarkmodeSvg: string;

			export const Svg_ConstraintsMidPointAutoDarkmodeSvg: string;

			export const Svg_ConstraintsMidPointDarkmodeAutoDarkmodeSvg: string;

			export const Svg_ConstraintsMidPointViewAutoDarkmodeSvg: string;

			export const Svg_ConstraintsOffsetAutoDarkmodeSvg: string;

			export const Svg_ConstraintsOffsetDarkmodeAutoDarkmodeSvg: string;

			export const Svg_ConstraintsOffsetViewAutoDarkmodeSvg: string;

			export const Svg_ConstraintsOnCurveAutoDarkmodeSvg: string;

			export const Svg_ConstraintsOnCurveDarkmodeAutoDarkmodeSvg: string;

			export const Svg_ConstraintsOnCurveViewAutoDarkmodeSvg: string;

			export const Svg_ConstraintsOnLineAutoDarkmodeSvg: string;

			export const Svg_ConstraintsOnLineDarkmodeAutoDarkmodeSvg: string;

			export const Svg_ConstraintsOnLineViewAutoDarkmodeSvg: string;

			export const Svg_ConstraintsParallelAutoDarkmodeSvg: string;

			export const Svg_ConstraintsParallelDarkmodeAutoDarkmodeSvg: string;

			export const Svg_ConstraintsParallelViewAutoDarkmodeSvg: string;

			export const Svg_ConstraintsPerpendicularAutoDarkmodeSvg: string;

			export const Svg_ConstraintsPerpendicularDarkmodeAutoDarkmodeSvg: string;

			export const Svg_ConstraintsPerpendicularViewAutoDarkmodeSvg: string;

			export const Svg_ConstraintsPointOnLineAutoDarkmodeSvg: string;

			export const Svg_ConstraintsPointOnLineDarkmodeAutoDarkmodeSvg: string;

			export const Svg_ConstraintsPointOnLineViewAutoDarkmodeSvg: string;

			export const Svg_ConstraintsRadiusAutoDarkmodeSvg: string;

			export const Svg_ConstraintsRadiusDarkmodeAutoDarkmodeSvg: string;

			export const Svg_ConstraintsRadiusViewAutoDarkmodeSvg: string;

			export const Svg_ConstraintsSketchAddObjectAutoDarkmodeSvg: string;

			export const Svg_ConstraintsSketchAddObjectDarkmodeAutoDarkmodeSvg: string;

			export const Svg_ConstraintsTangentArcAutoDarkmodeSvg: string;

			export const Svg_ConstraintsTangentArcDarkmodeAutoDarkmodeSvg: string;

			export const Svg_ConstraintsTangentArcViewAutoDarkmodeSvg: string;

			export const Svg_ConstraintsVerticalAutoDarkmodeSvg: string;

			export const Svg_ConstraintsVerticalDarkmodeAutoDarkmodeSvg: string;

			export const Svg_ConstraintsVerticalViewAutoDarkmodeSvg: string;

			export const Svg_ConvertTextToBlockAttributeAutoDarkmodeSvg: string;

			export const Svg_ConvertToSingleSpansAutoDarkmodeSvg: string;

			export const Svg_CPlanesAutoDarkmodeSvg: string;

			export const Svg_CPlanesImportNamedCPlanesFromFileAutoDarkmodeSvg: string;

			export const Svg_CPlanesRestoreCPlaneByNameAutoDarkmodeSvg: string;

			export const Svg_CPlanesRotateCPlaneAutoDarkmodeSvg: string;

			export const Svg_CPlanesSaveCPlaneByNameAutoDarkmodeSvg: string;

			export const Svg_CPlanesSelectSavedCPlaneAutoDarkmodeSvg: string;

			export const Svg_CPlanesSetCPlaneBy3PointsAutoDarkmodeSvg: string;

			export const Svg_CPlanesSetCPlaneByXAxisAutoDarkmodeSvg: string;

			export const Svg_CPlanesSetCPlaneByZAxisAutoDarkmodeSvg: string;

			export const Svg_CPlanesSetCPlaneElevationAutoDarkmodeSvg: string;

			export const Svg_CPlanesSetCPlaneModeAutoDarkmodeSvg: string;

			export const Svg_CPlanesSetCPlanePerpendicularToCurveAutoDarkmodeSvg: string;

			export const Svg_CPlanesSetCPlaneToObjectAutoDarkmodeSvg: string;

			export const Svg_CPlanesSetCPlaneToSurfaceAutoDarkmodeSvg: string;

			export const Svg_CPlanesSetCPlaneToViewAutoDarkmodeSvg: string;

			export const Svg_CPlanesSetCPlaneWorldBackAutoDarkmodeSvg: string;

			export const Svg_CPlanesSetCPlaneWorldBottomAutoDarkmodeSvg: string;

			export const Svg_CPlanesSetCPlaneWorldFrontAutoDarkmodeSvg: string;

			export const Svg_CPlanesSetCPlaneWorldLeftAutoDarkmodeSvg: string;

			export const Svg_CPlanesSetCPlaneWorldRightAutoDarkmodeSvg: string;

			export const Svg_CPlanesSetCPlaneWorldTopAutoDarkmodeSvg: string;

			export const Svg_CPlanesSetMobileConstructionPlaneAutoDarkmodeSvg: string;

			export const Svg_CPlanesSetUPlaneModeAutoDarkmodeSvg: string;

			export const Svg_CPlanesStandardSetCPlaneOriginAutoDarkmodeSvg: string;

			export const Svg_CPlanesToggleCPlanePanelAutoDarkmodeSvg: string;

			export const Svg_CPlanesUndoRedoCPlaneAutoDarkmodeSvg: string;

			export const Svg_CPlanesUndoUndoCPlaneAutoDarkmodeSvg: string;

			export const Svg_CPlaneSetCPlaneVerticalAutoDarkmodeSvg: string;

			export const Svg_CPlaneViewAutoDarkmodeSvg: string;

			export const Svg_CreateGridAutoDarkmodeSvg: string;

			export const Svg_CreateGridCreateGridArrayAutoDarkmodeSvg: string;

			export const Svg_CreateGridCreateGridExtrude1CurveAutoDarkmodeSvg: string;

			export const Svg_CreateGridCreateGridExtrude2CurvesAutoDarkmodeSvg: string;

			export const Svg_CreateGridCreateGridOneProjectionCurveAutoDarkmodeSvg: string;

			export const Svg_CreateGridCreateGridPointsAutoDarkmodeSvg: string;

			export const Svg_CreateGridCreateGridPointsOnSurfaceAutoDarkmodeSvg: string;

			export const Svg_CreateGridCreateGridPolarArrayAutoDarkmodeSvg: string;

			export const Svg_CreateGridCreateGridSurfaceDomainVariableAutoDarkmodeSvg: string;

			export const Svg_CreateGridCreateGridSurfaceEqualDistanceAutoDarkmodeSvg: string;

			export const Svg_CreateGridCreateGridTwoProjectionCurvesAutoDarkmodeSvg: string;

			export const Svg_CreateGridCreateGridUseSurfaceBaseUVIso01AutoDarkmodeSvg: string;

			export const Svg_CreateGridCreateGridUseSurfaceBaseUVIso02AutoDarkmodeSvg: string;

			export const Svg_CreateGridCreateGridUseSurfaceBaseUVIsoAutoDarkmodeSvg: string;

			export const Svg_CreateGridCreateGridUVCurvesAutoDarkmodeSvg: string;

			export const Svg_CreateGridCreateGridUCurvesAutoDarkmodeSvg: string;

			export const Svg_CreateGridMacroAutoDarkmodeSvg: string;

			export const Svg_CreateGridUseSurfaceBaseUVIsocurvesAndDivideByNumberOrDistance00AutoDarkmodeSvg: string;

			export const Svg_CreateGridUseSurfaceDomainParameterizationAutoDarkmodeSvg: string;

			export const Svg_CurveAutoDarkmodeSvg: string;

			export const Svg_CurveConicAutoDarkmodeSvg: string;

			export const Svg_CurveConicPerpendicularAtStartAutoDarkmodeSvg: string;

			export const Svg_CurveCurveThroughPolylineVerticesAutoDarkmodeSvg: string;

			export const Svg_CurveCurveControlPointsFromPolylineAutoDarkmodeSvg: string;

			export const Svg_CurveCurveCurveDrawingHandleCurveAutoDarkmodeSvg: string;

			export const Svg_CurveCurveDrawingConicTangentAtStartAutoDarkmodeSvg: string;

			export const Svg_CurveCurveDrawingConicTangentAtStartEndAutoDarkmodeSvg: string;

			export const Svg_CurveCurveDrawingHelixAutoDarkmodeSvg: string;

			export const Svg_CurveCurveDrawingNewInV6Parabola3PtAutoDarkmodeSvg: string;

			export const Svg_CurveCurveDrawingParabolaByFocusAutoDarkmodeSvg: string;

			export const Svg_CurveCurveDrawingParabolaByVertexAutoDarkmodeSvg: string;

			export const Svg_CurveCurveDrawingSketchAutoDarkmodeSvg: string;

			export const Svg_CurveCurveDrawingSketchOnSurfaceAutoDarkmodeSvg: string;

			export const Svg_CurveCurveDrawingVerticalHelixAutoDarkmodeSvg: string;

			export const Svg_CurveCurveToolsTweenCurvesAutoDarkmodeSvg: string;

			export const Svg_CurveDarkmodeAutoDarkmodeSvg: string;

			export const Svg_CurveDrawingAutoDarkmodeSvg: string;

			export const Svg_CurveFlatPiralAutoDarkmodeSvg: string;

			export const Svg_CurveFromObjectApplyUVCurvesAutoDarkmodeSvg: string;

			export const Svg_CurveFromObjectAutoDarkmodeSvg: string;

			export const Svg_CurveFromObjectBlendPerpendicularAutoDarkmodeSvg: string;

			export const Svg_CurveFromObjectContourAutoDarkmodeSvg: string;

			export const Svg_CurveFromObjectCreateVCurvesAutoDarkmodeSvg: string;

			export const Svg_CurveFromObjectCurveToolsMain1ProjectCurvesAutoDarkmodeSvg: string;

			export const Svg_CurveFromObjectCurveToolsNewInV6MoveExtractedIsocurveAutoDarkmodeSvg: string;

			export const Svg_CurveFromObjectCurveToolsProjectCurvesLooseAutoDarkmodeSvg: string;

			export const Svg_CurveFromObjectDuplicateEdgeAutoDarkmodeSvg: string;

			export const Svg_CurveFromObjectDuplicateFaceBorderAutoDarkmodeSvg: string;

			export const Svg_CurveFromObjectDuplicateMeshEdgeAutoDarkmodeSvg: string;

			export const Svg_CurveFromObjectExtractIsocurveAutoDarkmodeSvg: string;

			export const Svg_CurveFromObjectExtractWireframeAutoDarkmodeSvg: string;

			export const Svg_CurveFromObjectGeodesicCurveAutoDarkmodeSvg: string;

			export const Svg_CurveFromObjectIntersectObjectsAutoDarkmodeSvg: string;

			export const Svg_CurveFromObjectIntersectTwoSetsAutoDarkmodeSvg: string;

			export const Svg_CurveFromObjectMeshOutlineAutoDarkmodeSvg: string;

			export const Svg_CurveFromObjectPointCloudSectionAutoDarkmodeSvg: string;

			export const Svg_CurveFromObjectPoinExtractPointsAutoDarkmodeSvg: string;

			export const Svg_CurveFromObjectPullCurveAutoDarkmodeSvg: string;

			export const Svg_CurveFromObjectPullCurveLooseAutoDarkmodeSvg: string;

			export const Svg_CurveFromObjectSectionAutoDarkmodeSvg: string;

			export const Svg_CurveFromObjectSilhouetteAutoDarkmodeSvg: string;

			export const Svg_CurveHyperbolaAutoDarkmodeSvg: string;

			export const Svg_CurveMain2MainCurveDrawingControlPointCurveAutoDarkmodeSvg: string;

			export const Svg_CurveMain2MainCurveDrawingCurveThroughPointsAutoDarkmodeSvg: string;

			export const Svg_CurveNewInV6CatenaryAutoDarkmodeSvg: string;

			export const Svg_CurveSketchOnPolygonMeshAutoDarkmodeSvg: string;

			export const Svg_CurveSmallAutoDarkmodeSvg: string;

			export const Svg_CurveSmallDarkmodeAutoDarkmodeSvg: string;

			export const Svg_CurveSpiralAutoDarkmodeSvg: string;

			export const Svg_CurveToolsAdjustableCurveBlendAutoDarkmodeSvg: string;

			export const Svg_CurveToolsAdjustClosedCurveSeamAutoDarkmodeSvg: string;

			export const Svg_CurveToolsArcBlendAutoDarkmodeSvg: string;

			export const Svg_CurveToolsAutoDarkmodeSvg: string;

			export const Svg_CurveToolsBlendCurvesAutoDarkmodeSvg: string;

			export const Svg_CurveToolsChamferCurvesAutoDarkmodeSvg: string;

			export const Svg_CurveToolsChamferCurvesRepeatAutoDarkmodeSvg: string;

			export const Svg_CurveToolsChangeDegreeAutoDarkmodeSvg: string;

			export const Svg_CurveToolsCloseOpenCurvesAutoDarkmodeSvg: string;

			export const Svg_CurveToolsConnectRepeatAutoDarkmodeSvg: string;

			export const Svg_CurveToolsContinueControlPointCurveAutoDarkmodeSvg: string;

			export const Svg_CurveToolsContinueInterpCrvAutoDarkmodeSvg: string;

			export const Svg_CurveToolsCopySubCurveAutoDarkmodeSvg: string;

			export const Svg_CurveToolsCurveBooleanDeleteAllInputAutoDarkmodeSvg: string;

			export const Svg_CurveToolsCurveToolsNewInV6OffsetCurveMultipleAutoDarkmodeSvg: string;

			export const Svg_CurveToolsCurveFrom2ViewsAutoDarkmodeSvg: string;

			export const Svg_CurveToolsCurveFromCrossSectionProfilesAutoDarkmodeSvg: string;

			export const Svg_CurveToolsCurveSymetryAutoDarkmodeSvg: string;

			export const Svg_CurveToolsDeleteSubCurveAutoDarkmodeSvg: string;

			export const Svg_CurveToolsExtendConnectAutoDarkmodeSvg: string;

			export const Svg_CurveToolsExtendExtendCurveAutoDarkmodeSvg: string;

			export const Svg_CurveToolsExtendExtendCurveToBoundaryAutoDarkmodeSvg: string;

			export const Svg_CurveToolsExtractSubCurveAutoDarkmodeSvg: string;

			export const Svg_CurveToolsFairCurveAutoDarkmodeSvg: string;

			export const Svg_CurveToolsFilletCornersAutoDarkmodeSvg: string;

			export const Svg_CurveToolsFilletCurvesRepeatAutoDarkmodeSvg: string;

			export const Svg_CurveToolsGeometryFixMainPointsOnAutoDarkmodeSvg: string;

			export const Svg_CurveToolsInsertLineIntoCurveAutoDarkmodeSvg: string;

			export const Svg_CurveToolsLinesConvertCurveToPolylineAutoDarkmodeSvg: string;

			export const Svg_CurveToolsMain2MainFilletCurvesAutoDarkmodeSvg: string;

			export const Svg_CurveToolsMain2PointsOffAutoDarkmodeSvg: string;

			export const Svg_CurveToolsMakeNonPeriodicAutoDarkmodeSvg: string;

			export const Svg_CurveToolsMakePeriodicAutoDarkmodeSvg: string;

			export const Svg_CurveToolsMatchCurveDirAutoDarkmodeSvg: string;

			export const Svg_CurveToolsMatchCurveAutoDarkmodeSvg: string;

			export const Svg_CurveToolsOffsetCurveAutoDarkmodeSvg: string;

			export const Svg_CurveToolsOffsetCurveNormalToSurfaceAutoDarkmodeSvg: string;

			export const Svg_CurveToolsOffsetCurveOnSurfaceAutoDarkmodeSvg: string;

			export const Svg_CurveToolsPointMarkCurveEndAutoDarkmodeSvg: string;

			export const Svg_CurveToolsRebuildCurvesToMasterCurveAutoDarkmodeSvg: string;

			export const Svg_CurveToolsRebuildCurveAutoDarkmodeSvg: string;

			export const Svg_CurveToolsRebuildCurveNonUniformAutoDarkmodeSvg: string;

			export const Svg_CurveToolsRefitCurveAutoDarkmodeSvg: string;

			export const Svg_CurveToolsSimplifyLinesAndArcsAutoDarkmodeSvg: string;

			export const Svg_CurveToolsSubCurveAutoDarkmodeSvg: string;

			export const Svg_CurveToolsSurfaceToolsRemoveMultipleKnotsAutoDarkmodeSvg: string;

			export const Svg_CurveToolsToolsUtilitiesNewInV6AddGuideAutoDarkmodeSvg: string;

			export const Svg_CurveToolsToolsUtilitiesNewInV6RemoveGuideAutoDarkmodeSvg: string;

			export const Svg_d8096f35E6b245dcAcaa06f945a9668eDarkAutoDarkmodeSvg: string;

			export const Svg_defaultEditPythonScriptAutoDarkmodeSvg: string;

			export const Svg_DeformationToolsAutoDarkmodeSvg: string;

			export const Svg_DeformationToolsFlowAlongCurveAutoDarkmodeSvg: string;

			export const Svg_DeformationToolsMaelstromAutoDarkmodeSvg: string;

			export const Svg_DeformationToolsSplopAutoDarkmodeSvg: string;

			export const Svg_DiagnosticsAudit3dmFileAutoDarkmodeSvg: string;

			export const Svg_DiagnosticsAuditAutoDarkmodeSvg: string;

			export const Svg_DiagnosticsAutoDarkmodeSvg: string;

			export const Svg_DiagnosticsGeometryFixExtractBadSurfacesAutoDarkmodeSvg: string;

			export const Svg_DiagnosticsListObjectDatabaseAutoDarkmodeSvg: string;

			export const Svg_DiagnosticsObjectDetailsAutoDarkmodeSvg: string;

			export const Svg_DiagnosticsToolsNewInV6SystemInfoAutoDarkmodeSvg: string;

			export const Svg_DiagnosticsToolsUtilitiesRescue3dmFileAutoDarkmodeSvg: string;

			export const Svg_DimensionAutoDarkmodeSvg: string;

			export const Svg_DimensionDimCreaseAngleAutoDarkmodeSvg: string;

			export const Svg_DimensionDimCurveLengthAutoDarkmodeSvg: string;

			export const Svg_DimensionDraftingAlignedDimensionAutoDarkmodeSvg: string;

			export const Svg_DimensionDraftingAlignedDimensionContinuousAutoDarkmodeSvg: string;

			export const Svg_DimensionDraftingAngleDimensionAutoDarkmodeSvg: string;

			export const Svg_DimensionDraftingCenterMarkAutoDarkmodeSvg: string;

			export const Svg_DimensionDraftingDiameterDimensionAutoDarkmodeSvg: string;

			export const Svg_DimensionDraftingHorizontalDimensionAutoDarkmodeSvg: string;

			export const Svg_DimensionDraftingHorizontalDimensionContinuousAutoDarkmodeSvg: string;

			export const Svg_DimensionDraftingLeaderAutoDarkmodeSvg: string;

			export const Svg_DimensionDraftingOrdinateDimensionAutoDarkmodeSvg: string;

			export const Svg_DimensionDraftingRadialDimensionAutoDarkmodeSvg: string;

			export const Svg_DimensionDraftingRecenterDimensionTextAutoDarkmodeSvg: string;

			export const Svg_DimensionDraftingRotatedDimensionAutoDarkmodeSvg: string;

			export const Svg_DimensionDraftingRotatedDimensionContinuousAutoDarkmodeSvg: string;

			export const Svg_DimensionDraftingSetCurrentDimStyleAutoDarkmodeSvg: string;

			export const Svg_DimensionDraftingSingleLineOfTextAutoDarkmodeSvg: string;

			export const Svg_DimensionDraftingStandardLinearDimensionAutoDarkmodeSvg: string;

			export const Svg_DimensionDraftingStandardLinearDimensionContinuousAutoDarkmodeSvg: string;

			export const Svg_DimensionDraftingTextAutoDarkmodeSvg: string;

			export const Svg_DimensionDraftingVerticalDimensionAutoDarkmodeSvg: string;

			export const Svg_DimensionDraftingVerticalDimensionContinuousAutoDarkmodeSvg: string;

			export const Svg_DimensionRevCloudCurveAutoDarkmodeSvg: string;

			export const Svg_DimenssionExtractLineTypeSegmentsAutoDarkmodeSvg: string;

			export const Svg_DisplayArtisticDisplayAllAutoDarkmodeSvg: string;

			export const Svg_DisplayArtisticDisplayAutoDarkmodeSvg: string;

			export const Svg_DisplayAutoDarkmodeSvg: string;

			export const Svg_DisplayDisplayPanelAutoDarkmodeSvg: string;

			export const Svg_DisplayGhostedViewportAllAutoDarkmodeSvg: string;

			export const Svg_DisplayGhostedViewportAutoDarkmodeSvg: string;

			export const Svg_DisplayPenDisplayAllAutoDarkmodeSvg: string;

			export const Svg_DisplayPenDisplayAutoDarkmodeSvg: string;

			export const Svg_DisplayRenderedViewportAllAutoDarkmodeSvg: string;

			export const Svg_DisplayRenderedViewportAutoDarkmodeSvg: string;

			export const Svg_DisplaySetObjectShadingAttributesAutoDarkmodeSvg: string;

			export const Svg_DisplayShadedViewportAllAutoDarkmodeSvg: string;

			export const Svg_DisplayTechnicalDisplayAllAutoDarkmodeSvg: string;

			export const Svg_DisplayTechnicalDisplayAutoDarkmodeSvg: string;

			export const Svg_DisplayToggleShadeSelectedModeAutoDarkmodeSvg: string;

			export const Svg_DisplayXRayViewportAllAutoDarkmodeSvg: string;

			export const Svg_DisplayXRayViewportAutoDarkmodeSvg: string;

			export const Svg_DraftingAutoDarkmodeSvg: string;

			export const Svg_DraftingDisplayPrintDisplayAutoDarkmodeSvg: string;

			export const Svg_DraftingDrawOrderBlankAutoDarkmodeSvg: string;

			export const Svg_DraftingLayoutNewInV6ChangeSpaceAutoDarkmodeSvg: string;

			export const Svg_DraftingLinetypeDisplayAutoDarkmodeSvg: string;

			export const Svg_DragModeAutoDarkmodeSvg: string;

			export const Svg_DragModeSetDragModeCPlaneAutoDarkmodeSvg: string;

			export const Svg_DragModeSetDragModeWorldAutoDarkmodeSvg: string;

			export const Svg_DragModeSetDragModeControlPolygonAutoDarkmodeSvg: string;

			export const Svg_DragModeSetDragModeUVNAutoDarkmodeSvg: string;

			export const Svg_DragModeSetDragModeViewAutoDarkmodeSvg: string;

			export const Svg_DrawOrderAutoDarkmodeSvg: string;

			export const Svg_DrawOrderBringForwardAutoDarkmodeSvg: string;

			export const Svg_DrawOrderBringToFrontAutoDarkmodeSvg: string;

			export const Svg_DrawOrderClearDrawOrderAutoDarkmodeSvg: string;

			export const Svg_DrawOrderSendBackwardAutoDarkmodeSvg: string;

			export const Svg_DrawOrderSendToBackAutoDarkmodeSvg: string;

			export const Svg_e7368a196e0440d582a83266930e8cc4DarkAutoDarkmodeSvg: string;

			export const Svg_EdgeToolsAutoDarkmodeSvg: string;

			export const Svg_EdgeToolsMarkNakedEdgesAutoDarkmodeSvg: string;

			export const Svg_EdgeToolsMergeAllEdgesAutoDarkmodeSvg: string;

			export const Svg_EdgeToolsZoomNakedAllAutoDarkmodeSvg: string;

			export const Svg_EdgeToolsZoomNakedNextAutoDarkmodeSvg: string;

			export const Svg_EdgeToolsZoomNakedPreviousAutoDarkmodeSvg: string;

			export const Svg_EllipseAutoDarkmodeSvg: string;

			export const Svg_EllipseCurveDrawingEllipseDiameterAutoDarkmodeSvg: string;

			export const Svg_EllipseEllipseAroundCurveAutoDarkmodeSvg: string;

			export const Svg_EllipseEllipseByCornersAutoDarkmodeSvg: string;

			export const Svg_EllipseEllipseDeformableAutoDarkmodeSvg: string;

			export const Svg_EllipseEllipseFromFociAutoDarkmodeSvg: string;

			export const Svg_EllipseMainCurveDrawingEllipseFromCenterAutoDarkmodeSvg: string;

			export const Svg_EllipsoidAutoDarkmodeSvg: string;

			export const Svg_EllipsoidEllipsoidAroundCurveAutoDarkmodeSvg: string;

			export const Svg_EllipsoidEllipsoidByCornersAutoDarkmodeSvg: string;

			export const Svg_EllipsoidEllipsoidByDiameterAutoDarkmodeSvg: string;

			export const Svg_EllipsoidEllipsoidFromFociAutoDarkmodeSvg: string;

			export const Svg_EllipsoidSolidsSidebarSolidCreationEllipsoidFromCenterAutoDarkmodeSvg: string;

			export const Svg_EmptyTransparentIconAutoDarkmodeSvg: string;

			export const Svg_ExtendAutoDarkmodeSvg: string;

			export const Svg_ExtendExtendByArcKeepRadiusAutoDarkmodeSvg: string;

			export const Svg_ExtendExtendByArcToPointAutoDarkmodeSvg: string;

			export const Svg_ExtendExtendByArcWithCenterAutoDarkmodeSvg: string;

			export const Svg_ExtendExtendByLineAutoDarkmodeSvg: string;

			export const Svg_ExtendExtendCurveOnSurfaceAutoDarkmodeSvg: string;

			export const Svg_ExtendExtendCurveSmoothAutoDarkmodeSvg: string;

			export const Svg_ExtractCustomMappingObjectAutoDarkmodeSvg: string;

			export const Svg_ExtractOriginalCaptivesAutoDarkmodeSvg: string;

			export const Svg_ExtractMeshAutoDarkmodeSvg: string;

			export const Svg_ExtractMeshExtractConnectedMeshFacesAutoDarkmodeSvg: string;

			export const Svg_ExtractMeshExtractMeshEdgesAutoDarkmodeSvg: string;

			export const Svg_ExtractMeshExtractMeshFacesByAreaAutoDarkmodeSvg: string;

			export const Svg_ExtractMeshExtractMeshFacesByAspectRatioAutoDarkmodeSvg: string;

			export const Svg_ExtractMeshExtractMeshFacesByDraftAngleAutoDarkmodeSvg: string;

			export const Svg_ExtractMeshExtractMeshFacesByEdgeLengthAutoDarkmodeSvg: string;

			export const Svg_ExtractMeshExtractMeshPartAutoDarkmodeSvg: string;

			export const Svg_ExtrudeAutoDarkmodeSvg: string;

			export const Svg_ExtrudeExtrudeSolidSurfaceSidebarSurfaceCreationExtrudeCurveTaperedAutoDarkmodeSvg: string;

			export const Svg_ExtrudeSolidAutoDarkmodeSvg: string;

			export const Svg_ExtrudeSolidBossAutoDarkmodeSvg: string;

			export const Svg_ExtrudeSolidExtrudeCurveAlongCurveAutoDarkmodeSvg: string;

			export const Svg_ExtrudeSolidExtrudeCurveAlongSubcurveAutoDarkmodeSvg: string;

			export const Svg_ExtrudeSolidExtrudeCurveToPointAutoDarkmodeSvg: string;

			export const Svg_ExtrudeSolidExtrudeSurfaceAlongCurveAutoDarkmodeSvg: string;

			export const Svg_ExtrudeSolidExtrudeSurfaceAlongSubcurveAutoDarkmodeSvg: string;

			export const Svg_ExtrudeSolidExtrudeSurfaceTaperedAutoDarkmodeSvg: string;

			export const Svg_ExtrudeSolidExtrudeSurfaceToPointAutoDarkmodeSvg: string;

			export const Svg_ExtrudeSolidRibAutoDarkmodeSvg: string;

			export const Svg_ExtrudeSolidSlabFromPolylineAutoDarkmodeSvg: string;

			export const Svg_ExtrudeSolidSolidsSidebarExtrudeClosedPlanarCurveAutoDarkmodeSvg: string;

			export const Svg_ExtrudeSolidSolidsSidebarSolidCreationExtrudeSurfaceAutoDarkmodeSvg: string;

			export const Svg_ExtrudeSurfaceSidebarExtrudeAlongSubcurveAutoDarkmodeSvg: string;

			export const Svg_ExtrudeSurfaceSidebarSurfaceCreationExtrudeAlongCurveAutoDarkmodeSvg: string;

			export const Svg_ExtrudeSurfaceSidebarSurfaceCreationExtrudeCurveNormalToSurfaceAutoDarkmodeSvg: string;

			export const Svg_ExtrudeSurfaceSidebarSurfaceCreationExtrudeStraightAutoDarkmodeSvg: string;

			export const Svg_ExtrudeSurfaceSidebarSurfaceCreationExtrudeToPointAutoDarkmodeSvg: string;

			export const Svg_FileAutoDarkmodeSvg: string;

			export const Svg_FileAutoSaveAutoDarkmodeSvg: string;

			export const Svg_FileExportAutoDarkmodeSvg: string;

			export const Svg_FileExportBitmapsAutoDarkmodeSvg: string;

			export const Svg_FileIncrementalSaveAutoDarkmodeSvg: string;

			export const Svg_FileNotesAutoDarkmodeSvg: string;

			export const Svg_FileOpenAutoDarkmodeSvg: string;

			export const Svg_FilePopupStandardSTLToolsSaveAutoDarkmodeSvg: string;

			export const Svg_FilePopupSTLToolsSaveAsAutoDarkmodeSvg: string;

			export const Svg_FileRevertAutoDarkmodeSvg: string;

			export const Svg_FileSaveAsTemplateFileAutoDarkmodeSvg: string;

			export const Svg_FileSaveGeometryOnlyAutoDarkmodeSvg: string;

			export const Svg_FileSaveSmallAutoDarkmodeSvg: string;

			export const Svg_FileSetWorkingDirectoryAutoDarkmodeSvg: string;

			export const Svg_FileStandardNewFileAutoDarkmodeSvg: string;

			export const Svg_FileStandardSTLToolsImportMergeAutoDarkmodeSvg: string;

			export const Svg_FileStandardSTLToolsOpenAutoDarkmodeSvg: string;

			export const Svg_FileWorksessionWorksessionAutoDarkmodeSvg: string;

			export const Svg_GeneralUtilityAutoDarkmodeSvg: string;

			export const Svg_GeneralUtilityGeneralUtilityDivideCurveAutoDarkmodeSvg: string;

			export const Svg_GeneralUtilityGeneralUtilityDivideCurveByDistanceAutoDarkmodeSvg: string;

			export const Svg_GeneralUtilityGeneralUtilityExportSerializedEdgesAutoDarkmodeSvg: string;

			export const Svg_GeneralUtilityGeneralUtilityExportSerializedPointsAutoDarkmodeSvg: string;

			export const Svg_GeneralUtilityGeneralUtilityMeanCurvesAutoDarkmodeSvg: string;

			export const Svg_GeneralUtilityGeneralUtilityMeanSurfaceAutoDarkmodeSvg: string;

			export const Svg_GeneralUtilityGeneralUtilityRemoveOverlappedPointsAutoDarkmodeSvg: string;

			export const Svg_GeneralUtilityGeneralUtilitySerializeEdgesAutoDarkmodeSvg: string;

			export const Svg_GeneralUtilityGeneralUtilitySerializeObjectsNameAutoDarkmodeSvg: string;

			export const Svg_GeneralUtilityGeneralUtilitySerializePointsAutoDarkmodeSvg: string;

			export const Svg_GeneralUtilityGeneralUtilitySurfaceFromControlGridAutoDarkmodeSvg: string;

			export const Svg_GeneralUtilityGeneralUtilitySurfaceFromGridAutoDarkmodeSvg: string;

			export const Svg_GeneralUtilityGeneralUtilityTagObjectsNamesAutoDarkmodeSvg: string;

			export const Svg_GeneralUtilityGeneralUtilityTagWithSerializedDataAutoDarkmodeSvg: string;

			export const Svg_GeneralUtilityGeneralUtilityUnifyCurvesDirectionAutoDarkmodeSvg: string;

			export const Svg_GeometryFixAutoDarkmodeSvg: string;

			export const Svg_GeometryFixEdgeToolsJoin2NakedEdgesAutoDarkmodeSvg: string;

			export const Svg_GeometryFixInvertHideAutoDarkmodeSvg: string;

			export const Svg_GeometryFixMain1JoinAutoDarkmodeSvg: string;

			export const Svg_GeometryFixMain1JoinCopyAutoDarkmodeSvg: string;

			export const Svg_GeometryFixMain1SolidsSidebarTrimAutoDarkmodeSvg: string;

			export const Svg_GeometryFixMain2ExplodeAutoDarkmodeSvg: string;

			export const Svg_GeometryFixMain2SplitAutoDarkmodeSvg: string;

			export const Svg_GeometryFixMain2SplitSurfaceByIsocurveAutoDarkmodeSvg: string;

			export const Svg_GeometryFixOrganicHideObjectsAutoDarkmodeSvg: string;

			export const Svg_GeometryFixOrganicShowObjectsAutoDarkmodeSvg: string;

			export const Svg_GeometryFixPointsOffAutoDarkmodeSvg: string;

			export const Svg_GeometryFixStandardUndoRedoAutoDarkmodeSvg: string;

			export const Svg_GeometryFixStandardUndoUndoAutoDarkmodeSvg: string;

			export const Svg_GeometryFixSTLToolsEdgeToolsNewInV6RemovNakedMicroEdgesAutoDarkmodeSvg: string;

			export const Svg_GeometryFixSurfaceToolsDetachTrimAutoDarkmodeSvg: string;

			export const Svg_GeometryFixSurfaceToolsShrinkTrimmedSurfaceToEdgeAutoDarkmodeSvg: string;

			export const Svg_GeometryFixTransformSmoothAutoDarkmodeSvg: string;

			export const Svg_GeometryFixUntrimSurfaceAutoDarkmodeSvg: string;

			export const Svg_GeometryFixVisibilityShowSelectedObjectsAutoDarkmodeSvg: string;

			export const Svg_GrasshopperPluginListAutoDarkmodeSvg: string;

			export const Svg_GridUtilityAutoDarkmodeSvg: string;

			export const Svg_GridUtilityGridUtilityChangeGridDensityAutoDarkmodeSvg: string;

			export const Svg_GridUtilityGridUtilityChangeGridSeamAutoDarkmodeSvg: string;

			export const Svg_GridUtilityGridUtilityCleanOverlapedGridPointsAutoDarkmodeSvg: string;

			export const Svg_GridUtilityGridUtilityCloseGridAutoDarkmodeSvg: string;

			export const Svg_GridUtilityGridUtilityCompactGridToRemoveHolesAutoDarkmodeSvg: string;

			export const Svg_GridUtilityGridUtilityConvertRectangularGridToDiagonalOneAutoDarkmodeSvg: string;

			export const Svg_GridUtilityGridUtilityConvertRectangularGridToDiamondOneAutoDarkmodeSvg: string;

			export const Svg_GridUtilityGridUtilityExtendGridAutoDarkmodeSvg: string;

			export const Svg_GridUtilityGridUtilityExtractCenterGridAutoDarkmodeSvg: string;

			export const Svg_GridUtilityGridUtilityMeanGridsAutoDarkmodeSvg: string;

			export const Svg_GridUtilityGridUtilityOffsetGridByImageHeightfieldAutoDarkmodeSvg: string;

			export const Svg_GridUtilityGridUtilityOffsetPointsAutoDarkmodeSvg: string;

			export const Svg_GridUtilityGridUtilityReverseGridUAndOrVDirectionsAutoDarkmodeSvg: string;

			export const Svg_GridUtilityGridUtilityReverseRowsDirectionAutoDarkmodeSvg: string;

			export const Svg_GridUtilityGridUtilityShiftGridRowsAndOrColumnsAutoDarkmodeSvg: string;

			export const Svg_GridUtilityGridUtilityShuffleGridPointsUsingAttratorsAutoDarkmodeSvg: string;

			export const Svg_GridUtilityGridUtilitySwapGridUVDirectionsAutoDarkmodeSvg: string;

			export const Svg_GridUtilityGridUtilityTrimGridAutoDarkmodeSvg: string;

			export const Svg_GridUtilityGridUtilityWeave2GridsIntoOneGridAutoDarkmodeSvg: string;

			export const Svg_GroupingAddToGroupAutoDarkmodeSvg: string;

			export const Svg_GroupingAutoDarkmodeSvg: string;

			export const Svg_GroupingMain1MainGroupAutoDarkmodeSvg: string;

			export const Svg_GroupingMain1MainUngroupAutoDarkmodeSvg: string;

			export const Svg_GroupingRemoveFromGroupAutoDarkmodeSvg: string;

			export const Svg_GroupingSetGroupNameAutoDarkmodeSvg: string;

			export const Svg_GumballAutoDarkmodeSvg: string;

			export const Svg_GumballGumballAlignmentCPlaneAutoDarkmodeSvg: string;

			export const Svg_GumballGumballAlignmentToObjectAutoDarkmodeSvg: string;

			export const Svg_GumballGumballAlignmentToWorldAutoDarkmodeSvg: string;

			export const Svg_GumballNewInV6GumballAutoresetAutoDarkmodeSvg: string;

			export const Svg_GumballRelocateGumballAutoDarkmodeSvg: string;

			export const Svg_HatchGradientResetBoundaryAutoDarkmodeSvg: string;

			export const Svg_HatchGradientResetBoundaryDarkAutoDarkmodeSvg: string;

			export const Svg_HatchReverseGradientColorsAutoDarkmodeSvg: string;

			export const Svg_HatchReverseGradientColorsDarkAutoDarkmodeSvg: string;

			export const Svg_HelpAutoDarkmodeSvg: string;

			export const Svg_HelpCommandContextHelpAutoDarkmodeSvg: string;

			export const Svg_HelpDisplayAllCommandsAutoDarkmodeSvg: string;

			export const Svg_HelpStandardHelpTopicsAutoDarkmodeSvg: string;

			export const Svg_HideClustersAutoDarkmodeSvg: string;

			export const Svg_HistoryAutoDarkmodeSvg: string;

			export const Svg_HistoryRecordHistoryAutoDarkmodeSvg: string;

			export const Svg_HistorySelectHistorySelectChildrenAutoDarkmodeSvg: string;

			export const Svg_HistorySelectHistorySelectParentsAutoDarkmodeSvg: string;

			export const Svg_HistorySelectSelectHistorySelectObjectsWithHistoryAutoDarkmodeSvg: string;

			export const Svg_HistoryStopHistoryRecordingAutoDarkmodeSvg: string;

			export const Svg_HistoryUnlockObjectsWithHistoryAutoDarkmodeSvg: string;

			export const Svg_HistoryUpdateHistoryOnAllObjectsAutoDarkmodeSvg: string;

			export const Svg_HistoryUpdateHistoryOnSelectedObjectsAutoDarkmodeSvg: string;

			export const Svg_HolesAutoDarkmodeSvg: string;

			export const Svg_HolesSolidEditingSolidToolsPlaceHoleAutoDarkmodeSvg: string;

			export const Svg_HolesSolidEditingSolidToolsRoundHoleAutoDarkmodeSvg: string;

			export const Svg_HolesSolidToolsArrayHoleAutoDarkmodeSvg: string;

			export const Svg_HolesSolidToolsArrayHolePolarAutoDarkmodeSvg: string;

			export const Svg_HolesSolidToolsMakeHoleAutoDarkmodeSvg: string;

			export const Svg_HolesSolidToolsMoveHoleAutoDarkmodeSvg: string;

			export const Svg_HolesSolidToolsNewInV6CopyHoleAutoDarkmodeSvg: string;

			export const Svg_HolesSolidToolsRevolvedHoleAutoDarkmodeSvg: string;

			export const Svg_HolesSolidToolsRotateHoleAutoDarkmodeSvg: string;

			export const Svg_HolesSolidToolsUntrimAllHolesAutoDarkmodeSvg: string;

			export const Svg_HolesSolidToolsUntrimHolesAutoDarkmodeSvg: string;

			export const Svg_HTMLAutoDarkmodeSvg: string;

			export const Svg_HTMLHideWebBrowserAutoDarkmodeSvg: string;

			export const Svg_HTMLUtilitiesWebBrowserAutoDarkmodeSvg: string;

			export const Svg_IntersectSelfAutoDarkmodeSvg: string;

			export const Svg_IsometricAutoDarkmodeSvg: string;

			export const Svg_IsometricIsometricNEAutoDarkmodeSvg: string;

			export const Svg_IsometricIsometricNWAutoDarkmodeSvg: string;

			export const Svg_IsometricIsometricSEAutoDarkmodeSvg: string;

			export const Svg_IsometricIsometricSWAutoDarkmodeSvg: string;

			export const Svg_LayerBookAdvancedLayerBookPrintAutoDarkmodeSvg: string;

			export const Svg_LayerBookAutoDarkmodeSvg: string;

			export const Svg_LayerAutoDarkmodeSvg: string;

			export const Svg_LayerBookAdvancedLayerBookViewsAutoDarkmodeSvg: string;

			export const Svg_LayerBookLayerBookAutoDarkmodeSvg: string;

			export const Svg_LayerBookLayerbookNextAutoDarkmodeSvg: string;

			export const Svg_LayerBookLayerbookPauseAutoDarkmodeSvg: string;

			export const Svg_LayerBookLayerbookPreviousAutoDarkmodeSvg: string;

			export const Svg_LayerbookPrepareToSaveAutoDarkmodeSvg: string;

			export const Svg_LayerChangeToCurrentLayerAutoDarkmodeSvg: string;

			export const Svg_LayerChangeObjectLayerAutoDarkmodeSvg: string;

			export const Svg_LayerCloseLayersAutoDarkmodeSvg: string;

			export const Svg_LayerCopyObjectsToLayerAutoDarkmodeSvg: string;

			export const Svg_LayerDuplicateLayerAutoDarkmodeSvg: string;

			export const Svg_LayerMatchObjectLayerAutoDarkmodeSvg: string;

			export const Svg_LayerOneLayerOffAutoDarkmodeSvg: string;

			export const Svg_LayerSetCurrentLayerAutoDarkmodeSvg: string;

			export const Svg_LayerSetCurrentLayerToObjectAutoDarkmodeSvg: string;

			export const Svg_LayerStandardLayersAutoDarkmodeSvg: string;

			export const Svg_LayoutCopyDetailToViewportAutoDarkmodeSvg: string;

			export const Svg_LayoutCopyLayoutAutoDarkmodeSvg: string;

			export const Svg_LayoutImportLayoutAutoDarkmodeSvg: string;

			export const Svg_LayoutPanelNewInV7AutoDarkmodeSvg: string;

			export const Svg_LayoutShowInDetailAutoDarkmodeSvg: string;

			export const Svg_LensLength00DollyZoom00AutoDarkmodeSvg: string;

			export const Svg_LensLengthAutoDarkmodeSvg: string;

			export const Svg_LightToolsAutoDarkmodeSvg: string;

			export const Svg_LightsAutoDarkmodeSvg: string;

			export const Svg_LightsPanelFalloffConstantAutoDarkmodeSvg: string;

			export const Svg_LightsPanelFalloffInverseSquaredAutoDarkmodeSvg: string;

			export const Svg_LightsPanelFalloffLinearAutoDarkmodeSvg: string;

			export const Svg_LightsPanelIntensityAutoDarkmodeSvg: string;

			export const Svg_LightsPanelLightSelectionToViewportAutoDarkmodeSvg: string;

			export const Svg_LightsPanelShadowIntensityAutoDarkmodeSvg: string;

			export const Svg_LightsPanelShowGroupsAutoDarkmodeSvg: string;

			export const Svg_LightsPanelShowLightsOnLayersThatAreOffAutoDarkmodeSvg: string;

			export const Svg_LightsPanelSkylightOffBlueAutoDarkmodeSvg: string;

			export const Svg_LightsPanelSkylightOnAutoDarkmodeSvg: string;

			export const Svg_LightsPanelSpotlightHardnessAutoDarkmodeSvg: string;

			export const Svg_LightsPanelSunOffBlueAutoDarkmodeSvg: string;

			export const Svg_LightsPanelSunOnAutoDarkmodeSvg: string;

			export const Svg_LightsPropertiesRenderToolsLightPropertiesAutoDarkmodeSvg: string;

			export const Svg_LightsRenderToolsBounceHighlightAutoDarkmodeSvg: string;

			export const Svg_LightsRenderToolsDirectionalLightAutoDarkmodeSvg: string;

			export const Svg_LightsRenderToolsEditLightByHighlightAutoDarkmodeSvg: string;

			export const Svg_LightsRenderToolsLinearLightAutoDarkmodeSvg: string;

			export const Svg_LightsRenderToolsPointLightAutoDarkmodeSvg: string;

			export const Svg_LightsRenderToolsRectangularLightAutoDarkmodeSvg: string;

			export const Svg_LightsRenderToolsStandardSpotlightAutoDarkmodeSvg: string;

			export const Svg_LightToolsRenderToolsAddASpotlightFromCurrentViewAutoDarkmodeSvg: string;

			export const Svg_LightToolsRenderToolsEditLightByLookingAutoDarkmodeSvg: string;

			export const Svg_LightToolsRenderToolsNewSpotlightByLookingAutoDarkmodeSvg: string;

			export const Svg_LightToolsRenderToolsSetSpotlightToViewAutoDarkmodeSvg: string;

			export const Svg_LightToolsRenderToolsSetViewToSpotlightAutoDarkmodeSvg: string;

			export const Svg_LinesAutoDarkmodeSvg: string;

			export const Svg_LinesCurveDrawingLineAutoDarkmodeSvg: string;

			export const Svg_LinesCurveDrawingLineNormalToSurfaceAutoDarkmodeSvg: string;

			export const Svg_LinesCurveDrawingLinePerpendicularFromCurveAutoDarkmodeSvg: string;

			export const Svg_LinesCurveDrawingLinePerpendicularToCurveAutoDarkmodeSvg: string;

			export const Svg_LinesCurveDrawingLineTangentFromCurveAutoDarkmodeSvg: string;

			export const Svg_LinesCurveDrawingLineVerticalToCPlaneAutoDarkmodeSvg: string;

			export const Svg_LinesCurveDrawingLineVerticalToCPlaneFromMidpointAutoDarkmodeSvg: string;

			export const Svg_LinesCurveDrawingSurfaceNormalBothSidesAutoDarkmodeSvg: string;

			export const Svg_LinesDarkmodeAutoDarkmodeSvg: string;

			export const Svg_LinesLineAngledAutoDarkmodeSvg: string;

			export const Svg_LinesLineAngledFromMidpointAutoDarkmodeSvg: string;

			export const Svg_LinesLineBisectorAutoDarkmodeSvg: string;

			export const Svg_LinesLineBisectorFromMidpointAutoDarkmodeSvg: string;

			export const Svg_LinesLineBy4PointsAutoDarkmodeSvg: string;

			export const Svg_LinesLineBy4PointsFromMidpointAutoDarkmodeSvg: string;

			export const Svg_LinesLineFromMidpointAutoDarkmodeSvg: string;

			export const Svg_LinesLinePerpendicularTo2CurvesAutoDarkmodeSvg: string;

			export const Svg_LinesLineTangentAndPerpendicularToCurvesAutoDarkmodeSvg: string;

			export const Svg_LinesLineTangentTo2CurvesAutoDarkmodeSvg: string;

			export const Svg_LinesLineThroughPointsAutoDarkmodeSvg: string;

			export const Svg_LinesMainCurveDrawingLineSegmentsAutoDarkmodeSvg: string;

			export const Svg_LinesMainCurveDrawingPolylineAutoDarkmodeSvg: string;

			export const Svg_LinesMainCurveDrawingPolylineDarkmodeAutoDarkmodeSvg: string;

			export const Svg_LinesMainCurveDrawingPolylineSmallAutoDarkmodeSvg: string;

			export const Svg_LinesMainCurveDrawingPolylineSmallDarkmodeAutoDarkmodeSvg: string;

			export const Svg_LinesPolylineOnMeshAutoDarkmodeSvg: string;

			export const Svg_LinesPolylineThroughPointsAutoDarkmodeSvg: string;

			export const Svg_LinesSmallAutoDarkmodeSvg: string;

			export const Svg_LinesSmallDarkmodeAutoDarkmodeSvg: string;

			export const Svg_LockAutoDarkmodeSvg: string;

			export const Svg_LookAboutAutoDarkmodeSvg: string;

			export const Svg_LookAboutLookDownAutoDarkmodeSvg: string;

			export const Svg_LookAboutLookLeftAutoDarkmodeSvg: string;

			export const Svg_LookAboutLookRightAutoDarkmodeSvg: string;

			export const Svg_LookAboutLookUpAutoDarkmodeSvg: string;

			export const Svg_Main1AutoDarkmodeSvg: string;

			export const Svg_Main1MainCopyInPlaceAutoDarkmodeSvg: string;

			export const Svg_Main1MainEditPointsOffAutoDarkmodeSvg: string;

			export const Svg_Main1MainTextObjectAutoDarkmodeSvg: string;

			export const Svg_Main1PointEditMainEditPointsOnAutoDarkmodeSvg: string;

			export const Svg_Main1PolygonMainCurveDrawingPolygonCenterRadiusAutoDarkmodeSvg: string;

			export const Svg_Main1ScaleTransformMainScale2DAutoDarkmodeSvg: string;

			export const Svg_Main1ScaleTransformMainScale3DAutoDarkmodeSvg: string;

			export const Svg_Main1TransformDeformationToolsMainFlowAlongSurfaceAutoDarkmodeSvg: string;

			export const Svg_Main1TransformMainCopyAutoDarkmodeSvg: string;

			export const Svg_Main2AutoDarkmodeSvg: string;

			export const Svg_Main2MeshToolsMainMeshCreationMeshFromSurfacePolysurfaceAutoDarkmodeSvg: string;

			export const Svg_Main2PointMainSinglePointAutoDarkmodeSvg: string;

			export const Svg_Main2RectangleMainCurveDrawingRectangleCornerToCornerAutoDarkmodeSvg: string;

			export const Svg_Main2SurfaceToolsMainFilletSurfaceAutoDarkmodeSvg: string;

			export const Svg_Main2TransformMainAlignObjectsAutoDarkmodeSvg: string;

			export const Svg_Main2TransformMainRotate2DAutoDarkmodeSvg: string;

			export const Svg_Main2TransformMainRotate3DAutoDarkmodeSvg: string;

			export const Svg_ManagePatternsAutoDarkmodeSvg: string;

			export const Svg_ManagePatternsManagePatterns2DPatternsManagerAutoDarkmodeSvg: string;

			export const Svg_ManagePatternsManagePatterns3DPatternsManagerAutoDarkmodeSvg: string;

			export const Svg_ManagePatternsManagePatternsLoad2DPatternsAutoDarkmodeSvg: string;

			export const Svg_ManagePatternsManagePatternsLoad3DPatternsAutoDarkmodeSvg: string;

			export const Svg_ManagePatternsManagePatternsSave2DCustomPatternsAutoDarkmodeSvg: string;

			export const Svg_ManagePatternsManagePatternsSave3DCustomPatternsAutoDarkmodeSvg: string;

			export const Svg_MassPopulateAutoDarkmodeSvg: string;

			export const Svg_MassPropertiesAreaAutoDarkmodeSvg: string;

			export const Svg_MassPropertiesAreaMomentsAutoDarkmodeSvg: string;

			export const Svg_MassPropertiesAutoDarkmodeSvg: string;

			export const Svg_MassPropertiesHydrostaticsAutoDarkmodeSvg: string;

			export const Svg_MassPropertiesVolumeAutoDarkmodeSvg: string;

			export const Svg_MassPropertiesVolumeCentroidAutoDarkmodeSvg: string;

			export const Svg_MassPropertiesVolumeMomentsAutoDarkmodeSvg: string;

			export const Svg_MaterialPanelAddEnvironmentAutoDarkmodeSvg: string;

			export const Svg_MaterialPanelAddMaterialAutoDarkmodeSvg: string;

			export const Svg_MaterialPanelAddTextureAutoDarkmodeSvg: string;

			export const Svg_MaterialPanelAlphaTransparencyAutoDarkmodeSvg: string;

			export const Svg_MaterialPanelFresnelReflectivityAutoDarkmodeSvg: string;

			export const Svg_MaterialPanelGrayscaleAutoDarkmodeSvg: string;

			export const Svg_MaterialPanelGrayscaleVariesAutoDarkmodeSvg: string;

			export const Svg_MaterialPanelSelfIlluminationAutoDarkmodeSvg: string;

			export const Svg_MaterialPanelSelfIlluminationVariesAutoDarkmodeSvg: string;

			export const Svg_MaterialPanelUseAlphaChannelAutoDarkmodeSvg: string;

			export const Svg_MaterialPanelUseAlphaChannelVariesAutoDarkmodeSvg: string;

			export const Svg_MaterialPanelUseColorMaskAutoDarkmodeSvg: string;

			export const Svg_MaterialPanelUseColorMaskVariesAutoDarkmodeSvg: string;

			export const Svg_MergeMaterialsAutoDarkmodeSvg: string;

			export const Svg_MeshBooleansAutoDarkmodeSvg: string;

			export const Svg_MeshBooleansMeshBooleanDifferenceAutoDarkmodeSvg: string;

			export const Svg_MeshBooleansMeshBooleanIntersectionAutoDarkmodeSvg: string;

			export const Svg_MeshBooleansMeshBooleanSplitAutoDarkmodeSvg: string;

			export const Svg_MeshBooleansMeshToolsMeshBooleanUnionAutoDarkmodeSvg: string;

			export const Svg_MeshCreationAutoDarkmodeSvg: string;

			export const Svg_MeshCreationExtractMeshFromNURBSControlPolygonAutoDarkmodeSvg: string;

			export const Svg_MeshCreationMeshBoxAutoDarkmodeSvg: string;

			export const Svg_MeshCreationMeshConeAutoDarkmodeSvg: string;

			export const Svg_MeshCreationMeshCylinderAutoDarkmodeSvg: string;

			export const Svg_MeshCreationMeshEllipsoidFromCenterAutoDarkmodeSvg: string;

			export const Svg_MeshCreationMeshFromClosedPolylineAutoDarkmodeSvg: string;

			export const Svg_MeshCreationMeshPlaneAutoDarkmodeSvg: string;

			export const Svg_MeshCreationMeshSphereAutoDarkmodeSvg: string;

			export const Svg_MeshCreationMeshTConeAutoDarkmodeSvg: string;

			export const Svg_MeshCreationMeshTorusAutoDarkmodeSvg: string;

			export const Svg_MeshToolsAddAMeshFaceAutoDarkmodeSvg: string;

			export const Svg_MeshToolsAlignMeshVerticesToToleranceAutoDarkmodeSvg: string;

			export const Svg_MeshToolsApplyMeshToNURBSSurfaceAutoDarkmodeSvg: string;

			export const Svg_MeshToolsApplyMeshUVNAutoDarkmodeSvg: string;

			export const Svg_MeshToolsAutoDarkmodeSvg: string;

			export const Svg_MeshToolsCollapseMeshToolbarAutoDarkmodeSvg: string;

			export const Svg_MeshToolsCullDegenerateMeshFacesAutoDarkmodeSvg: string;

			export const Svg_MeshToolsDeleteMeshFacesAutoDarkmodeSvg: string;

			export const Svg_MeshToolsFillAllHolesInMeshAutoDarkmodeSvg: string;

			export const Svg_MeshToolsMerge2MeshFacesAutoDarkmodeSvg: string;

			export const Svg_MeshToolsMergeFacesAutoDarkmodeSvg: string;

			export const Svg_MeshToolsMeshFromLinesCopyAutoDarkmodeSvg: string;

			export const Svg_MeshToolsMeshCreationMeshPatchAutoDarkmodeSvg: string;

			export const Svg_MeshToolsMeshCreationNewInV6MeshFromLinesAutoDarkmodeSvg: string;

			export const Svg_MeshToolsMeshRepairWizardAutoDarkmodeSvg: string;

			export const Svg_MeshToolsMeshSplitAutoDarkmodeSvg: string;

			export const Svg_MeshToolsMeshTrimAutoDarkmodeSvg: string;

			export const Svg_MeshToolsNewInV6AddNgonsToMeshAutoDarkmodeSvg: string;

			export const Svg_MeshToolsNewInV6DeleteMeshNgonsAutoDarkmodeSvg: string;

			export const Svg_MeshToolsOffsetMeshAutoDarkmodeSvg: string;

			export const Svg_MeshToolsRebuildMeshAutoDarkmodeSvg: string;

			export const Svg_MeshToolsRebuildMeshNormalsAutoDarkmodeSvg: string;

			export const Svg_MeshToolsReduceMeshPolygonCountAutoDarkmodeSvg: string;

			export const Svg_MeshToolsSplitDisjointMeshAutoDarkmodeSvg: string;

			export const Svg_MeshToolsSwapMeshEdgeAutoDarkmodeSvg: string;

			export const Svg_MeshToolsTriangulateNonPlanarQuadsAutoDarkmodeSvg: string;

			export const Svg_MeshToolsWeldSelectedMeshVerticesAutoDarkmodeSvg: string;

			export const Svg_MeshUtilitiesAppendToMeshAutoDarkmodeSvg: string;

			export const Svg_MeshUtilitiesAutoPullOffAutoDarkmodeSvg: string;

			export const Svg_MeshUtilitiesAutoPullOnAutoDarkmodeSvg: string;

			export const Svg_MeshUtilitiesBevelAutoDarkmodeSvg: string;

			export const Svg_MeshUtilitiesChainAutoDarkmodeSvg: string;

			export const Svg_MeshUtilitiesDoneAutoDarkmodeSvg: string;

			export const Svg_MeshUtilitiesExtrudeMeshAutoDarkmodeSvg: string;

			export const Svg_MeshUtilitiesFromEdgeAutoDarkmodeSvg: string;

			export const Svg_MeshUtilitiesInsertEdgeLoopAutoDarkmodeSvg: string;

			export const Svg_MeshUtilitiesInsertEdgeRingAutoDarkmodeSvg: string;

			export const Svg_MeshUtilitiesMainAutoDarkmodeSvg: string;

			export const Svg_MeshUtilitiesNGonAutoDarkmodeSvg: string;

			export const Svg_MeshUtilitiesNoChainAutoDarkmodeSvg: string;

			export const Svg_MeshUtilitiesQuadAutoDarkmodeSvg: string;

			export const Svg_MeshUtilitiesSelectEdgeRingAutoDarkmodeSvg: string;

			export const Svg_MeshUtilitiesStitchAutoDarkmodeSvg: string;

			export const Svg_MeshUtilitiesSubDCreaseAutoDarkmodeSvg: string;

			export const Svg_MeshUtilitiesSubDInsetAutoDarkmodeSvg: string;

			export const Svg_MeshUtilitiesSubDRemoveCreaseAutoDarkmodeSvg: string;

			export const Svg_MeshUtilitiesTriangleAutoDarkmodeSvg: string;

			export const Svg_MeshUtilitiesUndoAutoDarkmodeSvg: string;

			export const Svg_MoveAutoDarkmodeSvg: string;

			export const Svg_MoveEditCurveWithFixedLengthAutoDarkmodeSvg: string;

			export const Svg_MoveMoveSubcurveAutoDarkmodeSvg: string;

			export const Svg_MoveNormalAutoDarkmodeSvg: string;

			export const Svg_MoveSoftTransformAutoDarkmodeSvg: string;

			export const Svg_MoveSoftEditSurfaceAutoDarkmodeSvg: string;

			export const Svg_MoveTransformSoftEditCurveAutoDarkmodeSvg: string;

			export const Svg_MoveVerticalAutoDarkmodeSvg: string;

			export const Svg_namedItemAddHotAutoDarkmodeSvg: string;

			export const Svg_namedItemCopyGrayAutoDarkmodeSvg: string;

			export const Svg_namedItemCopyHotAutoDarkmodeSvg: string;

			export const Svg_namedItemDeleteGrayAutoDarkmodeSvg: string;

			export const Svg_namedItemDeleteHotAutoDarkmodeSvg: string;

			export const Svg_namedItemDownGrayAutoDarkmodeSvg: string;

			export const Svg_namedItemDownHotAutoDarkmodeSvg: string;

			export const Svg_namedItemDuplicateGrayAutoDarkmodeSvg: string;

			export const Svg_namedItemDuplicateHotAutoDarkmodeSvg: string;

			export const Svg_namedItemHelpAutoDarkmodeSvg: string;

			export const Svg_namedItemHelpGrayAutoDarkmodeSvg: string;

			export const Svg_namedItemImportFrom3dmFileGrayAutoDarkmodeSvg: string;

			export const Svg_namedItemImportFrom3dmFileHotAutoDarkmodeSvg: string;

			export const Svg_namedItemPasteGrayAutoDarkmodeSvg: string;

			export const Svg_namedItemPasteHotAutoDarkmodeSvg: string;

			export const Svg_namedItemPropertiesGrayAutoDarkmodeSvg: string;

			export const Svg_namedItemPropertiesHotAutoDarkmodeSvg: string;

			export const Svg_namedItemRestoreGrayAutoDarkmodeSvg: string;

			export const Svg_namedItemRestoreHotAutoDarkmodeSvg: string;

			export const Svg_namedItemSaveGrayAutoDarkmodeSvg: string;

			export const Svg_namedItemSaveHotAutoDarkmodeSvg: string;

			export const Svg_namedItemUpAutoDarkmodeSvg: string;

			export const Svg_namedItemUpGrayAutoDarkmodeSvg: string;

			export const Svg_namedItemUpHotAutoDarkmodeSvg: string;

			export const Svg_namedPositionsAppendGrayAutoDarkmodeSvg: string;

			export const Svg_namedPositionsAppendHotAutoDarkmodeSvg: string;

			export const Svg_namedPositionsUpdateGrayAutoDarkmodeSvg: string;

			export const Svg_namedPositionsUpdateHotAutoDarkmodeSvg: string;

			export const Svg_namedPositionSelectObjectsGrayAutoDarkmodeSvg: string;

			export const Svg_namedPositionSelectObjectsHotAutoDarkmodeSvg: string;

			export const Svg_namedViewAnimationGrayAutoDarkmodeSvg: string;

			export const Svg_namedViewAnimationHotAutoDarkmodeSvg: string;

			export const Svg_namedViewCreateUsingWidgetGrayAutoDarkmodeSvg: string;

			export const Svg_namedViewCreateUsingWidgetHotAutoDarkmodeSvg: string;

			export const Svg_namedViewEditByLookingGrayAutoDarkmodeSvg: string;

			export const Svg_namedViewEditByLookingHotAutoDarkmodeSvg: string;

			export const Svg_namedViewLockAutoDarkmodeSvg: string;

			export const Svg_namedViewLockGrayAutoDarkmodeSvg: string;

			export const Svg_namedViewLockHotAutoDarkmodeSvg: string;

			export const Svg_namedViewRenameAutoDarkmodeSvg: string;

			export const Svg_namedViewRenameGrayAutoDarkmodeSvg: string;

			export const Svg_namedViewShowWidgetGrayAutoDarkmodeSvg: string;

			export const Svg_namedViewShowWidgetHotAutoDarkmodeSvg: string;

			export const Svg_NewInV6NotificationsToggleAutoDarkmodeSvg: string;

			export const Svg_NewInV7AutoDarkmodeSvg: string;

			export const Svg_notoolbuttonAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerApplicationAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerBlockInstanceOldAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerBlockInstanceAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerBlocksAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerBlocksGrayAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerBlockAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerBlockInstanceAutoDarkmodeSvgSvg_ObjectManagerBlockInstanceAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerClippingPlaneAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerCurveAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerDocumentAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerEnvironmentsAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerEnvironmentsGrayAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerExtrusionAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerGroupMemberAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerGroupsAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerGroupsGrayAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerGroupAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerHatchAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerInformationAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerLayersAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerLayersGrayAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerLayerAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerLayerCurrentAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerLayerHiddenAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerLayerLockedAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerLayerLockedGrayAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerLayerUnlockedAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerLayerUnlockedGrayAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerLayerVisibleAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerLayerVisibleGrayAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerLeaderAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerLightsAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerLightsGrayAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerLightAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerMaterialsAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerMaterialsGrayAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerMeshAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerNamedViewsAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerObjectsAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerObjectsGrayAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerObjectAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerPointAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerPointSetAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerPolysurfaceAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerSubDAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerSurfaceAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerTexturesAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerTexturesGrayAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerTextAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerTextDotAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerUpdateAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerUpdateGrayAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerViewsAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerViewsGrayAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerViewAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapCenterAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapDisableEnableObjectSnapAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapEndPointMidCenIntTanPerpAndQuadAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapGridSizeAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapHideObjectSnapToolbarAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapIntersectionAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapNoObjectSnapAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapOrthoToggleAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapOsnapAlongLineAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapOSnapAlongParallelAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapOsnapBetweenAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapOSnapClearPersistentObjectSnapsAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapOSnapEndAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapOSnapFromAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapOSnapKnotAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapOsnapMidpointAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapOSnapNearAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapOSnapOnCurveAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapOSnapOnPolysurfaceAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapOSnapOnSurfaceAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapOsnapPointAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapOSnapVertexAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapPerpendicularFromAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapPerpendicularToAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapPersistentCenterAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapPersistentEndAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapPersistentEndPointMidCenIntTanPerpAndQuadAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapPersistentIntersectionAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapPersistentKnotAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapPersistentMidpointAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapPersistentNearAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapPersistentOnCurveAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapPersistentOnPolysurfaceAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapPersistentOnSurfaceAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapPersistentPerpendicularToAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapPersistentPointAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapPersistentQuadrantAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapPersistentTangentToAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapQuadrantAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapSetOrthoAngleAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapShowObjectSnapToolbarAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapSmartTrackingOffAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapSmartTrackingOnAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapSnapToMeshObjectAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapSnapToLockedToggleAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapTangentFromAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapTangentToAutoDarkmodeSvg: string;

			export const Svg_ObjectSnapVertexAutoDarkmodeSvg: string;

			export const Svg_OrganicAutoDarkmodeSvg: string;

			export const Svg_OrganicGumballGumballAutoDarkmodeSvg: string;

			export const Svg_OrganicGumballNewInV6DragStrengthAutoDarkmodeSvg: string;

			export const Svg_OrganicInsertEditPointAutoDarkmodeSvg: string;

			export const Svg_OrganicMoveWorldXAutoDarkmodeSvg: string;

			export const Svg_OrganicMoveWorldYAutoDarkmodeSvg: string;

			export const Svg_OrganicMoveWorldYAutoDarkmodeSvgSvg_OrganicMoveWorldYAutoDarkmodeSvg: string;

			export const Svg_OrganicMoveWorldZAutoDarkmodeSvg: string;

			export const Svg_OrganicMoveWorldZAutoDarkmodeSvgSvg_OrganicMoveWorldZAutoDarkmodeSvg: string;

			export const Svg_OrganicMoveXAutoDarkmodeSvg: string;

			export const Svg_OrganicMoveYAutoDarkmodeSvg: string;

			export const Svg_OrganicMoveYAutoDarkmodeSvgSvg_OrganicMoveYAutoDarkmodeSvg: string;

			export const Svg_OrganicMoveZAutoDarkmodeSvg: string;

			export const Svg_OrganicMoveZAutoDarkmodeSvgSvg_OrganicMoveZAutoDarkmodeSvg: string;

			export const Svg_OrganicPointEditDragModeSetDragModeAutoDarkmodeSvg: string;

			export const Svg_OrganicPointEditInsertKnotAutoDarkmodeSvg: string;

			export const Svg_OrganicPointEditRemoveKnotAutoDarkmodeSvg: string;

			export const Svg_OrganicPopupStandardSTLToolsDisplayShadedViewportAutoDarkmodeSvg: string;

			export const Svg_OrganicPopupStandardSTLToolsDisplayWireframeViewportAutoDarkmodeSvg: string;

			export const Svg_OrganicSelectSelectPointsLassoPointsAutoDarkmodeSvg: string;

			export const Svg_OrganicTransformMoveWorldXAutoDarkmodeSvg: string;

			export const Svg_OrganicTransformMoveXAutoDarkmodeSvg: string;

			export const Svg_PackSubDFacesAutoDarkmodeSvg: string;

			export const Svg_PanelingToolsAutoDarkmodeSvg: string;

			export const Svg_PanelingToolsPanelingTools2DPatternsManagerAutoDarkmodeSvg: string;

			export const Svg_PanelingToolsPanelingToolsGridArrayAutoDarkmodeSvg: string;

			export const Svg_PanelingToolsPanelingToolsGridDirectionAutoDarkmodeSvg: string;

			export const Svg_PanelingToolsPanelingToolsOffsetEdgesAutoDarkmodeSvg: string;

			export const Svg_PanelingToolsPanelingToolsPanelingToolsScriptingAutoDarkmodeSvg: string;

			export const Svg_PanelingToolsPanelingToolsPanelBySubdivideAutoDarkmodeSvg: string;

			export const Svg_PanelingToolsPanelingToolsPanelGridAutoDarkmodeSvg: string;

			export const Svg_PanelingToolsPanelingToolsSurfaceFromControlGridAutoDarkmodeSvg: string;

			export const Svg_PanelingToolsPanelingToolsSurfaceFromGridAutoDarkmodeSvg: string;

			export const Svg_PanelsUtilityAutoDarkmodeSvg: string;

			export const Svg_PanelsUtilityPanelsUtilityAnalyzeFlatFacesPanelsAutoDarkmodeSvg: string;

			export const Svg_PanelsUtilityPanelsUtilityCreatePlanarLipsAutoDarkmodeSvg: string;

			export const Svg_PanelsUtilityPanelsUtilityExtrudeEdgesAutoDarkmodeSvg: string;

			export const Svg_PanelsUtilityPanelsUtilityFinEdgesAutoDarkmodeSvg: string;

			export const Svg_PanelsUtilityPanelsUtilityGroupSmilarCurvesAutoDarkmodeSvg: string;

			export const Svg_PanelsUtilityPanelsUtilityOffsetEdgesAutoDarkmodeSvg: string;

			export const Svg_PanelsUtilityPanelsUtilityOffsetFacesBorderAutoDarkmodeSvg: string;

			export const Svg_PanelsUtilityPanelsUtilityUnifyFacesDirectionAutoDarkmodeSvg: string;

			export const Svg_PanelsUtilityPanelsUtilityUnrollEdgesAutoDarkmodeSvg: string;

			export const Svg_PanelsUtilityPanelsUtilityUnrollFacesAutoDarkmodeSvg: string;

			export const Svg_PanelsUtilityPanelsUtilityUnrollPointsAutoDarkmodeSvg: string;

			export const Svg_PanelAutoDarkmodeSvg: string;

			export const Svg_PanelFromGridAutoDarkmodeSvg: string;

			export const Svg_PanelFromGridPanelFromGridOrientToGridAutoDarkmodeSvg: string;

			export const Svg_PanelFromGridPanelFromGridPanel3DCustomAutoDarkmodeSvg: string;

			export const Svg_PanelFromGridPanelFromGridPanel3DCustomVariableAutoDarkmodeSvg: string;

			export const Svg_PanelFromGridPanelFromGridPanelCustom2DVariableAutoDarkmodeSvg: string;

			export const Svg_PanelFromGridPanelFromGridPanelCustomAutoDarkmodeSvg: string;

			export const Svg_PanelFromGridPanelFromGridPanelGrid3DAutoDarkmodeSvg: string;

			export const Svg_PanelFromGridPanelFromGridPanelGridAutoDarkmodeSvg: string;

			export const Svg_PanelFromGridPanelFromGridPanelQuadAutoDarkmodeSvg: string;

			export const Svg_PanelPanelPanelBySubdivideAutoDarkmodeSvg: string;

			export const Svg_PanelPanelPanelPointsOnSurfaceAutoDarkmodeSvg: string;

			export const Svg_PanelPanelTriangulatePointsAutoDarkmodeSvg: string;

			export const Svg_PlanarBooleansAutoDarkmodeSvg: string;

			export const Svg_PlanarDifferenceAutoDarkmodeSvg: string;

			export const Svg_PlanarIntersectionAutoDarkmodeSvg: string;

			export const Svg_PlanarUnionAutoDarkmodeSvg: string;

			export const Svg_PlaneAutoDarkmodeSvg: string;

			export const Svg_PlaneNewInV6InfinitePlaneAutoDarkmodeSvg: string;

			export const Svg_PlaneSurfaceSidebarSurfaceCreationCuttingPlaneAutoDarkmodeSvg: string;

			export const Svg_PlaneSurfaceSidebarSurfaceCreationVerticalPlaneAutoDarkmodeSvg: string;

			export const Svg_PlaneSurfaceSidebarViewportLayoutSurfaceCreationPictureAutoDarkmodeSvg: string;

			export const Svg_PluginHelpAutoDarkmodeSvg: string;

			export const Svg_PointAddToPointCloudAutoDarkmodeSvg: string;

			export const Svg_PointAutoDarkmodeSvg: string;

			export const Svg_PointClosestPointAutoDarkmodeSvg: string;

			export const Svg_PointDivideCurveByLengthAutoDarkmodeSvg: string;

			export const Svg_PointDivideCurveByNumberOfSegmentsAutoDarkmodeSvg: string;

			export const Svg_PointEditAutoDarkmodeSvg: string;

			export const Svg_PointEditCullControlPolygonBackfacesAutoDarkmodeSvg: string;

			export const Svg_PointEditEditControlPointWeightAutoDarkmodeSvg: string;

			export const Svg_PointEditHandlebarEditorAutoDarkmodeSvg: string;

			export const Svg_PointEditInsertAControlPointAutoDarkmodeSvg: string;

			export const Svg_PointEditInsertKinkAutoDarkmodeSvg: string;

			export const Svg_PointEditMoveUVNAutoDarkmodeSvg: string;

			export const Svg_PointEditPointsOffSelectedObjectsAutoDarkmodeSvg: string;

			export const Svg_PointEditRemoveACurveControlPointAutoDarkmodeSvg: string;

			export const Svg_PointEditTurnMoveUVNOffAutoDarkmodeSvg: string;

			export const Svg_PointMarkFociAutoDarkmodeSvg: string;

			export const Svg_PointPointCloudAutoDarkmodeSvg: string;

			export const Svg_PointPointGridAutoDarkmodeSvg: string;

			export const Svg_PointRemoveFromPointCloudAutoDarkmodeSvg: string;

			export const Svg_PolygonAutoDarkmodeSvg: string;

			export const Svg_PolygonCurveDrawingPolygonStarAutoDarkmodeSvg: string;

			export const Svg_PolygonCurveDrawingSquareCenterCornerAutoDarkmodeSvg: string;

			export const Svg_PolygonCurveDrawingSquareEdgeAutoDarkmodeSvg: string;

			export const Svg_PolygonPolygonCircumscribedCenterRadiusAutoDarkmodeSvg: string;

			export const Svg_PolygonPolygonEdgeAutoDarkmodeSvg: string;

			export const Svg_PolygonSquareCircumscribedCenterRadiusAutoDarkmodeSvg: string;

			export const Svg_PopupAutoDarkmodeSvg: string;

			export const Svg_PopupRenderPreviewViewportAutoDarkmodeSvg: string;

			export const Svg_PopupSetViewStandardViewZoomExtentsAllViewportsAutoDarkmodeSvg: string;

			export const Svg_PopupStandardVisibilityLockLockObjectsAutoDarkmodeSvg: string;

			export const Svg_PopupStandardVisibilityVisibilityLockLockUnlockObjectsAutoDarkmodeSvg: string;

			export const Svg_PropertiesAutoDarkmodeSvg: string;

			export const Svg_RadiateFindAutoDarkmodeSvg: string;

			export const Svg_RadiateAutoDarkmodeSvg: string;

			export const Svg_RecentlyUsedAutoDarkmodeSvg: string;

			export const Svg_RectangleAutoDarkmodeSvg: string;

			export const Svg_RectangleCurveDrawingRectangle3PointsAutoDarkmodeSvg: string;

			export const Svg_RectangleCurveDrawingRectangleVerticalAutoDarkmodeSvg: string;

			export const Svg_RectangleCurveDrawingRoundedRectangleAutoDarkmodeSvg: string;

			export const Svg_RectangleCurveDrawingRoundedRectangleConicCornersAutoDarkmodeSvg: string;

			export const Svg_RectangleRectangleCenterCornerAutoDarkmodeSvg: string;

			export const Svg_RefitTrimAutoDarkmodeSvg: string;

			export const Svg_ReflectPauseRemoveExistingSymmetryAutoDarkmodeSvg: string;

			export const Svg_RemovePerFaceColorsAutoDarkmodeSvg: string;

			export const Svg_RemoveSymmetryAutoDarkmodeSvg: string;

			export const Svg_RenderPresetsAutomotiveAutoDarkmodeSvg: string;

			export const Svg_RenderPresetsIndustrialDesignIDAutoDarkmodeSvg: string;

			export const Svg_RenderPresetsIndustrialDesignIDColorfulAutoDarkmodeSvg: string;

			export const Svg_RenderPresetsJewelryAutoDarkmodeSvg: string;

			export const Svg_RenderPresetsRuralAutoDarkmodeSvg: string;

			export const Svg_RenderPresetsSunsetAutoDarkmodeSvg: string;

			export const Svg_RenderPresetsUrbanAutoDarkmodeSvg: string;

			export const Svg_RenderSidebarPerspectiveViewAutoDarkmodeSvg: string;

			export const Svg_RenderToolsApplyCurvePipingAutoDarkmodeSvg: string;

			export const Svg_RenderToolsAutoDarkmodeSvg: string;

			export const Svg_RenderToolsApplyEdgeSofteningAutoDarkmodeSvg: string;

			export const Svg_RenderToolsEdgeSofteningAutoDarkmodeSvg: string;

			export const Svg_RenderToolsEnvironmentsAutoDarkmodeSvg: string;

			export const Svg_RenderToolsHideMappingWidgetsAutoDarkmodeSvg: string;

			export const Svg_RenderToolsLightsPanelAutoDarkmodeSvg: string;

			export const Svg_RenderToolsMatchMaterialPropertiesAutoDarkmodeSvg: string;

			export const Svg_RenderToolsMaterialsPanelAutoDarkmodeSvg: string;

			export const Svg_RenderToolsNewInV6ApplyThicknessAutoDarkmodeSvg: string;

			export const Svg_RenderToolsRenderPreviewAutoDarkmodeSvg: string;

			export const Svg_RenderToolsSetMaterialSourceLayerAutoDarkmodeSvg: string;

			export const Svg_RenderToolsSetRenderColorAutoDarkmodeSvg: string;

			export const Svg_RenderToolsSetRenderGlossColorAutoDarkmodeSvg: string;

			export const Svg_RenderToolsShowMappingWidgetsAutoDarkmodeSvg: string;

			export const Svg_RenderToolsStandardRenderAutoDarkmodeSvg: string;

			export const Svg_RenderToolsSunAutoDarkmodeSvg: string;

			export const Svg_RenderToolsSynchronizeRenderColorsAutoDarkmodeSvg: string;

			export const Svg_RenderToolsTextureToolsToggleTexturesPanelAutoDarkmodeSvg: string;

			export const Svg_RenderToolsToggleLibrariesPanelAutoDarkmodeSvg: string;

			export const Svg_RibbonOffsetAutoDarkmodeSvg: string;

			export const Svg_RPCAboutAutoDarkmodeSvg: string;

			export const Svg_RPCAvailAppAutoDarkmodeSvg: string;

			export const Svg_RPCMassEditAutoDarkmodeSvg: string;

			export const Svg_RpcOpenPropAutoDarkmodeSvg: string;

			export const Svg_RPCSiteAutoDarkmodeSvg: string;

			export const Svg_ScaleAutoDarkmodeSvg: string;

			export const Svg_ScaleScale1DAutoDarkmodeSvg: string;

			export const Svg_ScaleScaleByPlaneAutoDarkmodeSvg: string;

			export const Svg_ScaleScaleNonUniformAutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesAutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesDivideCrvVariableAutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesDivideCurveByDirectDistanceAutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesDivideCurveSpanByDistanceAutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesDivideCurveSpanByNumberOrDistanceAutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesDivideMultiCrvsVariableAutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesDivideSrfVariableAutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesDivideSurfaceByDirectDistanceAutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesDivideSurfaceUVSpanByNumberOrDistanceAutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesExtrude2CurvesAutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesGridByArrayAutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesGridByArrayRhinoScript2AutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesGridByArrayRhinoScriptAutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesGridByPolarArrayAutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesGridBySurfaceDistanceAutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesGridBySurfaceDomainAutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesGridBySurfaceDomainRhinoScriptSampleAutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesGridBySurfaceDomainVariableAttractorCurvesAutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesGridBySurfaceDomainVariableAttractorPointsAutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesGridBySurfaceDomainVariableGaussCurvatureAutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesGridBySurfaceDomainVariableRandomAutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesGridBySurfaceUVAutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesGridByUVCurvesAutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesGridByUCurvesAutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesGridObjectByDirectionAutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesMacro122AutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesMacro124AutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesMacro90AutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesPanelingToolsScriptingAutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesPanelBySubdivideAutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesPanelCustomByGridAutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesPanelEdgesByGridAutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesPanelEdgesByGridWithBaseObjectAutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesPanelFacesByGridAutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesPanelFacesByGridWithBaseObjectAutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesPanelFlatFacesByGridAutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesPanelFlatFacesByGridScriptAutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesPanelFlatFacesByGridWithBaseObjectAutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesPanelFlatFacesByGridWithBaseObjectRhinoScriptAutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesPanelRandomPointsAutoGeneratePointsAutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesPanelRandomPointsSelectPointsAutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesQuadsByGridAutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesSrfVariableGrid1AutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesSrfVariableGrid2AutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesSurfaceFromControlGridAutoDarkmodeSvg: string;

			export const Svg_ScriptingSamplesSurfaceFromGridRhinoScriptSampleAutoDarkmodeSvg: string;

			export const Svg_SectionToolsRunscriptAutoDarkmodeSvg: string;

			export const Svg_SectionToolsStCreateAutoDarkmodeSvg: string;

			export const Svg_SectionToolsStDeleteSectionsAutoDarkmodeSvg: string;

			export const Svg_SectionToolsStEdit2DLayoutAutoDarkmodeSvg: string;

			export const Svg_SectionToolsStEditSectionsHintAutoDarkmodeSvg: string;

			export const Svg_SectionToolsStEditSectionsObjectsAutoDarkmodeSvg: string;

			export const Svg_SectionToolsStEditSectionsAutoDarkmodeSvg: string;

			export const Svg_SectionToolsStExtractSectionsAutoDarkmodeSvg: string;

			export const Svg_SectionToolsStLayoutAutoDarkmodeSvg: string;

			export const Svg_SectionToolsStLockSectionsAutoDarkmodeSvg: string;

			export const Svg_SectionToolsStLockSectionsDarkmodeAutoDarkmodeSvg: string;

			export const Svg_SectionToolsStMake2DAutoDarkmodeSvg: string;

			export const Svg_SectionToolsStMoveSectionsAutoDarkmodeSvg: string;

			export const Svg_SectionToolsStReportAutoDarkmodeSvg: string;

			export const Svg_SectionToolsStRotateSectionsAutoDarkmodeSvg: string;

			export const Svg_SectionToolsStSaveToNamedCPlanesAutoDarkmodeSvg: string;

			export const Svg_SectionToolsStSaveToNamedCPlanesDarkmodeAutoDarkmodeSvg: string;

			export const Svg_SectionToolsStViewSectionsAutoDarkmodeSvg: string;

			export const Svg_SelDimAngularAutoDarkmodeSvg: string;

			export const Svg_SelDimCentermarkAutoDarkmodeSvg: string;

			export const Svg_SelDimLinearAutoDarkmodeSvg: string;

			export const Svg_SelDimOrdinateAutoDarkmodeSvg: string;

			export const Svg_SelDimOverrideAutoDarkmodeSvg: string;

			export const Svg_SelDimTextOverrideAutoDarkmodeSvg: string;

			export const Svg_SelectAutoDarkmodeSvg: string;

			export const Svg_SelectChainAutoDarkmodeSvg: string;

			export const Svg_SelectChainSelectChainWithG0ContinuityAutoDarkmodeSvg: string;

			export const Svg_SelectChainSelectChainWithG1ContinuityAutoDarkmodeSvg: string;

			export const Svg_SelectChainSelectChainWithG2ContinuityAutoDarkmodeSvg: string;

			export const Svg_SelectCurvesAutoDarkmodeSvg: string;

			export const Svg_SelectCurvesNewInV6SelectPlanarCurvesAutoDarkmodeSvg: string;

			export const Svg_SelectCurvesNewInV6SelectSubCurveAutoDarkmodeSvg: string;

			export const Svg_SelectCurvesSelectByLinetypeAutoDarkmodeSvg: string;

			export const Svg_SelectCurvesSelectClosedCurvesAutoDarkmodeSvg: string;

			export const Svg_SelectCurvesSelectLinesAutoDarkmodeSvg: string;

			export const Svg_SelectCurvesSelectOpenCurvesAutoDarkmodeSvg: string;

			export const Svg_SelectCurvesSelectPolylinesAutoDarkmodeSvg: string;

			export const Svg_SelectCurvesSelectShortCurvesAutoDarkmodeSvg: string;

			export const Svg_SelectCurvesSelSelfIntersectingCrvAutoDarkmodeSvg: string;

			export const Svg_SelectDimensionsSelDimAngularAutoDarkmodeSvg: string;

			export const Svg_SelectDimensionsSelDimCentermarkAutoDarkmodeSvg: string;

			export const Svg_SelectDimensionsSelDimLinearAutoDarkmodeSvg: string;

			export const Svg_SelectDimensionsSelDimOrdinateAutoDarkmodeSvg: string;

			export const Svg_SelectHistoryAutoDarkmodeSvg: string;

			export const Svg_SelectInvertControlPointSelectionAutoDarkmodeSvg: string;

			export const Svg_SelectInvertSelectionAutoDarkmodeSvg: string;

			export const Svg_SelectMeshesAutoDarkmodeSvg: string;

			export const Svg_SelectMeshesSelectPolysurfacesSelectSurfacesSelVisibleAutoDarkmodeSvg: string;

			export const Svg_SelectNamedSelectionsAutoDarkmodeSvg: string;

			export const Svg_SelectNewInV6SelectByFenceAutoDarkmodeSvg: string;

			export const Svg_SelectNewInV6SelectByKeyAutoDarkmodeSvg: string;

			export const Svg_SelectNewInV6SelVolumeObjectAutoDarkmodeSvg: string;

			export const Svg_SelectPointsAddNextUAutoDarkmodeSvg: string;

			export const Svg_SelectPointsAutoDarkmodeSvg: string;

			export const Svg_SelectPointsAddNextVAutoDarkmodeSvg: string;

			export const Svg_SelectPointsAddPreviousUAutoDarkmodeSvg: string;

			export const Svg_SelectPointsAddPreviousVAutoDarkmodeSvg: string;

			export const Svg_SelectPointsDeselectConnectedPointsAutoDarkmodeSvg: string;

			export const Svg_SelectPointsInvertPointSelectionAutoDarkmodeSvg: string;

			export const Svg_SelectPointsNewInV6SelControlPointAutoDarkmodeSvg: string;

			export const Svg_SelectPointsNewInV6SelectControlPointRegionAutoDarkmodeSvg: string;

			export const Svg_SelectPointsNextUAutoDarkmodeSvg: string;

			export const Svg_SelectPointsNextVAutoDarkmodeSvg: string;

			export const Svg_SelectPointsPreviousUAutoDarkmodeSvg: string;

			export const Svg_SelectPointsPreviousVAutoDarkmodeSvg: string;

			export const Svg_SelectPointsSelectConnectedPointsAutoDarkmodeSvg: string;

			export const Svg_SelectPointsSelectPointsByBrushingAutoDarkmodeSvg: string;

			export const Svg_SelectPointsSelectUVAutoDarkmodeSvg: string;

			export const Svg_SelectPointsSelectUAutoDarkmodeSvg: string;

			export const Svg_SelectPointsSelectVAutoDarkmodeSvg: string;

			export const Svg_SelectPointsShowHiddenPointsAutoDarkmodeSvg: string;

			export const Svg_SelectPolysurfacesAutoDarkmodeSvg: string;

			export const Svg_SelectPolysurfacesEdgeToolsSelectOpenPolysurfacesAutoDarkmodeSvg: string;

			export const Svg_SelectPolysurfacesSelectClosedPolysurfacesAutoDarkmodeSvg: string;

			export const Svg_SelectPolysurfacesSelectExtrusionsAutoDarkmodeSvg: string;

			export const Svg_SelectSelClippingPlaneInViewportAutoDarkmodeSvg: string;

			export const Svg_SelectSelClippingPlaneInViewportDarkAutoDarkmodeSvg: string;

			export const Svg_SelectSelectionFilterAutoDarkmodeSvg: string;

			export const Svg_SelectSelectionFilterNoneAutoDarkmodeSvg: string;

			export const Svg_SelectSelectAllBlockInstancesAutoDarkmodeSvg: string;

			export const Svg_SelectSelectAllDuplicateObjectsAutoDarkmodeSvg: string;

			export const Svg_SelectSelectBlocksByNameAutoDarkmodeSvg: string;

			export const Svg_SelectSelectBy3DBoxAutoDarkmodeSvg: string;

			export const Svg_SelectSelectByBrushingAutoDarkmodeSvg: string;

			export const Svg_SelectSelectByCircleAutoDarkmodeSvg: string;

			export const Svg_SelectSelectByColorAutoDarkmodeSvg: string;

			export const Svg_SelectSelectByGroupNameAutoDarkmodeSvg: string;

			export const Svg_SelectSelectByLayerAutoDarkmodeSvg: string;

			export const Svg_SelectSelectByObjectIDAutoDarkmodeSvg: string;

			export const Svg_SelectSelectByObjectNameAutoDarkmodeSvg: string;

			export const Svg_SelectSelectBySphereAutoDarkmodeSvg: string;

			export const Svg_SelectSelectChainAutoDarkmodeSvg: string;

			export const Svg_SelectSelectCurvesSelectCurvesAutoDarkmodeSvg: string;

			export const Svg_SelectSelectDimensionsAutoDarkmodeSvg: string;

			export const Svg_SelectSelectDotsAutoDarkmodeSvg: string;

			export const Svg_SelectSelectDuplicateObjectsAutoDarkmodeSvg: string;

			export const Svg_SelectSelectHatchesAutoDarkmodeSvg: string;

			export const Svg_SelectSelectLastCreatedObjectsAutoDarkmodeSvg: string;

			export const Svg_SelectSelectLayerByNumberAutoDarkmodeSvg: string;

			export const Svg_SelectSelectLightsAutoDarkmodeSvg: string;

			export const Svg_SelectSelectMeshesSelectMeshesAutoDarkmodeSvg: string;

			export const Svg_SelectSelectNoneAutoDarkmodeSvg: string;

			export const Svg_SelectSelectNonManifoldObjectsAutoDarkmodeSvg: string;

			export const Svg_SelectSelectPointsAutoDarkmodeSvg: string;

			export const Svg_SelectSelectPointCloudsAutoDarkmodeSvg: string;

			export const Svg_SelectSelectPolysurfacesSelectPolysurfacesAutoDarkmodeSvg: string;

			export const Svg_SelectSelectPreviousSelectionAutoDarkmodeSvg: string;

			export const Svg_SelectSelectSurfacesSelectSurfacesAutoDarkmodeSvg: string;

			export const Svg_SelectSelectTextBlocksAutoDarkmodeSvg: string;

			export const Svg_SelectSubDAutoDarkmodeSvg: string;

			export const Svg_SelectSurfacesAutoDarkmodeSvg: string;

			export const Svg_SelectSurfacesNewInV6SelectPicturesAutoDarkmodeSvg: string;

			export const Svg_SelectSurfacesNewInV6SelectPlanarSurfacesAutoDarkmodeSvg: string;

			export const Svg_SelectSurfacesSelectClosedSurfacesAutoDarkmodeSvg: string;

			export const Svg_SelectSurfacesSelectOpenSurfacesAutoDarkmodeSvg: string;

			export const Svg_SelectSurfacesSelectTrimmedSurfacesAutoDarkmodeSvg: string;

			export const Svg_SelectSurfacesSelectUntrimmedSurfacesAutoDarkmodeSvg: string;

			export const Svg_SelFontUseAutoDarkmodeSvg: string;

			export const Svg_SetDimensionLayerAutoDarkmodeSvg: string;

			export const Svg_SetPerFaceColorByFacePackAutoDarkmodeSvg: string;

			export const Svg_SetViewIsometricBlankAutoDarkmodeSvg: string;

			export const Svg_SetViewNamedViewsPanelAutoDarkmodeSvg: string;

			export const Svg_SetViewPlanViewOfCPlaneAutoDarkmodeSvg: string;

			export const Svg_SetViewRenderSidebarAutoDarkmodeSvg: string;

			export const Svg_SetViewRenderSidebarBackViewAutoDarkmodeSvg: string;

			export const Svg_SetViewRenderSidebarBottomViewAutoDarkmodeSvg: string;

			export const Svg_SetViewRenderSidebarFrontViewAutoDarkmodeSvg: string;

			export const Svg_SetViewRenderSidebarLeftViewAutoDarkmodeSvg: string;

			export const Svg_SetViewRenderSidebarRestoreViewByNameAutoDarkmodeSvg: string;

			export const Svg_SetViewRenderSidebarTopViewAutoDarkmodeSvg: string;

			export const Svg_SetViewStandardRenderSidebarRightViewAutoDarkmodeSvg: string;

			export const Svg_SetViewStandardViewPanShiftRMBAutoDarkmodeSvg: string;

			export const Svg_SetViewStandardViewRenderSidebarZoomSelectedAllViewportsAutoDarkmodeSvg: string;

			export const Svg_SetViewStandardViewRotateCameraCtrlAltRMBAutoDarkmodeSvg: string;

			export const Svg_SetViewStandardViewRotateViewCtrlShiftRMBAutoDarkmodeSvg: string;

			export const Svg_SetViewViewportLayoutReadViewportLayoutFromFileAutoDarkmodeSvg: string;

			export const Svg_SetViewViewportLayoutRenderSidebarChangeViewProjectionAutoDarkmodeSvg: string;

			export const Svg_SetViewViewportLayoutRenderSidebarSetPerspectiveAngleAutoDarkmodeSvg: string;

			export const Svg_SetViewViewCalibrate11ScaleAutoDarkmodeSvg: string;

			export const Svg_SetViewViewRenderSidebarZoomLensAutoDarkmodeSvg: string;

			export const Svg_SetViewViewTurntableAutoDarkmodeSvg: string;

			export const Svg_SetViewViewTurntableOneCycleAutoDarkmodeSvg: string;

			export const Svg_SetViewWalkAboutAutoDarkmodeSvg: string;

			export const Svg_ShowLayersInDetailAutoDarkmodeSvg: string;

			export const Svg_ShowSelectedInDetailAutoDarkmodeSvg: string;

			export const Svg_ShrinkWrapAutoDarkmodeSvg: string;

			export const Svg_SketchConstraintsAutoDarkmodeSvg: string;

			export const Svg_SketchConstraintsDarkmodeAutoDarkmodeSvg: string;

			export const Svg_snapshotsAnimationGrayAutoDarkmodeSvg: string;

			export const Svg_snapshotsAnimationHotAutoDarkmodeSvg: string;

			export const Svg_snapshotsRestorePartialAutoDarkmodeSvg: string;

			export const Svg_snapshotsRestorePartialGrayAutoDarkmodeSvg: string;

			export const Svg_snapshotsRestorePartialHotAutoDarkmodeSvg: string;

			export const Svg_snapshotsSlideshowGrayAutoDarkmodeSvg: string;

			export const Svg_snapshotsSlideshowHotAutoDarkmodeSvg: string;

			export const Svg_SolidsSidebarAutoDarkmodeSvg: string;

			export const Svg_SolidsSidebarParaboloidVertexFocusAutoDarkmodeSvg: string;

			export const Svg_SolidsSidebarPipeAutoDarkmodeSvg: string;

			export const Svg_SolidsSidebarSolidCreationConeAutoDarkmodeSvg: string;

			export const Svg_SolidsSidebarSolidCreationCylinderAutoDarkmodeSvg: string;

			export const Svg_SolidsSidebarSolidCreationParaboloidAutoDarkmodeSvg: string;

			export const Svg_SolidsSidebarSolidCreationPipeFlatCapsAutoDarkmodeSvg: string;

			export const Svg_SolidsSidebarSolidCreationPipeRoundCapsAutoDarkmodeSvg: string;

			export const Svg_SolidsSidebarSolidCreationPyramidAutoDarkmodeSvg: string;

			export const Svg_SolidsSidebarSolidCreationTorusAutoDarkmodeSvg: string;

			export const Svg_SolidsSidebarSolidCreationTruncatedPyramidAutoDarkmodeSvg: string;

			export const Svg_SolidsSidebarSolidCreationTubeAutoDarkmodeSvg: string;

			export const Svg_SolidsSidebarSolidToolsShellAutoDarkmodeSvg: string;

			export const Svg_SolidsSidebarSphereSolidCreationSphereDiameterAutoDarkmodeSvg: string;

			export const Svg_SolidsSidebarSphereSphereCenterRadiusAutoDarkmodeSvg: string;

			export const Svg_SolidBooleanUnionAutoDarkmodeSvg: string;

			export const Svg_SolidCreationAutoDarkmodeSvg: string;

			export const Svg_SolidCreationExtrudeClosedPlanarCurveAutoDarkmodeSvg: string;

			export const Svg_SolidCreationSphereCenterRadiusAutoDarkmodeSvg: string;

			export const Svg_SolidEditingAutoDarkmodeSvg: string;

			export const Svg_SolidEditingSolidToolsExtrudeFaceAlongPathAutoDarkmodeSvg: string;

			export const Svg_SolidEditingSolidToolsExtrudeFaceAutoDarkmodeSvg: string;

			export const Svg_SolidEditingSolidToolsMergeAllCoplanarFacesAutoDarkmodeSvg: string;

			export const Svg_SolidEditingSolidToolsMergeTwoCoplanarFacesAutoDarkmodeSvg: string;

			export const Svg_SolidEditingSolidToolsMoveFaceAutoDarkmodeSvg: string;

			export const Svg_SolidEditingSolidToolsMoveFaceToABoundaryAutoDarkmodeSvg: string;

			export const Svg_SolidEditingSolidToolsMoveUntrimmedEdgeAutoDarkmodeSvg: string;

			export const Svg_SolidEditingSolidToolsWireCutAutoDarkmodeSvg: string;

			export const Svg_SolidShellAutoDarkmodeSvg: string;

			export const Svg_SolidToolsAutoDarkmodeSvg: string;

			export const Svg_SolidToolsBlendEdgesAutoDarkmodeSvg: string;

			export const Svg_SolidToolsBoolean2ObjectsAutoDarkmodeSvg: string;

			export const Svg_SolidToolsBooleanSplitAutoDarkmodeSvg: string;

			export const Svg_SolidToolsChamferEdgesAutoDarkmodeSvg: string;

			export const Svg_SolidToolsCreateSolidAutoDarkmodeSvg: string;

			export const Svg_SolidToolsFilletEdgesAutoDarkmodeSvg: string;

			export const Svg_SolidToolsSolidToolsSolidCreationUnjoinEdgeAutoDarkmodeSvg: string;

			export const Svg_SphereAutoDarkmodeSvg: string;

			export const Svg_SphereSphere3PointsAutoDarkmodeSvg: string;

			export const Svg_SphereSphere4PointsAutoDarkmodeSvg: string;

			export const Svg_SphereSphereAroundCurveAutoDarkmodeSvg: string;

			export const Svg_SphereSphereFitPointsAutoDarkmodeSvg: string;

			export const Svg_SphereSphereFromCircleTangentToCurvesAutoDarkmodeSvg: string;

			export const Svg_stackedFractionAutoDarkmodeSvg: string;

			export const Svg_stackedFractionDarkmodeAutoDarkmodeSvg: string;

			export const Svg_StandardAutoDarkmodeSvg: string;

			export const Svg_StandardCloseLayersAutoDarkmodeSvg: string;

			export const Svg_StandardCopyCtrlCAutoDarkmodeSvg: string;

			export const Svg_StandardCutCtrlXAutoDarkmodeSvg: string;

			export const Svg_StandardDisplayShadeAllViewportsAutoDarkmodeSvg: string;

			export const Svg_StandardDisplayShadeAutoDarkmodeSvg: string;

			export const Svg_StandardExportAutoDarkmodeSvg: string;

			export const Svg_StandardGrasshopperAutoDarkmodeSvg: string;

			export const Svg_StandardObjectSnapsAutoDarkmodeSvg: string;

			export const Svg_StandardPasteCtrlVAutoDarkmodeSvg: string;

			export const Svg_StandardPasteToCurrentLayerAutoDarkmodeSvg: string;

			export const Svg_StandardStandardToolsOptionsAutoDarkmodeSvg: string;

			export const Svg_StandardViewportLayout4DefaultViewportsAutoDarkmodeSvg: string;

			export const Svg_StandardViewportLayout4ViewportsAutoDarkmodeSvg: string;

			export const Svg_StandardViewZoomByScaleFactorAutoDarkmodeSvg: string;

			export const Svg_StandardViewZoomTargetAutoDarkmodeSvg: string;

			export const Svg_StepSizeAutoDarkmodeSvg: string;

			export const Svg_StepSizeStepSizeCustomStepsAutoDarkmodeSvg: string;

			export const Svg_StepSizeStepSizeLargeStepsAutoDarkmodeSvg: string;

			export const Svg_StepSizeStepSizeMediumLargeStepsAutoDarkmodeSvg: string;

			export const Svg_StepSizeStepSizeMediumSmallStepsAutoDarkmodeSvg: string;

			export const Svg_StepSizeStepSizeMediumStepsAutoDarkmodeSvg: string;

			export const Svg_StepSizeStepSizeSmallStepsAutoDarkmodeSvg: string;

			export const Svg_STLToolsAutoDarkmodeSvg: string;

			export const Svg_STLToolsDisplayToggleFlatShadeModeAutoDarkmodeSvg: string;

			export const Svg_STLToolsHideUnselectedControlPointsAutoDarkmodeSvg: string;

			export const Svg_STLToolsMeshCreationSingleMeshFaceAutoDarkmodeSvg: string;

			export const Svg_STLToolsSelectUnweldedMeshEdgePointsAutoDarkmodeSvg: string;

			export const Svg_STLToolsShowControlPointsAutoDarkmodeSvg: string;

			export const Svg_STLToolsVisibilityHideControlPointsAutoDarkmodeSvg: string;

			export const Svg_SubDExpandEdgesAutoDarkmodeSvg: string;

			export const Svg_SubDLoftAutoDarkmodeSvg: string;

			export const Svg_SubDRevolveAutoDarkmodeSvg: string;

			export const Svg_SubDUnfriendAutoDarkmodeSvg: string;

			export const Svg_SubDAutoDarkmodeSvg: string;

			export const Svg_SubDBevelAutoDarkmodeSvg: string;

			export const Svg_SubDEllipsoidAutoDarkmodeSvg: string;

			export const Svg_SubDFillSubDHoleAutoDarkmodeSvg: string;

			export const Svg_SubDMakeSubDFriendlyCrvAutoDarkmodeSvg: string;

			export const Svg_SubDReflectAutoDarkmodeSvg: string;

			export const Svg_SubDRepairSubDAutoDarkmodeSvg: string;

			export const Svg_SubDSelectionFilterEdgesAutoDarkmodeSvg: string;

			export const Svg_SubDSelectionFilterFacesAutoDarkmodeSvg: string;

			export const Svg_SubDSelectionFilterVerticesAutoDarkmodeSvg: string;

			export const Svg_SubDSelectSubDObjectsAutoDarkmodeSvg: string;

			export const Svg_SubDSelSubDFriendlyCrvAutoDarkmodeSvg: string;

			export const Svg_SubDSubDBoxAutoDarkmodeSvg: string;

			export const Svg_SubDSubDConeAutoDarkmodeSvg: string;

			export const Svg_SubDSubDCylinderAutoDarkmodeSvg: string;

			export const Svg_SubDTorusAutoDarkmodeSvg: string;

			export const Svg_SunDialogHereAutoDarkmodeSvg: string;

			export const Svg_SurfaceAnalysisDisplayCaptureViewportToClipboardAutoDarkmodeSvg: string;

			export const Svg_SurfaceAnalysisAutoDarkmodeSvg: string;

			export const Svg_SurfaceAnalysisDisplayCaptureViewportToFileAutoDarkmodeSvg: string;

			export const Svg_SurfaceAnalysisDraftAngleAnalysisOffAutoDarkmodeSvg: string;

			export const Svg_SurfaceAnalysisEdgeContinuityAutoDarkmodeSvg: string;

			export const Svg_SurfaceAnalysisEnvironmentMapAutoDarkmodeSvg: string;

			export const Svg_SurfaceAnalysisEnvironmentMapOffAutoDarkmodeSvg: string;

			export const Svg_SurfaceAnalysisPointFromUVCoordinatesAutoDarkmodeSvg: string;

			export const Svg_SurfaceAnalysisPointSetDeviationAutoDarkmodeSvg: string;

			export const Svg_SurfaceAnalysisThicknessAnalysisAutoDarkmodeSvg: string;

			export const Svg_SurfaceAnalysisThicknessAnalysisOffAutoDarkmodeSvg: string;

			export const Svg_SurfaceAnalysisUVCoordinatesOfAPointAutoDarkmodeSvg: string;

			export const Svg_SurfaceAnalysisZebraAnalysisAutoDarkmodeSvg: string;

			export const Svg_SurfaceAnalysisZebraAnalysisOffAutoDarkmodeSvg: string;

			export const Svg_SurfaceCreationAutoDarkmodeSvg: string;

			export const Svg_SurfaceCreationNewInV6DevLoftAutoDarkmodeSvg: string;

			export const Svg_SurfaceCreationRibbonOffsetAutoDarkmodeSvg: string;

			export const Svg_SurfaceEditToolsUntrimAllAutoDarkmodeSvg: string;

			export const Svg_SurfaceSidebarAutoDarkmodeSvg: string;

			export const Svg_SurfaceSidebarSurfaceCreationSurfaceFromPlanarCurvesAutoDarkmodeSvg: string;

			export const Svg_SurfaceSidebarSurfaceCreationLoftAutoDarkmodeSvg: string;

			export const Svg_SurfaceSidebarSurfaceCreationPatchAutoDarkmodeSvg: string;

			export const Svg_SurfaceSidebarSurfaceCreationRevolveAutoDarkmodeSvg: string;

			export const Svg_SurfaceSidebarSurfaceCreationSurfaceFrom23Or4EdgeCurvesAutoDarkmodeSvg: string;

			export const Svg_SurfaceSidebarSurfaceCreationSurfaceFromNetworkOfCurvesAutoDarkmodeSvg: string;

			export const Svg_SurfaceSidebarSurfaceCreationSurfaceFromPointGridAutoDarkmodeSvg: string;

			export const Svg_SurfaceToolsAutoDarkmodeSvg: string;

			export const Svg_SurfaceToolsBlendSurfaceAutoDarkmodeSvg: string;

			export const Svg_SurfaceToolsChamferSurfaceAutoDarkmodeSvg: string;

			export const Svg_SurfaceToolsDivideAlongCreasesAutoDarkmodeSvg: string;

			export const Svg_SurfaceToolsDivideAlongCreasesSplitAtTangentsAutoDarkmodeSvg: string;

			export const Svg_SurfaceToolsEdgeToolsEdgeToolsMergeEdgeAutoDarkmodeSvg: string;

			export const Svg_SurfaceToolsEdgeToolsRebuildEdgesAutoDarkmodeSvg: string;

			export const Svg_SurfaceToolsEdgeToolsSplitEdgeAutoDarkmodeSvg: string;

			export const Svg_SurfaceToolsFlattenSurfaceAutoDarkmodeSvg: string;

			export const Svg_SurfaceToolsMakeSurfaceNonPeriodicAutoDarkmodeSvg: string;

			export const Svg_SurfaceToolsMakeSurfacePeriodicAutoDarkmodeSvg: string;

			export const Svg_SurfaceToolsMakeUniformUVAutoDarkmodeSvg: string;

			export const Svg_SurfaceToolsMatchSurfaceMultipleMatchesAutoDarkmodeSvg: string;

			export const Svg_SurfaceToolsMergeSurfacesAutoDarkmodeSvg: string;

			export const Svg_SurfaceToolsOffsetSurfaceAutoDarkmodeSvg: string;

			export const Svg_SurfaceToolsRebuildSurfaceAutoDarkmodeSvg: string;

			export const Svg_SurfaceToolsRebuildUVAutoDarkmodeSvg: string;

			export const Svg_SurfaceToolsSetSurfaceTangentAutoDarkmodeSvg: string;

			export const Svg_SurfaceToolsSmashAutoDarkmodeSvg: string;

			export const Svg_SurfaceToolsSurfaceFlatteningSmashAutoDarkmodeSvg: string;

			export const Svg_SurfaceToolsSymmetryAutoDarkmodeSvg: string;

			export const Svg_SurfaceToolsTweenSurfacesAutoDarkmodeSvg: string;

			export const Svg_SurfaceToolsUnrollDevelopableSurfaceAutoDarkmodeSvg: string;

			export const Svg_SurfaceToolsVariableOffsetOfSurfaceAutoDarkmodeSvg: string;

			export const Svg_SurfaceToolsVariableRadiusSurfaceBlendAutoDarkmodeSvg: string;

			export const Svg_SurfaceToolsVariableRadiusSurfaceChamferAutoDarkmodeSvg: string;

			export const Svg_textBoldAutoDarkmodeSvg: string;

			export const Svg_textBoldDarkmodeAutoDarkmodeSvg: string;

			export const Svg_textBottomAutoDarkmodeSvg: string;

			export const Svg_textBottomDarkmodeAutoDarkmodeSvg: string;

			export const Svg_textCenterAutoDarkmodeSvg: string;

			export const Svg_textCenterDarkmodeAutoDarkmodeSvg: string;

			export const Svg_textFunctionAutoDarkmodeSvg: string;

			export const Svg_textFunctionDarkmodeAutoDarkmodeSvg: string;

			export const Svg_textItalicAutoDarkmodeSvg: string;

			export const Svg_textItalicDarkmodeAutoDarkmodeSvg: string;

			export const Svg_textLeftAutoDarkmodeSvg: string;

			export const Svg_textLeftDarkmodeAutoDarkmodeSvg: string;

			export const Svg_textMiddleAutoDarkmodeSvg: string;

			export const Svg_textMiddleDarkmodeAutoDarkmodeSvg: string;

			export const Svg_textRightAutoDarkmodeSvg: string;

			export const Svg_textRightDarkmodeAutoDarkmodeSvg: string;

			export const Svg_textTopAutoDarkmodeSvg: string;

			export const Svg_textTopDarkmodeAutoDarkmodeSvg: string;

			export const Svg_TextureMappingUnwrapAutoDarkmodeSvg: string;

			export const Svg_TexturesEnableFilteringAutoDarkmodeSvg: string;

			export const Svg_TexturesEnableFilteringVariesAutoDarkmodeSvg: string;

			export const Svg_TexturesEnvironmentMapAutoDarkmodeSvg: string;

			export const Svg_TexturesMirrorAlternateTilesAutoDarkmodeSvg: string;

			export const Svg_TexturesMirrorAlternateTilesVariesAutoDarkmodeSvg: string;

			export const Svg_TexturesSuperSampleAutoDarkmodeSvg: string;

			export const Svg_TexturesSuperSampleVariesAutoDarkmodeSvg: string;

			export const Svg_TexturesSwapColorsAutoDarkmodeSvg: string;

			export const Svg_TexturesSwapColorsVariesAutoDarkmodeSvg: string;

			export const Svg_TexturesTreatAsLinearOnAutoDarkmodeSvg: string;

			export const Svg_TexturesTreatAsLinearVariesAutoDarkmodeSvg: string;

			export const Svg_TextureClampingClamp2AutoDarkmodeSvg: string;

			export const Svg_TextureClampingClampAutoDarkmodeSvg: string;

			export const Svg_TextureClampingClampDarkmode2AutoDarkmodeSvg: string;

			export const Svg_TextureClampingClampScaleToClampRange2AutoDarkmodeSvg: string;

			export const Svg_TextureClampingClampScaleToClampRangeAutoDarkmodeSvg: string;

			export const Svg_TextureClampingClampScaleToClampRangeDarkmode2AutoDarkmodeSvg: string;

			export const Svg_TextureClampingClampScaleToClampRangeVariesAutoDarkmodeSvg: string;

			export const Svg_TextureClampingClampVariesAutoDarkmodeSvg: string;

			export const Svg_TextureColorAdjustmentGrayscaleAutoDarkmodeSvg: string;

			export const Svg_TextureColorAdjustmentGrayscaleVariesAutoDarkmodeSvg: string;

			export const Svg_TextureColorAdjustmentInvertAutoDarkmodeSvg: string;

			export const Svg_TextureColorAdjustmentInvertVariesAutoDarkmodeSvg: string;

			export const Svg_TextureMappingApplyCylindricalMappingAutoDarkmodeSvg: string;

			export const Svg_TextureMappingApplyPlanarMappingAutoDarkmodeSvg: string;

			export const Svg_TextureMappingApplySphericalMappingAutoDarkmodeSvg: string;

			export const Svg_TextureMappingApplySurfaceUVMappingAutoDarkmodeSvg: string;

			export const Svg_TextureMappingAutoDarkmodeSvg: string;

			export const Svg_TextureMappingDisplayInViewportAutoDarkmodeSvg: string;

			export const Svg_TextureMappingFitToObjectByOriginalMappingAutoDarkmodeSvg: string;

			export const Svg_TextureMappingMappingOffAutoDarkmodeSvg: string;

			export const Svg_TextureMappingMappingOnAutoDarkmodeSvg: string;

			export const Svg_TextureMappingMatchMappingAutoDarkmodeSvg: string;

			export const Svg_TextureMappingMaterialMappingChannelAutoDarkmodeSvg: string;

			export const Svg_TextureMappingMaterialScreenAutoDarkmodeSvg: string;

			export const Svg_TextureMappingMaterialWCSAutoDarkmodeSvg: string;

			export const Svg_TextureMappingMaterialWCSBoxAutoDarkmodeSvg: string;

			export const Svg_TextureMappingPreviewIn3DAutoDarkmodeSvg: string;

			export const Svg_TextureMappingPreviewIn3DVariesAutoDarkmodeSvg: string;

			export const Svg_TextureMappingPreviewLocalMappingAutoDarkmodeSvg: string;

			export const Svg_TextureMappingPreviewLocalMappingNewAutoDarkmodeSvg: string;

			export const Svg_TextureMappingPreviewLocalMappingNewVariesAutoDarkmodeSvg: string;

			export const Svg_TextureMappingPreviewLocalMappingVariesAutoDarkmodeSvg: string;

			export const Svg_TextureMappingRemoveMappingChannelAutoDarkmodeSvg: string;

			export const Svg_TextureMappingRepeatAutoDarkmodeSvg: string;

			export const Svg_TextureMappingRepeatNewAutoDarkmodeSvg: string;

			export const Svg_TextureMappingRepeatNewVariesAutoDarkmodeSvg: string;

			export const Svg_TextureMappingRepeatVariesAutoDarkmodeSvg: string;

			export const Svg_TextureMappingSetSizeToAspectRatioOfImageAutoDarkmodeSvg: string;

			export const Svg_TextureMappingSetSizeToBeEqualInAllDirectionsAutoDarkmodeSvg: string;

			export const Svg_TextureMappingSetTextureSizeToOneInAllDirectionsAutoDarkmodeSvg: string;

			export const Svg_TexturePanelWithColorAutoDarkmodeSvg: string;

			export const Svg_TextureToolsAutoDarkmodeSvg: string;

			export const Svg_TextureToolsDisableBumpMapAutoDarkmodeSvg: string;

			export const Svg_TextureToolsDisableEnvironmentMapAutoDarkmodeSvg: string;

			export const Svg_TextureToolsDisableTextureMapAutoDarkmodeSvg: string;

			export const Svg_TextureToolsDisableTransparencyMapAutoDarkmodeSvg: string;

			export const Svg_TextureToolsEnableBumpMapAutoDarkmodeSvg: string;

			export const Svg_TextureToolsEnableEnvironmentMapAutoDarkmodeSvg: string;

			export const Svg_TextureToolsEnableTextureMapAutoDarkmodeSvg: string;

			export const Svg_TextureToolsRefreshAllTexturesAutoDarkmodeSvg: string;

			export const Svg_ToolsAutoDarkmodeSvg: string;

			export const Svg_ToolsCommandHistoryAutoDarkmodeSvg: string;

			export const Svg_ToolsOpenToolbarCollectionAutoDarkmodeSvg: string;

			export const Svg_ToolsPlaceGISEarthAnchorPointAutoDarkmodeSvg: string;

			export const Svg_ToolsPlugInManagerAutoDarkmodeSvg: string;

			export const Svg_ToolsSaveAnOpenToolbarCollectionAutoDarkmodeSvg: string;

			export const Svg_ToolsSaveCommandHistoryAsAutoDarkmodeSvg: string;

			export const Svg_ToolsSaveOpenToolbarCollectionsAutoDarkmodeSvg: string;

			export const Svg_TransformAutoDarkmodeSvg: string;

			export const Svg_TransformDeformationToolsBendAutoDarkmodeSvg: string;

			export const Svg_TransformDeformationToolsTaperAutoDarkmodeSvg: string;

			export const Svg_TransformDeformationToolsTwistAutoDarkmodeSvg: string;

			export const Svg_TransformFlowAlongCurveAutoDarkmodeSvg: string;

			export const Svg_TransformMirrorAutoDarkmodeSvg: string;

			export const Svg_TransformMirrorOn3PointPlaneAutoDarkmodeSvg: string;

			export const Svg_TransformOrient2PointsAutoDarkmodeSvg: string;

			export const Svg_TransformOrient3PointsAutoDarkmodeSvg: string;

			export const Svg_TransformOrientCurveToEdgeAutoDarkmodeSvg: string;

			export const Svg_TransformOrientOnSurfaceAutoDarkmodeSvg: string;

			export const Svg_TransformOrientPerpendicularToCurveAutoDarkmodeSvg: string;

			export const Svg_TransformProjectToCPlaneAutoDarkmodeSvg: string;

			export const Svg_TransformRemapToCPlaneAutoDarkmodeSvg: string;

			export const Svg_TransformSetPointsAutoDarkmodeSvg: string;

			export const Svg_TransformShearAutoDarkmodeSvg: string;

			export const Svg_underlineAutoDarkmodeSvg: string;

			export const Svg_underlineDarkmodeAutoDarkmodeSvg: string;

			export const Svg_UndoAutoDarkmodeSvg: string;

			export const Svg_UndoClearUndoAutoDarkmodeSvg: string;

			export const Svg_UndoRedoMultipleAutoDarkmodeSvg: string;

			export const Svg_UndoUndoMultipleAutoDarkmodeSvg: string;

			export const Svg_UndoUndoSelectedAutoDarkmodeSvg: string;

			export const Svg_UngroupAllNestedAutoDarkmodeSvg: string;

			export const Svg_UtilitiesAttachGHSDataAutoDarkmodeSvg: string;

			export const Svg_UtilitiesCalculatorAutoDarkmodeSvg: string;

			export const Svg_UtilitiesClearRenderAndAnalysisMeshesAutoDarkmodeSvg: string;

			export const Svg_UtilitiesExportOptionsAutoDarkmodeSvg: string;

			export const Svg_UtilitiesImportOptionsAutoDarkmodeSvg: string;

			export const Svg_UtilitiesLayerbookRewindAutoDarkmodeSvg: string;

			export const Svg_UtilitiesOpenHyperlinkAutoDarkmodeSvg: string;

			export const Svg_UtilitiesPackageManagerAutoDarkmodeSvg: string;

			export const Svg_UtilitiesPurgeUnusedBlockDefinitionsAndLayersAutoDarkmodeSvg: string;

			export const Svg_UtilitiesUtilitiesRPNCalculatorAutoDarkmodeSvg: string;

			export const Svg_UVEditorAddEdgeStraighteningConstraintAutoDarkmodeSvg: string;

			export const Svg_UVEditorAddVertexPinningConstraintAutoDarkmodeSvg: string;

			export const Svg_UVEditorCaptureToClipboardAutoDarkmodeSvg: string;

			export const Svg_UVEditorExportAutoDarkmodeSvg: string;

			export const Svg_UVEditorExportBitmapAutoDarkmodeSvg: string;

			export const Svg_UVEditorPackTextureMeshesAutoDarkmodeSvg: string;

			export const Svg_UVEditorRemoveConstraintsAutoDarkmodeSvg: string;

			export const Svg_UVEditorResetZoomAutoDarkmodeSvg: string;

			export const Svg_UVEditorShowSelectedInUVEditorAutoDarkmodeSvg: string;

			export const Svg_ViewportLayout3DefaultViewportsAutoDarkmodeSvg: string;

			export const Svg_ViewportLayout3ViewportsAutoDarkmodeSvg: string;

			export const Svg_ViewportLayoutAutoDarkmodeSvg: string;

			export const Svg_ViewportLayoutCloseCurrentViewportAutoDarkmodeSvg: string;

			export const Svg_ViewportLayoutGridDisplayOffAutoDarkmodeSvg: string;

			export const Svg_ViewportLayoutGridDisplayOnAutoDarkmodeSvg: string;

			export const Svg_ViewportLayoutMaximizeRestoreViewportAutoDarkmodeSvg: string;

			export const Svg_ViewAutoDarkmodeSvg: string;

			export const Svg_ViewportLayoutNewFloatingPerspectiveViewportAutoDarkmodeSvg: string;

			export const Svg_ViewportLayoutNewFloatingViewportAutoDarkmodeSvg: string;

			export const Svg_ViewportLayoutNewViewportAutoDarkmodeSvg: string;

			export const Svg_ViewportLayoutSetLensLengthAutoDarkmodeSvg: string;

			export const Svg_ViewportLayoutSplitViewportHorizontallyAutoDarkmodeSvg: string;

			export const Svg_ViewportLayoutSplitViewportVerticallyAutoDarkmodeSvg: string;

			export const Svg_ViewportLayoutSynchronizeViewsAutoDarkmodeSvg: string;

			export const Svg_ViewportLayoutToggleFloatingViewportStateAutoDarkmodeSvg: string;

			export const Svg_ViewportLayoutToggleViewportTabsAutoDarkmodeSvg: string;

			export const Svg_ViewportLayoutViewportTabControlsAutoDarkmodeSvg: string;

			export const Svg_ViewportLayoutVisibilityDisplayClippingPlaneAutoDarkmodeSvg: string;

			export const Svg_ViewportLockViewportAutoDarkmodeSvg: string;

			export const Svg_ViewSetRedrawOffAutoDarkmodeSvg: string;

			export const Svg_ViewSetRedrawOnAutoDarkmodeSvg: string;

			export const Svg_ViewTiltViewAutoDarkmodeSvg: string;

			export const Svg_ViewViewportLayoutNewInV6OneViewAutoDarkmodeSvg: string;

			export const Svg_ViewViewportLayoutToggleLinkedViewsAutoDarkmodeSvg: string;

			export const Svg_VisibilityAutoDarkmodeSvg: string;

			export const Svg_VisibilityDisplayEnableClippingPlaneAutoDarkmodeSvg: string;

			export const Svg_VisibilityInvertSelectionAndHideControlPointsAutoDarkmodeSvg: string;

			export const Svg_VisibilityLayoutHideInDetailAutoDarkmodeSvg: string;

			export const Svg_VisibilityLockNewInV6IsolateLockObjectsAutoDarkmodeSvg: string;

			export const Svg_VisibilityLockUnlockSelectedObjectsAutoDarkmodeSvg: string;

			export const Svg_VisibilityNewInV6IsolateObjectsAutoDarkmodeSvg: string;

			export const Svg_VisibilityNewInV6UnisolateLockAutoDarkmodeSvg: string;

			export const Svg_VisibilityNewInV6UnisolateAutoDarkmodeSvg: string;

			export const Svg_VisibilityShowHiddenControlPointsAutoDarkmodeSvg: string;

			export const Svg_VisibilityShowPointsAutoDarkmodeSvg: string;

			export const Svg_WalkAboutLookaboutAutoDarkmodeSvg: string;

			export const Svg_WalkAboutAutoDarkmodeSvg: string;

			export const Svg_WalkAboutElevatorDown2AutoDarkmodeSvg: string;

			export const Svg_WalkAboutElevatorDownAutoDarkmodeSvg: string;

			export const Svg_WalkAboutElevatorUpAutoDarkmodeSvg: string;

			export const Svg_WalkAboutLensLengthPresetsAutoDarkmodeSvg: string;

			export const Svg_WalkAboutStepSizeFlyoutAutoDarkmodeSvg: string;

			export const Svg_WalkAboutWalkBackAutoDarkmodeSvg: string;

			export const Svg_WalkAboutWalkForwardAutoDarkmodeSvg: string;

			export const Svg_WalkAboutWalkLeftAutoDarkmodeSvg: string;

			export const Svg_WalkAboutWalkRightAutoDarkmodeSvg: string;

			export const Svg_WeldingAutoDarkmodeSvg: string;

			export const Svg_WeldingUnweldMeshAutoDarkmodeSvg: string;

			export const Svg_WeldingUnweldMeshEdgeAutoDarkmodeSvg: string;

			export const Svg_WeldingWeldMeshEdgeAutoDarkmodeSvg: string;

			export const Svg_WeldingWeldMeshVerticesAutoDarkmodeSvg: string;

			export const Svg_WindowContainersAutoDarkmodeSvg: string;

			export const Svg_WindowMacrosAutoDarkmodeSvg: string;

			export const Svg_WorksessionAutoDarkmodeSvg: string;

			export const Svg_WorksessionLimitReferenceModelAutoDarkmodeSvg: string;

			export const Tabs_LeftSidebarAutoDarkmodeSvg: string;

			export const Tabs_NotificationsDefaultAutoDarkmodeSvg: string;

			export const Tabs_NotificationsInfoAutoDarkmodeSvg: string;

			export const Tabs_NotificationsSeriousAutoDarkmodeSvg: string;

			export const Tabs_NotificationsWarningAutoDarkmodeSvg: string;

			export const Tabs_PropertiesAutoDarkmodeSvg: string;

			export const Tabs_PropMaterialAutoDarkmodeSvg: string;

			export const Tabs_PushPinHotAutoDarkmodeSvg: string;

			export const Tabs_PushPinNormalAutoDarkmodeSvg: string;

			export const Tabs_PushPinUnpinHotAutoDarkmodeSvg: string;

			export const Tabs_PushPinUnpinNormalAutoDarkmodeSvg: string;

			export const Tabs_RightSidebarAutoDarkmodeSvg: string;

			export const Tabs_TabBlockInstancesAutoDarkmodeSvg: string;

			export const Tabs_TabBoxEditAutoDarkmodeSvg: string;

			export const Tabs_TabCalculatorAutoDarkmodeSvg: string;

			export const Tabs_TabClippingPlaneAutoDarkmodeSvg: string;

			export const Tabs_TabConstraintsAutoDarkmodeSvg: string;

			export const Tabs_TabDisplayAutoDarkmodeSvg: string;

			export const Tabs_TabDocumentUsertextAutoDarkmodeSvg: string;

			export const Tabs_TabEnvironmentsAutoDarkmodeSvg: string;

			export const Tabs_TabGroundPlaneAutoDarkmodeSvg: string;

			export const Tabs_TabHelpAutoDarkmodeSvg: string;

			export const Tabs_TabLayerStatesAutoDarkmodeSvg: string;

			export const Tabs_TabLayersAutoDarkmodeSvg: string;

			export const Tabs_TabLayoutsAutoDarkmodeSvg: string;

			export const Tabs_TabLibrariesAutoDarkmodeSvg: string;

			export const Tabs_TabLightManagerIcoAutoDarkmodeSvg: string;

			export const Tabs_TabMacroEditorAutoDarkmodeSvg: string;

			export const Tabs_TabMeshRepairAutoDarkmodeSvg: string;

			export const Tabs_TabMoveUVNAutoDarkmodeSvg: string;

			export const Tabs_TabNamedCPlanesAutoDarkmodeSvg: string;

			export const Tabs_TabNamedPositionsAutoDarkmodeSvg: string;

			export const Tabs_TabNamedSelectionsAutoDarkmodeSvg: string;

			export const Tabs_TabNamedViewsAutoDarkmodeSvg: string;

			export const Tabs_TabNotesAutoDarkmodeSvg: string;

			export const Tabs_TabObjectManagerAutoDarkmodeSvg: string;

			export const Tabs_TabObjectSnapAutoDarkmodeSvg: string;

			export const Tabs_TabPointDeviationAutoDarkmodeSvg: string;

			export const Tabs_TabRenderSettingsAutoDarkmodeSvg: string;

			export const Tabs_TabRPNCalculatorAutoDarkmodeSvg: string;

			export const Tabs_TabSnapshotAutoDarkmodeSvg: string;

			export const Tabs_TabSunAutoDarkmodeSvg: string;

			export const Tabs_TabTexturesAutoDarkmodeSvg: string;

			export const Tabs_TabTutorialsAutoDarkmodeSvg: string;

			export const Tabs_TabWebBrowserAutoDarkmodeSvg: string;

			export const Svg_PlaneSurfaceSidebarSurfaceCreationRectangularPlane3PointsAutoDarkmodeCopySvg: string;

			export const Svg_PlaneSurfaceSidebarSurfaceCreationRectangularPlane3PointsAutoDarkmodeCopyAutoDarkmodeSvg: string;

			export const Svg_UVEditorReUnwrapSelected2Svg: string;

			export const Svg_UVEditorReUnwrapSelectedDisable2Svg: string;

			export const Make2d1stLeftSvg: string;

			export const Make2d3rdSvg: string;

			export const Make2dBackSvg: string;

			export const Make2dBottomSvg: string;

			export const Make2dFrontSvg: string;

			export const Make2dLeftSvg: string;

			export const Make2dRightSvg: string;

			export const Make2dTopSvg: string;

			export const Svg_UVEditorReUnwrapSelected2AutoDarkmodeSvg: string;

			export const Svg_UVEditorReUnwrapSelectedDisable2AutoDarkmodeSvg: string;

			export const Make2d1stLeftAutoDarkmodeSvg: string;

			export const Make2d3rdAutoDarkmodeSvg: string;

			export const Make2dBackAutoDarkmodeSvg: string;

			export const Make2dBottomAutoDarkmodeSvg: string;

			export const Make2dFrontAutoDarkmodeSvg: string;

			export const Make2dLeftAutoDarkmodeSvg: string;

			export const Make2dRightAutoDarkmodeSvg: string;

			export const Make2dTopAutoDarkmodeSvg: string;

			export const NewDetailOffAutoDarkmodeSvg: string;

			export const NewDetailOnAutoDarkmodeSvg: string;

			export const RunSvg: string;

			export const RunGraySvg: string;

			export const Svg_CurveBooleanSvg: string;

			export const Svg_CurveBooleanAutoDarkmodeSvg: string;

			export const Svg_AutoAlignCPlaneDarkmodeSvg: string;

			export const Svg_AutoAlignCPlaneSvg: string;

			export const AddSvg: string;

			export const PickIco: string;

			export const Svg_AddObjectsToBlockSvg: string;

			export const Svg_AddObjectsToBlockAutoDarkmodeSvg: string;

			export const Svg_CopyViewportToDetailSvg: string;

			export const Svg_CopyViewportToDetailAutoDarkmodeSvg: string;

			export const Svg_CopyLayoutSvg: string;

			export const Svg_FilletSrfCrvSvg: string;

			export const Svg_FilletSrfCrvAutoDarkmodeSvg: string;

			export const Svg_FilletSrfToRailSvg: string;

			export const Svg_FilletSrfToRailAutoDarkmodeSvg: string;

			export const Svg_FitCurveToSurfaceSvg: string;

			export const Svg_FitCurveToSurfaceAutoDarkmodeSvg: string;

			export const Svg_HideInDetailDarkmodeSvg: string;

			export const Svg_HideLayersInDetailDarkmodeSvg: string;

			export const Svg_PushPullSvg: string;

			export const Svg_PushPullAutoDarkmodeSvg: string;

			export const Svg_SelFacesToBoundarySvg: string;

			export const Svg_SelFacesToBoundaryAutoDarkmodeSvg: string;

			export const Svg_SelMirroredBlocksSvg: string;

			export const Svg_SelMirroredBlocksAutoDarkmodeSvg: string;

			export const Svg_ShowInDetailDarkmodeSvg: string;

			export const Svg_SplitRefitSurfaceSvg: string;

			export const Svg_SplitRefitSurfaceAutoDarkmodeSvg: string;

			export const Svg_SubDSpinEdgeSvg: string;

			export const Svg_SubDSpinEdgeAutoDarkmodeSvg: string;

			export const Svg_LayerBookViewsDarkmodeSvg: string;

			export const Svg_LayerBookViewsSvg: string;

			export const Svg_LayerBookPrintDarkmodeSvg: string;

			export const Svg_LayerBookPrintSvg: string;

			export const Svg_HideInDetailSvg: string;

			export const Svg_ShowInDetailSvg: string;

			export const Svg_HideLayersInDetailSvg: string;

			export const Svg_HighlightObjectLayersDarkmodeSvg: string;

			export const Svg_HighlightObjectLayersAutoDarkmodeSvg: string;

			export const Svg_HighlightObjectLayersSvg: string;

			export const Svg_OneLayerOnDarkmodeSvg: string;

			export const Svg_OneLayerOnAutoDarkmodeSvg: string;

			export const Svg_OneLayerOnSvg: string;

			export const Svg_LayerStateManagerSvg: string;

			export const Svg_LayerStateManagerAutoDarkmodeSvg: string;

			export const Svg_AllLayersOnDarkmodeSvg: string;

			export const Svg_AllLayersOnAutoDarkmodeSvg: string;

			export const Svg_AllLayersOnSvg: string;

			export const Svg_PlaneCornerToCornerSvg: string;

			export const Svg_PlaneCornerToCornerAutoDarkmodeSvg: string;

			export const Svg_HideLayersInDetailAutoDarkmodeSvg: string;

			export const Svg_BasicMaterialSvg: string;

			export const Svg_BasicEnvironmentSvg: string;

			export const Svg_BitmapTextureSvg: string;

			export const Svg_HDRTextureSvg: string;

			export const Svg_CompressAlongWorldXSvg: string;

			export const Svg_CompressAlongWorldXAutoDarkmodeSvg: string;

			export const Svg_CompressAlongWorldYSvg: string;

			export const Svg_CompressAlongWorldYAutoDarkmodeSvg: string;

			export const Svg_CompressAlongWorldZSvg: string;

			export const Svg_CompressAlongWorldZAutoDarkmodeSvg: string;

			export const Svg_CompressAlongXSvg: string;

			export const Svg_CompressAlongXAutoDarkmodeSvg: string;

			export const Svg_CompressAlongYSvg: string;

			export const Svg_CompressAlongYAutoDarkmodeSvg: string;

			export const Svg_CompressAlongZSvg: string;

			export const Svg_CompressAlongZAutoDarkmodeSvg: string;

			export const Svg_ExpandAlongWorldXSvg: string;

			export const Svg_ExpandAlongWorldXAutoDarkmodeSvg: string;

			export const Svg_ExpandAlongWorldYSvg: string;

			export const Svg_ExpandAlongWorldYAutoDarkmodeSvg: string;

			export const Svg_ExpandAlongWorldZSvg: string;

			export const Svg_ExpandAlongWorldZAutoDarkmodeSvg: string;

			export const Svg_ExpandAlongXSvg: string;

			export const Svg_ExpandAlongXAutoDarkmodeSvg: string;

			export const Svg_ExpandAlongYSvg: string;

			export const Svg_ExpandAlongYAutoDarkmodeSvg: string;

			export const Svg_ExpandAlongZSvg: string;

			export const Svg_ExpandAlongZAutoDarkmodeSvg: string;

			export const Svg_SetNudgeCPlaneSvg: string;

			export const Svg_SetNudgeCPlaneAutoDarkmodeSvg: string;

			export const Svg_SetNudgeUVNSvg: string;

			export const Svg_SetNudgeUVNAutoDarkmodeSvg: string;

			export const Svg_CancelSvg: string;

			export const Svg_CancelAllSvg: string;

			export const Svg_CancelAllAutoDarkmodeSvg: string;

			export const Svg_CancelAutoDarkmodeSvg: string;

			export const Svg_ApplyDisplacementDarkmodeSvg: string;

			export const Svg_ApplyShutliningDarkmodeSvg: string;

			export const Svg_GroundPlaneDarkmodeSvg: string;

			export const Svg_RenderSettingsDarkmodeSvg: string;

			export const Svg_SaveRenderedImageSvg: string;

			export const Svg_RenderSettingsSvg: string;

			export const Svg_RenderSettingsAutoDarkmodeSvg: string;

			export const Svg_GroundPlaneSvg: string;

			export const Svg_GroundPlaneAutoDarkmodeSvg: string;

			export const Svg_ApplyShutliningSvg: string;

			export const Svg_ApplyShutliningAutoDarkmodeSvg: string;

			export const Svg_ApplyDisplacementSvg: string;

			export const Svg_ApplyDisplacementAutoDarkmodeSvg: string;

			export const Svg_MaterialsPanelDarkmodeSvg: string;

			export const Svg_SmartTrackingOptionsSvg: string;

			export const Svg_SmartTrackingOptionsAutoDarkmodeSvg: string;

			export const Svg_SnapSizeSvg: string;

			export const Svg_SnapSizeAutoDarkmodeSvg: string;

			export const Svg_ToggleProjectToCPlaneSvg: string;

			export const Svg_ToggleProjectToCPlaneAutoDarkmodeSvg: string;

			export const Make2d1stSvg: string;

			export const Make2d1stHSvg: string;

			export const Make2d1stHsSvg: string;

			export const Make2d1stSSvg: string;

			export const Make2d1stTSvg: string;

			export const Make2d1stThSvg: string;

			export const Make2d1stThsSvg: string;

			export const Make2d1stTsSvg: string;

			export const Make2d3rdHSvg: string;

			export const Make2d3rdHsSvg: string;

			export const Make2d3rdSSvg: string;

			export const Make2d3rdTSvg: string;

			export const Make2d3rdThSvg: string;

			export const Make2d3rdThsSvg: string;

			export const Make2d3rdTsSvg: string;

			export const Make2dProjectSvg: string;

			export const Make2dViewVSvg: string;

			export const Make2dViewVhSvg: string;

			export const Make2dViewVhsSvg: string;

			export const Make2dViewVhtSvg: string;

			export const Make2dViewVhtsSvg: string;

			export const Make2dViewVsSvg: string;

			export const Make2dViewVtSvg: string;

			export const Make2dViewVtsSvg: string;

			export const Svg_NamedPositionsSvg: string;

			export const Svg_NamedPositionsAutoDarkmodeSvg: string;

			export const Svg_SoftMoveSvg: string;

			export const Svg_SoftMoveAutoDarkmodeSvg: string;

			export const Svg_SoftTransformSvg: string;

			export const Svg_SoftTransformAutoDarkmodeSvg: string;

			export const Svg_SubDFaceEdgeVertexToggleSvg: string;

			export const Svg_SubDFaceEdgeVertexToggleAutoDarkmodeSvg: string;

			export const Svg_SelectClosedMeshesSvg: string;

			export const Svg_SelectClosedMeshesAutoDarkmodeSvg: string;

			export const Svg_SelectEdgeLoopSvg: string;

			export const Svg_SelectEdgeLoopAutoDarkmodeSvg: string;

			export const Svg_SelectFaceLoopSvg: string;

			export const Svg_SelectFaceLoopAutoDarkmodeSvg: string;

			export const Svg_SelectOpenMeshesSvg: string;

			export const Svg_SelectOpenMeshesAutoDarkmodeSvg: string;

			export const Svg_HistorySettingsSvg: string;

			export const Svg_HistorySettingsAutoDarkmodeSvg: string;

			export const Svg_LockObjectsWithHistorySvg: string;

			export const Svg_LockObjectsWithHistoryAutoDarkmodeSvg: string;

			export const Svg_PurgeHistorySvg: string;

			export const Svg_PurgeHistoryAutoDarkmodeSvg: string;

			export const Svg_SelectAllSvg: string;

			export const Svg_SelectAllAutoDarkmodeSvg: string;

			export const Svg_SelectByAnnotationStyleSvg: string;

			export const Svg_SelectByAnnotationStyleAutoDarkmodeSvg: string;

			export const Svg_SelectByBoundaryCurveSvg: string;

			export const Svg_SelectByBoundaryCurveAutoDarkmodeSvg: string;

			export const Svg_SelectByKeyValueSvg: string;

			export const Svg_SelectByKeyValueAutoDarkmodeSvg: string;

			export const Svg_SelectByValueSvg: string;

			export const Svg_SelectByValueAutoDarkmodeSvg: string;

			export const Svg_SelectClippingPlanesSvg: string;

			export const Svg_SelectClippingPlanesAutoDarkmodeSvg: string;

			export const Svg_SelRectangularSvg: string;

			export const Svg_SelRectangularAutoDarkmodeSvg: string;

			export const Svg_SelSmallSvg: string;

			export const Svg_SelSmallAutoDarkmodeSvg: string;

			export const Svg_SaveRenderedImageSvgSvg_SaveRenderedImageSvg: string;

			export const Svg_SaveRenderedImageAutoDarkmodeSvgSvg_SaveRenderedImageAutoDarkmodeSvg: string;

			export const Svg_NewInRhino8Svg: string;

			export const Svg_a8d8251e33124743A77080cebe1dae5cSvg: string;

			export const Svg_BridgeSvg: string;

			export const Svg_BridgeAutoDarkmodeSvg: string;

			export const Svg_CrvAndSrfToNURBSSvg: string;

			export const Svg_CrvAndSrfToNURBSAutoDarkmodeSvg: string;

			export const Svg_InsertEdgeSvg: string;

			export const Svg_InsertEdgeAutoDarkmodeSvg: string;

			export const Svg_MeshToNurbsSvg: string;

			export const Svg_MeshToNurbsAutoDarkmodeSvg: string;

			export const Svg_OffsetSubDSvg: string;

			export const Svg_OffsetSubDAutoDarkmodeSvg: string;

			export const Svg_QuadRemeshSvg: string;

			export const Svg_QuadRemeshAutoDarkmodeSvg: string;

			export const Svg_SlideEdgeSvg: string;

			export const Svg_SlideEdgeAutoDarkmodeSvg: string;

			export const Svg_SubdivideFaceSvg: string;

			export const Svg_SubdivideFaceAutoDarkmodeSvg: string;

			export const Svg_SubDToNURBSSvg: string;

			export const Svg_SubDToNURBSAutoDarkmodeSvg: string;

			export const Svg_ToSubDSvg: string;

			export const Svg_ToSubDAutoDarkmodeSvg: string;

			export const Svg_MultiPipeSvg: string;

			export const Svg_MultiPipeAutoDarkmodeSvg: string;

			export const Svg_StretchSvg: string;

			export const Svg_StretchAutoDarkmodeSvg: string;

			export const Svg_SubD3DFaceSvg: string;

			export const Svg_SubD3DFaceAutoDarkmodeSvg: string;

			export const Svg_SubDPlaneSvg: string;

			export const Svg_SubDPlaneAutoDarkmodeSvg: string;

			export const Svg_SubDSphereSvg: string;

			export const Svg_SubDSphereAutoDarkmodeSvg: string;

			export const Svg_SubDSweep1Svg: string;

			export const Svg_SubDSweep1AutoDarkmodeSvg: string;

			export const Svg_SubDSweep2Svg: string;

			export const Svg_SubDSweep2AutoDarkmodeSvg: string;

			export const Svg_SubDTruncatedConeSvg: string;

			export const Svg_SubDTruncatedConeAutoDarkmodeSvgSvg_SubDTruncatedConeAutoDarkmodeSvg: string;

			export const Svg_BoxDiagonalSvg: string;

			export const Svg_BoxDiagonalAutoDarkmodeSvg: string;

			export const Svg_TruncatedConeSvg: string;

			export const Svg_TruncatedConeAutoDarkmodeSvg: string;

			export const Svg_6abf434831d1491fA4aa593a731a063eSvg: string;

			export const Svg_6abf434831d1491fA4aa593a731a063eDarkSvg: string;

			export const Svg_CapPlanarHolesSvg: string;

			export const Svg_CapPlanarHolesAutoDarkmodeSvg: string;

			export const Svg_EditEdgeFilletsSvg: string;

			export const Svg_EditEdgeFilletsAutoDarkmodeSvg: string;

			export const Svg_ExtractSurfaceSvg: string;

			export const Svg_ExtractSurfaceAutoDarkmodeSvg: string;

			export const Svg_ExtrudeFaceToBoundarySvg: string;

			export const Svg_ExtrudeFaceToBoundaryAutoDarkmodeSvg: string;

			export const Svg_FoldPlanarFacesSvg: string;

			export const Svg_FoldPlanarFacesAutoDarkmodeSvg: string;

			export const Svg_MoveEdgeSvg: string;

			export const Svg_MoveEdgeAutoDarkmodeSvg: string;

			export const Svg_MoveUntrimmedFaceSvg: string;

			export const Svg_MoveUntrimmedFaceAutoDarkmodeSvg: string;

			export const Svg_SharpSvg: string;

			export const Svg_SolidPtOnSvg: string;

			export const Svg_SolidPtOnAutoDarkmodeSvg: string;

			export const Svg_SplitPlanarFaceSvg: string;

			export const Svg_SplitPlanarFaceAutoDarkmodeSvg: string;

			export const Svg_SubDSharpDarkmodeSvg: string;

			export const Svg_AttachSvg: string;

			export const Svg_AttachAutoDarkmodeSvg: string;

			export const Svg_DocumentPropertiesSvg: string;

			export const Svg_DocumentPropertiesAutoDarkmodeSvg: string;

			export const Svg_InsertSvg: string;

			export const Svg_InsertAutoDarkmodeSvg: string;

			export const Svg_PrintSvg: string;

			export const Svg_PrintAutoDarkmodeSvg: string;

			export const Svg_SaveACopySvg: string;

			export const Svg_SaveACopyAutoDarkmodeSvg: string;

			export const Svg_BounceSvg: string;

			export const Svg_BounceAutoDarkmodeSvg: string;

			export const Svg_ClosestPointsObjectsSvg: string;

			export const Svg_ClosestPointsObjectsAutoDarkmodeSvg: string;

			export const Svg_CurvatureSvg: string;

			export const Svg_CurvatureGraphSvg: string;

			export const Svg_CurvatureGraphAutoDarkmodeSvg: string;

			export const Svg_DiameterSvg: string;

			export const Svg_DiameterAutoDarkmodeSvg: string;

			export const Svg_LengthSvg: string;

			export const Svg_LengthAutoDarkmodeSvg: string;

			export const Svg_PolygonCountSvg: string;

			export const Svg_PolygonCountAutoDarkmodeSvg: string;

			export const Svg_RadiusSvg: string;

			export const Svg_RadiusAutoDarkmodeSvg: string;

			export const Svg_CPlaneBackSvg: string;

			export const Svg_CPlaneBackAutoDarkmodeSvg: string;

			export const Svg_CPlaneBottomSvg: string;

			export const Svg_CPlaneBottomAutoDarkmodeSvg: string;

			export const Svg_CPlaneFrontSvg: string;

			export const Svg_CPlaneFrontAutoDarkmodeSvg: string;

			export const Svg_CPlaneLeftSvg: string;

			export const Svg_CPlaneLeftAutoDarkmodeSvg: string;

			export const Svg_CPlaneRightSvg: string;

			export const Svg_CPlaneRightAutoDarkmodeSvg: string;

			export const Svg_CPlaneTopSvg: string;

			export const Svg_CPlaneTopAutoDarkmodeSvg: string;

			export const Svg_AddDetailViewSvg: string;

			export const Svg_AddDetailViewAutoDarkmodeSvg: string;

			export const Svg_EditTextSvg: string;

			export const Svg_EditTextAutoDarkmodeSvg: string;

			export const Svg_ExtractConnectedMeshFacesSvgSvg_ExtractConnectedMeshFacesSvg: string;

			export const Svg_ExtractConnectedMeshFacesAutoDarkmodeSvgSvg_ExtractConnectedMeshFacesAutoDarkmodeSvg: string;

			export const Svg_FindTextSvg: string;

			export const Svg_FindTextAutoDarkmodeSvg: string;

			export const Svg_GrasshopperPlayerSvg: string;

			export const Svg_GrasshopperPlayerAutoDarkmodeSvgSvg_GrasshopperPlayerAutoDarkmodeSvg: string;

			export const Svg_HatchBaseSvg: string;

			export const Svg_HatchBaseAutoDarkmodeSvg: string;

			export const Svg_LayoutPropertiesSvg: string;

			export const Svg_LayoutPropertiesAutoDarkmodeSvg: string;

			export const Svg_LayoutsPanelSvg: string;

			export const Svg_LayoutsPanelAutoDarkmodeSvg: string;

			export const Svg_NewLayoutSvg: string;

			export const Svg_NewLayout1DetailSvg: string;

			export const Svg_NewLayout1DetailAutoDarkmodeSvg: string;

			export const Svg_NewLayoutAutoDarkmodeSvg: string;

			export const Svg_RotateIncrementSvg: string;

			export const Svg_RotateIncrementAutoDarkmodeSvg: string;

			export const Svg_ScaleTextHeightSvg: string;

			export const Svg_ScaleTextHeightAutoDarkmodeSvg: string;

			export const Svg_ScriptCompilerSvg: string;

			export const Svg_ScriptCompilerAutoDarkmodeSvg: string;

			export const Svg_ToggleHatchScalingSvg: string;

			export const Svg_ToggleHatchScalingAutoDarkmodeSvg: string;

			export const Svg_PlusOverlayForPanelsSvg: string;

			export const Svg_DollyZoomSvg: string;

			export const Svg_DollyZoomAutoDarkmodeSvg: string;

			export const Svg_EditNamedViewsSvg: string;

			export const Svg_EditNamedViewsAutoDarkmodeSvg: string;

			export const Svg_HeightfieldSvg: string;

			export const Svg_HeightfieldAutoDarkmodeSvg: string;

			export const Svg_MatchPerspectiveSvg: string;

			export const Svg_MatchPerspectiveAutoDarkmodeSvg: string;

			export const Svg_OrientCameraToSrfSvg: string;

			export const Svg_OrientCameraToSrfAutoDarkmodeSvg: string;

			export const Svg_RedoViewChangeSvg: string;

			export const Svg_RedoViewChangeAutoDarkmodeSvg: string;

			export const Svg_RibbonSvg: string;

			export const Svg_RibbonAutoDarkmodeSvg: string;

			export const Svg_SaveNamedViewSvg: string;

			export const Svg_SaveNamedViewAutoDarkmodeSvg: string;

			export const Svg_Sweep1Svg: string;

			export const Svg_Sweep1AutoDarkmodeSvg: string;

			export const Svg_Sweep2Svg: string;

			export const Svg_Sweep2AutoDarkmodeSvg: string;

			export const Svg_TwoPointPerspectiveSvg: string;

			export const Svg_TwoPointPerspectiveAutoDarkmodeSvg: string;

			export const Svg_UndoViewChangeSvg: string;

			export const Svg_UndoViewChangeAutoDarkmodeSvg: string;

			export const Svg_ViewTargetToObjectSvg: string;

			export const Svg_ViewTargetToObjectAutoDarkmodeSvg: string;

			export const Svg_Zoom1To1Svg: string;

			export const Svg_Zoom1To1AutoDarkmodeSvg: string;

			export const Svg_ZoomDynamicSvg: string;

			export const Svg_ZoomDynamicAutoDarkmodeSvg: string;

			export const Svg_ZoomExtentsSvg: string;

			export const Svg_ZoomExtentsAutoDarkmodeSvg: string;

			export const Svg_ZoomSelectedSvg: string;

			export const Svg_ZoomSelectedAutoDarkmodeSvg: string;

			export const Svg_ZoomWindowSvg: string;

			export const Svg_ZoomWindowAutoDarkmodeSvg: string;

			export const Svg_DrapeSvg: string;

			export const Svg_DrapePtSvg: string;

			export const Svg_DrapePtAutoDarkmodeSvg: string;

			export const Svg_DrapeAutoDarkmodeSvg: string;

			export const Svg_SrfPtSvg: string;

			export const Svg_SrfPtGridSvg: string;

			export const Svg_SrfPtGridAutoDarkmodeSvg: string;

			export const Svg_SrfPtAutoDarkmodeSvg: string;

			export const Svg_WeldSvg: string;

			export const Svg_WeldAutoDarkmodeSvg: string;

			export const Svg_HideSwapSvg: string;

			export const Svg_HideSwapAutoDarkmodeSvg: string;

			export const Svg_LockSwapSvg: string;

			export const Svg_LockSwapAutoDarkmodeSvg: string;

			export const Svg_ShowSelectedSvg: string;

			export const Svg_ShowSelectedAutoDarkmodeSvg: string;

			export const Svg_AlerterSvg: string;

			export const Svg_AlerterAutoDarkmodeSvg: string;

			export const Svg_BoxEditSvg: string;

			export const Svg_BoxEditAutoDarkmodeSvg: string;

			export const Svg_HyperlinkSvg: string;

			export const Svg_HyperlinkAutoDarkmodeSvg: string;

			export const Svg_ReducePointCloudSvg: string;

			export const Svg_ReducePointCloudAutoDarkmodeSvg: string;

			export const Svg_RepeatSvg: string;

			export const Svg_RepeatAutoDarkmodeSvg: string;

			export const Svg_SaveWindowLayoutSvg: string;

			export const Svg_SaveWindowLayoutAutoDarkmodeSvg: string;

			export const Svg_ShowSvg: string;

			export const Svg_ShowAutoDarkmodeSvg: string;

			export const Svg_ToolbarLayoutSvg: string;

			export const Svg_ToolbarLayoutAutoDarkmodeSvg: string;

			export const Svg_WindowLayoutSvg: string;

			export const Svg_WindowLayoutAutoDarkmodeSvg: string;

			export const Svg_ApplyBoxMappingSvg: string;

			export const Svg_ApplyBoxMappingAutoDarkmodeSvg: string;

			export const Svg_ApplyCustomMappingSvg: string;

			export const Svg_ApplyCustomMappingAutoDarkmodeSvg: string;

			export const Svg_EnableTransparencyMapSvg: string;

			export const Svg_EnableTransparencyMapAutoDarkmodeSvg: string;

			export const Svg_PackTexturesSvg: string;

			export const Svg_PackTexturesAutoDarkmodeSvg: string;

			export const Svg_UnpackTexturesSvg: string;

			export const Svg_UnpackTexturesAutoDarkmodeSvg: string;

			export const Svg_UVEditorSvg: string;

			export const Svg_UVEditorAutoDarkmodeSvg: string;

			export const Svg_DisableClippingPlaneSvg: string;

			export const Svg_DisableClippingPlaneAutoDarkmodeSvg: string;

			export const Svg_DraftAngleAnalysisSvg: string;

			export const Svg_DraftAngleAnalysisAutoDarkmodeSvg: string;

			export const Svg_RenderMeshSettingsSvg: string;

			export const Svg_RenderMeshSettingsAutoDarkmodeSvg: string;

			export const Svg_SubDDisplayToggleSvg: string;

			export const Svg_SubDDisplayToggleAutoDarkmodeSvg: string;

			export const Svg_UnwrapSvg: string;

			export const Svg_UnwrapAutoDarkmodeSvg: string;

			export const Svg_WireframeViewportSvg: string;

			export const Svg_WireframeViewportAutoDarkmodeSvg: string;

			export const Svg_ChangeDegreeSurfaceSvg: string;

			export const Svg_ChangeDegreeSurfaceAutoDarkmodeSvg: string;

			export const Svg_ConnectSrfSvg: string;

			export const Svg_ConnectSrfAutoDarkmodeSvg: string;

			export const Svg_EndBulgeCurveSvg: string;

			export const Svg_EndBulgeCurveAutoDarkmodeSvg: string;

			export const Svg_EndBulgeSurfaceSvg: string;

			export const Svg_EndBulgeSurfaceAutoDarkmodeSvg: string;

			export const Svg_ExtendSrfSvg: string;

			export const Svg_ExtendSrfAutoDarkmodeSvg: string;

			export const Svg_FitSrfSvg: string;

			export const Svg_FitSrfAutoDarkmodeSvg: string;

			export const Svg_MakeUniformSvg: string;

			export const Svg_MakeUniformAutoDarkmodeSvg: string;

			export const Svg_MatchSrfSvg: string;

			export const Svg_MatchSrfAutoDarkmodeSvg: string;

			export const Svg_ReplaceEdgeSvg: string;

			export const Svg_ReplaceEdgeAutoDarkmodeSvg: string;

			export const Svg_SrfSeamSvg: string;

			export const Svg_SrfSeamAutoDarkmodeSvg: string;

			export const Svg_UntrimSvg: string;

			export const Svg_UntrimAutoDarkmodeSvg: string;

			export const Svg_VariableFilletSrfSvg: string;

			export const Svg_VariableFilletSrfAutoDarkmodeSvg: string;

			export const Svg_AnnotationStylesSvg: string;

			export const Svg_AnnotationStylesAutoDarkmodeSvg: string;

			export const Svg_DimAreaSvg: string;

			export const Svg_DimAreaAutoDarkmodeSvg: string;

			export const Svg_DimVolumeSvg: string;

			export const Svg_DimVolumeAutoDarkmodeSvg: string;

			export const Svg_DuplicateAnnotationStyleSvg: string;

			export const Svg_DuplicateAnnotationStyleAutoDarkmodeSvg: string;

			export const Svg_HatchSvg: string;

			export const Svg_HatchAutoDarkmodeSvg: string;

			export const Svg_ImportAnnotationStylesSvg: string;

			export const Svg_ImportAnnotationStylesAutoDarkmodeSvg: string;

			export const Svg_RevCloudSvg: string;

			export const Svg_RevCloudAutoDarkmodeSvg: string;

			export const Svg_SetLineTypeSvg: string;

			export const Svg_SetLineTypeAutoDarkmodeSvg: string;

			export const Svg_DuplicateBorderSvg: string;

			export const Svg_DuplicateBorderAutoDarkmodeSvg: string;

			export const Svg_Make2DSvg: string;

			export const Svg_Make2DAutoDarkmodeSvg: string;

			export const Svg_RevolveSvg: string;

			export const Svg_RevolveAutoDarkmodeSvg: string;

			export const Svg_MatchPropertiesSvg: string;

			export const Svg_MatchPropertiesAutoDarkmodeSvg: string;

			export const Svg_ViewportPropertiesSvg: string;

			export const Svg_ViewportPropertiesAutoDarkmodeSvg: string;

			export const Svg_ShrinkTrimmedSrfSvg: string;

			export const Svg_ShrinkTrimmedSrfAutoDarkmodeSvg: string;

			export const Svg_ExtractDuplicateMeshFacesSvg: string;

			export const Svg_ExtractDuplicateMeshFacesAutoDarkmodeSvg: string;

			export const Svg_ExtractMeshSvg: string;

			export const Svg_ExtractMeshFacesSvg: string;

			export const Svg_ExtractMeshFacesAutoDarkmodeSvg: string;

			export const Svg_ExtractMeshExtractConnectedMeshFacesSvg: string;

			export const Svg_Plane3PtsSvg: string;

			export const Svg_Plane3PtsAutoDarkmodeSvg: string;

			export const Svg_PlaneThroughPtsSvg: string;

			export const Svg_PlaneThroughPtsAutoDarkmodeSvg: string;

			export const Svg_DigSketchSvg: string;

			export const Svg_DigSketchAutoDarkmodeSvg: string;

			export const Svg_PanelsHamburgerSvg: string;

			export const Svg_PanelsSearchSvg: string;

			export const Svg_PanelsSearchGraySvg: string;

			export const Svg_PanelsHamburgerGraySvg: string;

			export const Svg_ArtisticDisplaySvg: string;

			export const Svg_PenDisplaySvg: string;

			export const Svg_TechnicalDisplaySvg: string;

			export const Svg_ClearClippingSectionsSvg: string;

			export const Svg_ClearClippingSectionsAutoDarkmodeSvg: string;

			export const Svg_ExtractClipping2dDrawingsSvg: string;

			export const Svg_ExtractClipping2dDrawingsAutoDarkmodeSvg: string;

			export const Svg_SaveClippingSectionsToNamedCPlanesSvg: string;

			export const Svg_SaveClippingSectionsToNamedCPlanesAutoDarkmodeSvg: string;

			export const Svg_SaveClippingSectionsToNamedViewsSvg: string;

			export const Svg_SaveClippingSectionsToNamedViewsAutoDarkmodeSvg: string;

			export const Svg_UpdateClippingSectionsSvg: string;

			export const Svg_UpdateClippingSectionsAutoDarkmodeSvg: string;

			export const UVEditorPinEdgesToCurveSvg: string;

			export const Svg_ClearAnalysisMeshesSvg: string;

			export const Svg_ClearAnalysisMeshesAutoDarkmodeSvg: string;

			export const Svg_MacroEditorSvg: string;

			export const Svg_MacroEditorAutoDarkmodeSvg: string;

			export const Svg_ReadCommandFileSvg: string;

			export const Svg_ReadCommandFileAutoDarkmodeSvg: string;

			export const Svg_InsertPointSvg: string;

			export const Svg_InsertPointAutoDarkmodeSvg: string;

			export const Svg_RaytracedViewportSvg: string;

			export const Svg_RaytracedViewportAutoDarkmodeSvg: string;

			export const LayerSubLayerSvg: string;

			export const LayerSubLayerGraySvg: string;

			export const LayerSubLayerAutoDarkmodeSvg: string;

			export const Svg_BakeMappingSvg: string;

			export const Svg_BlockFileExportWithOriginCopySvg: string;

			export const Svg_BlockMain1MainBlockDefinitionCopySvg: string;

			export const Svg_CreateUniqueBlockSvg: string;

			export const Svg_ResetSvg: string;

			export const Svg_ResetDarkmodeOLDSvg: string;

			export const Svg_DuplicateMeshHoleBoundarySvg: string;

			export const Svg_DuplicateMeshHoleBoundaryAutoDarkmodeSvg: string;

			export const Svg_FillMeshHoleSvg: string;

			export const Svg_FillMeshHoleAutoDarkmodeSvg: string;

			export const Svg_FlipMeshSvg: string;

			export const Svg_FlipMeshAutoDarkmodeSvg: string;

			export const Svg_MeshFromPointsSvg: string;

			export const Svg_MeshFromPointsAutoDarkmodeSvg: string;

			export const Svg_MeshIntersectSvg: string;

			export const Svg_MeshIntersectAutoDarkmodeSvg: string;

			export const Svg_QuadrangulateMeshSvg: string;

			export const Svg_QuadrangulateMeshAutoDarkmodeSvg: string;

			export const Svg_QuadRemeshDarkmodeSvg: string;

			export const Svg_SplitMeshEdgeSvg: string;

			export const Svg_SplitMeshEdgeAutoDarkmodeSvg: string;

			export const Svg_TriangulateMeshSvg: string;

			export const Svg_TriangulateMeshAutoDarkmodeSvg: string;

			export const Svg_MaterialPropertiesSvgSvg_MaterialPropertiesSvg: string;

			export const Svg_MaterialPropertiesAutoDarkmodeSvgSvg_MaterialPropertiesAutoDarkmodeSvg: string;

			export const Svg_ClosestPointsObjectsDarkmodeSvg: string;

			export const Svg_100mmCameraSvg: string;

			export const Svg_100mmCameraAutoDarkmodeSvg: string;

			export const Svg_17mmCameraSvg: string;

			export const Svg_17mmCameraAutoDarkmodeSvg: string;

			export const Svg_25mmCameraSvg: string;

			export const Svg_25mmCameraAutoDarkmodeSvg: string;

			export const Svg_50mmCameraSvg: string;

			export const Svg_50mmCameraAutoDarkmodeSvg: string;

			export const Svg_CustomCameraSvg: string;

			export const Svg_CustomCameraAutoDarkmodeSvg: string;

			export const Svg_UpdateLinkedBlocksAutoDarkmodeSvg: string;

			export const Svg_UpdateLinkedBlocksSvg: string;

			export const Svg_MaterialPanelMetallicVariesDarkmodeSvg: string;

			export const Svg_3DDigitizingCurveDrawingCurveInterpolatePointsAutoDarkmodeCopySvg: string;

			export const Svg_BooleanDifferenceSvg: string;

			export const Svg_BooleanDifferenceAutoDarkmodeSvg: string;

			export const Svg_BooleanIntersectionSvg: string;

			export const Svg_BooleanIntersectionAutoDarkmodeSvg: string;

			export const Svg_CurveStartSvg: string;

			export const Svg_CurveStartAutoDarkmodeSvg: string;

			export const Svg_MatchMeshEdgesSvg: string;

			export const Svg_MatchMeshEdgesAutoDarkmodeSvg: string;

			export const Svg_UnifyMeshNormalsSvg: string;

			export const Svg_UnifyMeshNormalsAutoDarkmodeSvg: string;

			export const Svg_ObjectManagerBlockInstance24x24Svg: string;

			export const Tabs_TabFileExplorerSvg: string;

			export const GearGraySvg: string;

			export const GearWhiteSvg: string;

			export const Svg_4fcd66e1C28142849733026e1697d17cSvg: string;

			export const Svg_4fcd66e1C28142849733026e1697d17cDarkSvg: string;

			export const Svg_db527ad82b6f4126911000cd1007a61aSvg: string;

			export const Svg_db527ad82b6f4126911000cd1007a61aDarkSvg: string;

			export const Svg_7ef95a19Cf834fdaA6fbC712a1a6ba27Svg: string;

			export const Svg_0511cedd39e24d6796997bbc874c1564Svg: string;

			export const Svg_SelSubDEdgesSvg: string;

			export const Svg_SettingsMacSelectionSvg: string;

			export const Svg_EditClipping2DDrawingsSvg: string;

			export const Svg_EditClipping2DDrawingsAutoDarkmodeSvg: string;

			export const SettingsMacAppearanceSvg: string;

			export const Svg_63ab5a76154c41b19fb89a05485657f2Svg: string;

			export const Svg_63ab5a76154c41b19fb89a05485657f2DarkSvg: string;

			export const Svg_921e9f55E7364cd09a87288e5415ce93Svg: string;

			export const Svg_ccc28cd281a94de4A41bC78d3f42ce10Svg: string;

			export const Svg_469163212ad6413cBa580011efda7652Svg: string;

			export const Svg_6a854d0e760e4a078e7aD907f221501aSvg: string;

			export const Svg_81104ecb31784262BbafF3624692bb4fSvg: string;

			export const Svg_7929590096354e459abfDdf2a0d2440fSvg: string;

			export const Svg_85e0b77d1fce44659fdaF940ae939901Svg: string;

			export const Svg_ba3da8bb649c4a6798e785ef19bafe55Svg: string;

			export const Svg_ba3da8bb649c4a6798e785ef19bafe55DarkSvg: string;

			export const Svg_propDecals16x16Svg: string;

			export const Svg_decalEditSvg: string;

			export const Svg_decalEditGraySvg: string;

			export const Svg_5449a14178ba4e2a87dc04c3b81e2a04Svg: string;

			export const Svg_ClearUndoDarkmodeSvg: string;

			export const Svg_CutDarkmodeSvg: string;

			export const Svg_RedoMultipleDarkmodeSvg: string;

			export const Svg_UndoCPlaneDarkmodeSvg: string;

			export const Svg_UndoMultipleDarkmodeSvg: string;

			export const Svg_UndoSelectedDarkmodeSvg: string;

			export const Svg_RedoMultipleSvg: string;

			export const Svg_RedoMultipleAutoDarkmodeSvg: string;

			export const Svg_UndoMultipleSvg: string;

			export const Svg_UndoMultipleAutoDarkmodeSvg: string;

			export const Svg_ClearUndoSvg: string;

			export const Svg_ClearUndoAutoDarkmodeSvg: string;

			export const Svg_CutSvg: string;

			export const Svg_CutAutoDarkmodeSvg: string;

			export const Svg_UndoCPlaneSvg: string;

			export const Svg_UndoCPlaneAutoDarkmodeSvg: string;

			export const Svg_UndoSelectedSvg: string;

			export const Svg_UndoSelectedAutoDarkmodeSvg: string;

			export const Svg_CreateSectionsInYSvg: string;

			export const Svg_CreateSectionsCustomSvg: string;

			export const Svg_CreateSectionsInCplaneSvg: string;

			export const Svg_CreateSectionsInCPlaneSvg: string;

			export const Svg_renderFinalPassSvg: string;

			export const Svg_renderPostEffectsNewSvg: string;

			export const Svg_renderToneMappingSvg: string;

			export const Svg_renderSetAsDocumentDefaultsSvg: string;

			export const Svg_renderSetAsDocumentDefaultsGraySvg: string;

			export const Svg_renderUseDocumentDefaultsSvg: string;

			export const Svg_renderUseDocumentDefaultsGraySvg: string;

			export const Svg_renderAlbedoSvg: string;

			export const Svg_renderAlbedoGraySvg: string;

			export const Svg_renderAlphaSvg: string;

			export const Svg_renderBlueSvg: string;

			export const Svg_renderCloneSvg: string;

			export const Svg_renderCloneGraySvg: string;

			export const Svg_renderCopySvg: string;

			export const Svg_renderCopyGraySvg: string;

			export const Svg_renderDistanceSvg: string;

			export const Svg_renderDistanceGraySvg: string;

			export const Svg_renderGreenSvg: string;

			export const Svg_renderNormalsSvg: string;

			export const Svg_renderNormalsGraySvg: string;

			export const Svg_renderPauseSvg: string;

			export const Svg_renderPauseGraySvg: string;

			export const Svg_renderPepsSvg: string;

			export const Svg_renderRedSvg: string;

			export const Svg_renderRgbSvg: string;

			export const Svg_renderRgbaSvg: string;

			export const Svg_renderSaveSvg: string;

			export const Svg_renderSaveGraySvg: string;

			export const Svg_renderStopSvg: string;

			export const Svg_renderStopGraySvg: string;

			export const Svg_ExtractClippingSlicesSvg: string;

			export const Svg_Clipping2dDrawingSvg: string;

			export const Svg_Clipping2dDrawingAutoDarkmodeSvg: string;

			export const Tabs_PanelLibrariesSettingsMacSvg: string;

			export const Svg_propDecalsSvg: string;

			export const Svg_FocalBlurTabSvg: string;

			export const Svg_TabTextureMappingSvg: string;

			export const Svg_tabSafeFrameSvg: string;

			export const Svg_tabAttributeUserTextSvg: string;

			export const Svg_SetSpotlightToViewSvg: string;

			export const Svg_SetSpotlightToViewAutoDarkmodeSvg: string;

			export const Svg_SetViewToSpotlightSvg: string;

			export const Svg_SetViewToSpotlightAutoDarkmodeSvg: string;

			export const Svg_ClippingSectionSvg: string;

			export const Svg_PropertiesCameraSvg: string;

			export const Svg_FileExplorerSvg: string;

			export const Svg_FileExplorerAutoDarkmodeSvg: string;

			export const Svg_LibrariesSvg: string;

			export const Svg_ScriptEditorSvg: string;

			export const Svg_UVEditorAddEdgeStraighteningConstraintGraySvg: string;

			export const Svg_UVEditorAddVertexPinningConstraintGraySvg: string;

			export const Svg_UVEditorPinEdgesToCurveGraySvg: string;

			export const Svg_UVEditorRemoveConstraintsGraySvg: string;

			export const Svg_RestoreWorkspaceGraySvg: string;

			export const Svg_updateWorkspaceGraySvg: string;

			export const Svg_OneAPISvg: string;

			export const Svg_CUDASvg: string;

			export const Svg_HIPSvg: string;

			export const Svg_CPUSvg: string;

			export const Svg_OPTIXSvg: string;

			export const Svg_NvidiaCUDAOptixSvg: string;

			export const Svg_CyclesViewportPropertiesSvg: string;

			export const Svg_CyclesMaterialSvg: string;

			export const Svg_AppleMetalLogoSvg: string;

			export const Svg_MaterialPanelCreateFromExistingTextureMaterialSvg: string;

			export const Svg_LightBulbVariesSvg: string;

			export const Svg_missingImagesBulkReplaceSvg: string;

			export const Svg_missingImagesCopySvg: string;

			export const Svg_missingImagesDeleteSvg: string;

			export const Svg_missingImagesEditSvg: string;

			export const Svg_missingImagesGatherSvg: string;

			export const Svg_missingImagesReplaceSvg: string;

			export const Svg_missingImagesSearchOnlineSvg: string;

			export const Svg_missingImagesSaveAsSvg: string;

			export const Svg_CenterMarkSvg: string;

			export const Svg_DimensionDraftingOrdinateDimensionDarkmodeSvg: string;

			export const Svg_PanelLinetypesSvg: string;

			export const Svg_RebuildUVAutoDarkmodeSvg: string;

			export const Svg_RebuildSurfaceAutoDarkmodeSvg: string;

			export const Svg_RebuildSurfaceSvg: string;

			export const Svg_RebuildEdgesAutoDarkmodeSvg: string;

			export const Svg_RebuildEdgesSvg: string;

			export const Svg_RebuildUVSvg: string;

			export const Svg_CircleAroundCurveDarkmodeSvg: string;

			export const Svg_CircleTangentTangentRadiusAutoDarkmodeSvg: string;

			export const Svg_CircleTangentTo3CurvesDarkmodeSvg: string;

			export const Svg_CircleVerticalCenterRadiusDarkmodeSvg: string;

			export const Svg_CircleVerticalDiameterDarkmodeSvg: string;

			export const Svg_LineVerticalDarkmodeSvg: string;

			export const Svg_CircleAroundCurveSvg: string;

			export const Svg_CircleTangentTangentRadiusDarkmodeSvg: string;

			export const Svg_CircleTangentTo3CurvesSvg: string;

			export const Svg_CircleTangentTangentRadiusSvg: string;

			export const Svg_CircleTangentTo3CurvesAutoDarkmodeSvg: string;

			export const Svg_CircleVerticalCenterRadiusSvg: string;

			export const Svg_CircleVerticalCenterRadiusAutoDarkmodeSvg: string;

			export const Svg_CircleVerticalDiameterAutoDarkmodeSvg: string;

			export const Svg_CircleVerticalDiameterSvg: string;

			export const Svg_CircleAroundCurveAutoDarkmodeSvg: string;

			export const Svg_LineVerticalSvg: string;

			export const Svg_LineVerticalAutoDarkmodeSvg: string;

			export const Svg_RectangleVerticalSvg: string;

			export const Svg_RectangleVerticalAutoDarkmodeSvg: string;

			export const Svg_RenderedViewportDarkmodeSvg: string;

			export const Svg_ShadedViewportAutoDarkmodeSvg: string;

			export const Svg_ShadedViewportDarkmodeSvg: string;

			export const Svg_ShadedViewportSvg: string;

			export const Svg_ShadedViewportSvgSvg_ShadedViewportSvg: string;

			export const Svg_RenderedViewportSvg: string;

			export const Svg_RenderedViewportSvgSvg_RenderedViewportSvg: string;

			export const Svg_LibrariesGridSvg: string;

			export const Svg_LibrariesListSvg: string;

			export const Svg_DisplayMonochromeSvg: string;

			export const Svg_SoftEditSurfaceDarkmodeSvg: string;

			export const Svg_MoveSoftEditCurveSvg: string;

			export const Svg_SoftEditCurveDarkmodeSvg: string;

			export const Svg_EnableClippingPlaneSvg: string;

			export const Svg_HideControlPointsSvg: string;

			export const Svg_InvertSelectionAndHideControlPointsDarkmodeSvg: string;

			export const Svg_PolygonCenterRadiusSvg: string;

			export const Svg_PolygonCenterRadiusAutoDarkmodeSvg: string;

			export const Svg_PolygonCircumscribedCenterRadiusSvg: string;

			export const Svg_PolygonCircumscribedCenterRadiusAutoDarkmodeSvg: string;

			export const Svg_PolygonEdgeSvg: string;

			export const Svg_PolygonEdgeAutoDarkmodeSvg: string;

			export const Svg_SquareCenterCornerSvg: string;

			export const Svg_SquareCenterCornerAutoDarkmodeSvg: string;

			export const Svg_SquareCircumscribedCenterRadiusSvg: string;

			export const Svg_SquareEdgeSvg: string;

			export const Svg_SquareEdgeAutoDarkmodeSvg: string;

			export const Svg_StarSvg: string;

			export const Svg_StarAutoDarkmodeSvg: string;

			export const Svg_EllipseByCornersSvg: string;

			export const Svg_EllipseByCornersAutoDarkmodeSvg: string;

			export const Svg_EllipseDeformableSvg: string;

			export const Svg_EllipseDiameterSvg: string;

			export const Svg_EllipseDiameterAutoDarkmodeSvg: string;

			export const Svg_EllipseFromCenterSvg: string;

			export const Svg_EllipseFromCenterAutoDarkmodeSvg: string;

			export const Svg_EllipseFromFociSvg: string;

			export const Svg_EllipseFromFociAutoDarkmodeSvg: string;

			export const Svg_AddGuideSvg: string;

			export const Svg_BlendCrvSvg: string;

			export const Svg_ChamferSvg: string;

			export const Svg_ChamferRepeatSvg: string;

			export const Svg_ChangeDegreeCurveSvg: string;

			export const Svg_CloseCrvSvg: string;

			export const Svg_ConicSvg: string;

			export const Svg_ConicTangentAtStartSvg: string;

			export const Svg_ContinueCurveSvg: string;

			export const Svg_Crv2ViewSvg: string;

			export const Svg_CrvSeamSvg: string;

			export const Svg_CullControlPolygonSvg: string;

			export const Svg_DeleteSubCrvSvg: string;

			export const Svg_EditPtOnSvg: string;

			export const Svg_EndBulgeCurveSvgSvg_EndBulgeCurveSvg: string;

			export const Svg_ExtractSubCrvSvg: string;

			export const Svg_FairSvg: string;

			export const Svg_FilletSvg: string;

			export const Svg_FilletCornersSvg: string;

			export const Svg_FilletRepeatSvg: string;

			export const Svg_FitCrvSvg: string;

			export const Svg_HandleCurveSvg: string;

			export const Svg_HBarSvg: string;

			export const Svg_HelixSvg: string;

			export const Svg_HelixVerticalSvg: string;

			export const Svg_HyperbolaSvg: string;

			export const Svg_InsertControlPointSvg: string;

			export const Svg_InsertKinkSvg: string;

			export const Svg_InsertKnotSvg: string;

			export const Svg_InterpCrvSvg: string;

			export const Svg_MakePeriodicSvg: string;

			export const Svg_MatchSvg: string;

			export const Svg_OffsetSvg: string;

			export const Svg_Parabola3PtSvg: string;

			export const Svg_ParabolaByFocusSvg: string;

			export const Svg_PointsOnSvg: string;

			export const Svg_PtOffSelectedSvg: string;

			export const Svg_RebuildCrvNonUniformSvg: string;

			export const Svg_RemoveControlPointSvg: string;

			export const Svg_RemoveKnotSvg: string;

			export const Svg_SimplifyCrvSvg: string;

			export const Svg_SketchSvg: string;

			export const Svg_SketchOnPolygonMeshSvg: string;

			export const Svg_SketchOnSurfaceSvg: string;

			export const Svg_SpiralSvg: string;

			export const Svg_WeightSvg: string;

			export const Svg_AddGuideSvgSvg_AddGuideSvg: string;

			export const Svg_DimCurveLengthSvg: string;

			export const Svg_DimensionDraftingHorizontalDimensionDarkmodeSvg: string;

			export const Svg_DimHorizontalSvg: string;

			export const Svg_DimensionDraftingRadialDimensionDarkmodeSvg: string;

			export const Svg_DimRadialSvg: string;

			export const Svg_DimensionDraftingOrdinateDimensionDarkmodeSvgSvg_DimensionDraftingOrdinateDimensionDarkmodeSvg: string;

			export const Svg_DimOrdinateSvg: string;

			export const Svg_DimensionDraftingLeaderDarkmodeSvg: string;

			export const Svg_LeaderSvg: string;

			export const Svg_DimAngleSvg: string;

			export const Svg_DimensionDraftingAngleDimensionDarkmodeSvg: string;

			export const Svg_ExtractLineTypeSegmentsSvg: string;

			export const Svg_DimRecenterTextSvg: string;

			export const Svg_DimRotatedSvg: string;

			export const Svg_DimRotatedContinuousSvg: string;

			export const Svg_DimVerticalSvg: string;

			export const Svg_LinetypeDisplaySvg: string;

			export const Svg_DimSvg: string;

			export const Svg_DimVerticalContinuousSvg: string;

			export const Svg_DupAnnotationStyleSvg: string;

			export const Svg_PrintDisplaySvg: string;

			export const Svg_RevCloudCurveSvg: string;

			export const Svg_SetCurrentAnnotationStyleSvg: string;

			export const Svg_TextSvg: string;

			export const Svg_TextSingleLineSvg: string;

			export const Svg_ClosestPointsObjectsSvgSvg_ClosestPointsObjectsSvg: string;

			export const Svg_CommandHistorySvg: string;

			export const Svg_DimCreaseAngleSvg: string;

			export const Svg_DimAlignedSvg: string;

			export const Svg_DimAlignedContinuousSvg: string;

			export const Svg_DimDiameterSvg: string;

			export const Svg_ArcStartEndRadiusSvg: string;

			export const Svg_ArcsThroughPointsSvg: string;

			export const Svg_ArcStartEndDirectionAtStartSvg: string;

			export const Svg_ArcStartEndPointOnArcSvg: string;

			export const Svg_ArcTangentToCurvesSvg: string;

			export const Svg_ConvertCurveToArcsSvg: string;

			export const Svg_ArcCenterStartAngleSvg: string;

			export const Svg_PlaceTargetSvg: string;

			export const Svg_RotateViewSvg: string;

			export const Svg_TurntableSvg: string;

			export const Svg_Zoom1To1SvgSvg_Zoom1To1Svg: string;

			export const Svg_ZoomDynamicSvgSvg_ZoomDynamicSvg: string;

			export const Svg_ZoomSelectedSvgSvg_ZoomSelectedSvg: string;

			export const Svg_AngleSvg: string;

			export const Svg_CheckSvg: string;

			export const Svg_CurveDeviationSvg: string;

			export const Svg_DistanceSvg: string;

			export const Svg_EvaluatePtSvg: string;

			export const Svg_GConSvg: string;

			export const Svg_ShowEndsSvg: string;

			export const Svg_DigCalibrateSvg: string;

			export const Svg_DigitizeSvg: string;

			export const Svg_DigScaleSvg: string;

			export const Svg_DigSectionSvg: string;

			export const Svg_PointsSvg: string;

			export const Svg_AreaCentroidSvg: string;

			export const Svg_DigLineSvg: string;

			export const Svg_EdgeContinuitySvg: string;

			export const Svg_InvertSelectionAndHideControlPointsSvg: string;

			export const Svg_SelDimRadialSvg: string;

			export const Svg_ArcCurveDrawingArcTangentToCurvesDarkmodeSvg: string;

			export const Svg_ArcThroughPointsSvg: string;

			export const Svg_ArrowheadSvg: string;

			export const Svg_ArrowheadAutoDarkmodeSvg: string;

			export const Svg_ConvertDotsSvg: string;

			export const Svg_SetFlythroughAnimationSvg: string;

			export const Svg_SetFlythroughAnimationAutoDarkmodeSvg: string;

			export const Svg_SetOneDaySunAnimationSvg: string;

			export const Svg_SetOneDaySunAnimationAutoDarkmodeSvg: string;

			export const Svg_SetPathAnimationSvg: string;

			export const Svg_SetSeasonalSunAnimationSvg: string;

			export const Svg_SetTurnTableAnimationSvg: string;

			export const Svg_SetTurnTableAnimationAutoDarkmodeSvg: string;

			export const Svg_LineAngledFromMidpointSvg: string;

			export const Svg_LineAngledFromMidpointAutoDarkmodeSvg: string;

			export const Svg_ZoomNakedAllSvg: string;

			export const Svg_ZoomNakedAllAutoDarkmodeSvg: string;

			export const Svg_ZoomNakedNextSvg: string;

			export const Svg_ZoomNakedNextAutoDarkmodeSvg: string;

			export const Svg_ZoomNakedPreviousSvg: string;

			export const Svg_ZoomNakedPreviousAutoDarkmodeSvg: string;

			export const Svg_ArrayPolarSvg: string;

			export const Svg_CPlane3PointSvg: string;

			export const Svg_CPlane3PointSvgSvg_CPlane3PointSvg: string;

			export const Svg_CPlaneCurveSvg: string;

			export const Svg_CPlaneCurveAutoDarkmodeSvg: string;

			export const Svg_CPlaneElevationSvg: string;

			export const Svg_CPlaneElevationAutoDarkmodeSvg: string;

			export const Svg_CPlaneRotateSvg: string;

			export const Svg_CPlaneRotateAutoDarkmodeSvg: string;

			export const Svg_CPlaneSurfaceSvg: string;

			export const Svg_CPlaneSurfaceAutoDarkmodeSvg: string;

			export const Svg_CPlaneWorldBackSvg: string;

			export const Svg_CPlaneWorldBackAutoDarkmodeSvg: string;

			export const Svg_CPlaneXSvg: string;

			export const Svg_CPlaneZSvg: string;

			export const Svg_LineBisectorSvg: string;

			export const Svg_CPlane3PointsDarkmodeSvg: string;

			export const Svg_CPlaneOriginSvg: string;

			export const Svg_BlockEditSvg: string;

			export const Svg_BlockEditAutoDarkmodeSvg: string;

			export const Svg_BlockManagerSvg: string;

			export const Svg_BlockManagerAutoDarkmodeSvg: string;

			export const Svg_UPlaneModeSvg: string;

			export const Svg_UPlaneModeAutoDarkmodeSvg: string;

			export const Svg_Circle3PointsSvg: string;

			export const Svg_Circle3PointsAutoDarkmodeSvg: string;

			export const Svg_CircleDeformableSvg: string;

			export const Svg_CircleDeformableAutoDarkmodeSvg: string;

			export const Svg_CircleDiameterSvg: string;

			export const Svg_CircleDiameterAutoDarkmodeSvg: string;

			export const Svg_CircleFitPointsSvg: string;

			export const Svg_CircleFitPointsAutoDarkmodeSvg: string;

			export const Svg_IntersectTwoSetsSvg: string;

			export const Svg_IntersectTwoSetsAutoDarkmodeSvg: string;

			export const Svg_ListSvg: string;

			export const Svg_ListAutoDarkmodeSvg: string;

			export const Svg_MoveExtractedIsocurveSvg: string;

			export const Svg_MoveExtractedIsocurveAutoDarkmodeSvg: string;

			export const Svg_PointCloudSvg: string;

			export const Svg_PointCloudAutoDarkmodeSvg: string;

			export const Svg_SystemInfoSvg: string;

			export const Svg_SystemInfoAutoDarkmodeSvg: string;

			export const Svg_AuditSvg: string;

			export const Svg_AuditAutoDarkmodeSvg: string;

			export const Svg_ExtractBadSrfSvg: string;

			export const Svg_ExtractBadSrfAutoDarkmodeSvg: string;

			export const Svg_ExtractPtSvg: string;

			export const Svg_ExtractPtAutoDarkmodeSvg: string;

			export const Svg_LineThroughPtSvg: string;

			export const Svg_LineThroughPtAutoDarkmodeSvg: string;

			export const Svg_LineAngledSvg: string;

			export const Svg_LineAngledAutoDarkmodeSvg: string;

			export const Svg_LineBothSidesSvg: string;

			export const Svg_LineBothSidesAutoDarkmodeSvg: string;

			export const Svg_LineFourPointSvg: string;

			export const Svg_LineFourPointAutoDarkmodeSvg: string;

			export const Svg_LineFourPointBothSidesSvg: string;

			export const Svg_LineFourPointBothSidesAutoDarkmodeSvg: string;

			export const Svg_LineNormalSvg: string;

			export const Svg_LineNormalAutoDarkmodeSvg: string;

			export const Svg_ParabolaSvg: string;

			export const Svg_ParabolaAutoDarkmodeSvg: string;

			export const Svg_PolylineSvg: string;

			export const Svg_PolylineAutoDarkmodeSvg: string;

			export const Svg_PolylineDarkmodeAutoDarkmodeSvg: string;

			export const Svg_SpiralAutoDarkmodeSvg: string;

			export const Svg_ReduceMeshSvg: string;

			export const Svg_ReduceMeshAutoDarkmodeSvg: string;

			export const Svg_LineSvg: string;

			export const Svg_ArcBlendSvg: string;

			export const Svg_ArcBlendAutoDarkmodeSvg: string;

			export const Svg_CrvEndSvg: string;

			export const Svg_CrvEndAutoDarkmodeSvg: string;

			export const Svg_InsertLineIntoCrvSvg: string;

			export const Svg_InsertLineIntoCrvAutoDarkmodeSvg: string;

			export const Svg_OffsetCrvOnSrfSvg: string;

			export const Svg_OffsetCrvOnSrfAutoDarkmodeSvg: string;

			export const Svg_PolylineThroughPointsSvg: string;

			export const Svg_PolylineThroughPointsSvgDarkmodeSvg: string;

			export const Svg_RebuildCurveSvg: string;

			export const Svg_RebuildCurveAutoDarkmodeSvg: string;

			export const Svg_RemoveGuideSvg: string;

			export const Svg_RemoveGuideAutoDarkmodeSvg: string;

			export const Svg_RemoveMultiKnotSvg: string;

			export const Svg_RemoveMultiKnotAutoDarkmodeSvg: string;

			export const Svg_SubCrvSvg: string;

			export const Svg_SubCrvAutoDarkmodeSvg: string;

			export const Svg_LinesPolylineThroughPointsDarkmodeSvg: string;

			export const Svg_PolylineOnMeshSvg: string;

			export const Svg_PolylineOnMeshAutoDarkmodeSvg: string;

			export const Svg_SettingsMacUnitsSvg: string;

			export const Svg_EllipsoidAroundCurveSvg: string;

			export const Svg_EllipsoidByCornersSvg: string;

			export const Svg_EllipsoidDiameterSvg: string;

			export const Svg_ExtendByArcKeepRadiusSvg: string;

			export const Svg_ExtendByArcToPointSvg: string;

			export const Svg_ExtendByArcWithCenterSvg: string;

			export const Svg_ExtendByLineSvg: string;

			export const Svg_ExtendCurveOnSurfaceSvg: string;

			export const Svg_ExtendSmoothSvg: string;

			export const Svg_ConnectSvg: string;

			export const Svg_ExtendCurveToBoundarySvg: string;

			export const Svg_ExtractMeshFacesByAreaSvg: string;

			export const Svg_ExtractMeshFacesByAspectRatioSvg: string;

			export const Svg_ExtractMeshFacesByDraftAngleSvg: string;

			export const Svg_ExtractMeshFacesByEdgeLengthSvg: string;

			export const Svg_ExtractMeshPartSvg: string;

			export const Svg_SubDCreaseSvg: string;

			export const Svg_SubDCreaseDarkmodeSvg: string;

			export const Svg_SubDCreaseSvgSvg_SubDCreaseSvg: string;

			export const Svg_AutoSaveSvg: string;

			export const Svg_ExportBitmapsSvg: string;

			export const Svg_IncrementalSaveSvg: string;

			export const Svg_InvertHideSvg: string;

			export const Svg_NotesSvg: string;

			export const Svg_SaveAsSvg: string;

			export const Svg_SaveAsTemplateSvg: string;

			export const Svg_SaveSmallSvg: string;

			export const Svg_SaveDarkmodeSvg: string;

			export const Svg_SaveSvg: string;

			export const Svg_ArrayHoleSvg: string;

			export const Svg_SelBadObjectsSvg: string;

			export const Svg_SelChildrenSvg: string;

			export const Svg_SelObjectsWithHistorySvg: string;

			export const Svg_SelParentsSvg: string;

			export const Svg_WebBrowserSvg: string;

			export const Svg_WebBrowserHideSvg: string;

			export const Svg_AddToGroupSvg: string;

			export const Svg_RemoveFromGroupSvg: string;

			export const Svg_SetGroupNameSvg: string;

			export const Svg_UngroupAllSvg: string;

			export const Svg_GumballAlignmentCPlaneSvg: string;

			export const Svg_GrasshopperSvg: string;

			export const Svg_GumballAlignmentObjectSvg: string;

			export const Svg_GumballAlignmentWorldSvg: string;

			export const Svg_GumballAutoresetSvg: string;

			export const Svg_GumballRelocateSvg: string;

			export const Svg_ChangeObjectLayerSvg: string;

			export const Svg_ChangeToCurrentLayerSvg: string;

			export const Svg_CopyObjectsToLayerSvg: string;

			export const Svg_DupLayerSvg: string;

			export const Svg_LayerbookNextSvg: string;

			export const Svg_LayerbookPrepareToSaveSvg: string;

			export const Svg_LayerbookPreviousSvg: string;

			export const Svg_LayerCurrentSvg: string;

			export const Svg_renderPepsGraySvg: string;

			export const Svg_ChangeSpaceSvg: string;

			export const Svg_CopyLayoutSvgSvg_CopyLayoutSvg: string;

			export const Svg_ImportLayoutSvg: string;

			export const Svg_HyperbolaFromFociSvg: string;

			export const Svg_HyperbolaFromFociiSvg: string;

			export const Svg_HyperbolaFromFociDarkmodeSvg: string;

			export const Svg_DimAnglePointsSvg: string;

			export const Svg_HyperbolaFromFociSvgSvg_HyperbolaFromFociSvg: string;

			export const Svg_renderStartSvg: string;

			export const Svg_IsolateLockDarkmodeSvg: string;

			export const Svg_PointsOffSvg: string;

			export const Svg_PointsOffAutoDarkmodeSvg: string;

			export const Svg_Rectangle3PointsSvg: string;

			export const Svg_RectangleCenterCornerSvg: string;

			export const Svg_RectangleCenterCornerAutoDarkmodeSvg: string;

			export const Svg_RectangleRoundedSvg: string;

			export const Svg_RectangleRoundedConicSvg: string;

			export const Svg_RectangleRoundedConicAutoDarkmodeSvg: string;

			export const Svg_SplitSvg: string;

			export const Svg_TrimSvg: string;

			export const Svg_UnlockSelectedSvg: string;

			export const Svg_UnlockSelectedDarkmodeSvg: string;

			export const Svg_UnlockSelectedAutoDarkmodeSvg: string;

			export const Svg_IsolateLockSvg: string;

			export const Svg_IsolateLockSvgSvg_IsolateLockSvg: string;

			export const Svg_ExportLinkedBlocksSvg: string;

			export const Svg_3DFaceMeshSvg: string;

			export const Svg_3DFaceMeshAppendSvg: string;

			export const Svg_AlignVerticesSvg: string;

			export const Svg_ApplyMeshSvg: string;

			export const Svg_AreaMomentsSvg: string;

			export const Svg_DeleteMeshNgonsSvg: string;

			export const Svg_DupMeshHoleBoundarySvg: string;

			export const Svg_ExtrudeMeshSvg: string;

			export const Svg_HydrostaticsSvg: string;

			export const Svg_MatchMeshEdgeSvg: string;

			export const Svg_MeshBoxSvg: string;

			export const Svg_MeshConeSvg: string;

			export const Svg_MeshCylinderSvg: string;

			export const Svg_MeshEllipsoidSvg: string;

			export const Svg_MeshFromLinesSvg: string;

			export const Svg_MeshPatchSvg: string;

			export const Svg_MeshRepairSvg: string;

			export const Svg_MeshSphereSvg: string;

			export const Svg_MeshSplitSvg: string;

			export const Svg_MeshTorusSvg: string;

			export const Svg_MeshTrimSvg: string;

			export const Svg_PatchSingleFaceSvg: string;

			export const Svg_RebuildMeshNormalsSvg: string;

			export const Svg_S3DFaceMeshDarkmodeSvg: string;

			export const Svg_SelMeshSvg: string;

			export const Svg_SplitDisjointMeshSvg: string;

			export const Svg_StitchSvg: string;

			export const Svg_SwapMeshEdgeSvg: string;

			export const Svg_VolumeSvg: string;

			export const Svg_VolumeCentroidSvg: string;

			export const Svg_VolumeMomentsSvg: string;

			export const SVGEditorLayerStackSvg: string;

			export const SVGEditorTextSvg: string;

			export const Svg_PrintPageBackwardsSvg: string;

			export const Svg_PrintPageBackwardsSkipSvg: string;

			export const Svg_PrintPageForwardSvg: string;

			export const Svg_PrintPageForwardSkipSvg: string;

			export const Svg_AddSnapToSubDObjectDarkmodeSvg: string;

			export const Svg_SnapToSubDObjectSvg: string;

			export const Svg_SnapToMeshObjectSvg: string;

			export const Svg_MeshPolylineSvg: string;

			export const Svg_FixedLengthCrvEditSvg: string;

			export const Svg_MoveCrvDarkmodeSvg: string;

			export const Svg_MoveCrvSvg: string;

			export const Svg_CenterSnapSvg: string;

			export const Svg_ObjectSnapCenterDarkmodeSvg: string;

			export const Svg_EndSnapSvg: string;

			export const Svg_IntersectionSnapSvg: string;

			export const Svg_ObjectSnapOsnapObjectSnapOsnapAlongLineSvg: string;

			export const Svg_OsnapAlongLineSvg: string;

			export const Svg_OSnapAlongParallelDarkmodeSvg: string;

			export const Svg_OsnapSmartTrackingOffSvg: string;

			export const Svg_OSnapAlongParallelSvg: string;

			export const Svg_OsnapBetweenSvg: string;

			export const Svg_OSnapKnotSvg: string;

			export const Svg_OsnapMidpointSvg: string;

			export const Svg_OSnapNearSvg: string;

			export const Svg_OSnapOnCurveSvg: string;

			export const Svg_OSnapOnPOlySurfaceSvg: string;

			export const Svg_OSnapOnSurfaceSvg: string;

			export const Svg_OsnapPointSnapSvg: string;

			export const Svg_OSnapVertexSvg: string;

			export const Svg_OsnapPerpendicularFromSvg: string;

			export const Svg_OsnapPerpendicularToSvg: string;

			export const Svg_OsnapQuadrantSvg: string;

			export const Svg_OsnapShowOsnapToolbarSvg: string;

			export const Svg_OsnapSnapToLockedToggleSvg: string;

			export const Svg_OsnapTangentFromSvg: string;

			export const Svg_OsnapTangentToSvg: string;

			export const Svg_LassoPointsSvg: string;

			export const Svg_InfinitePlaneSvg: string;

			export const Svg_CutPlaneSvg: string;

			export const Svg_PictureSvg: string;

			export const Svg_ClosestPtSvg: string;

			export const Svg_PointCloudAddSvg: string;

			export const Svg_pencilGraySvg: string;

			export const Svg_pencilSvg: string;

			export const Svg_contentInUseSvg: string;

			export const Svg_contentInUseSelectedSvg: string;

			export const Svg_ApplyEdgeSofteningSvg: string;

			export const Svg_SelPlanarCrvSvg: string;

			export const Svg_SelClosedCrvSvg: string;

			export const Svg_SelectSubCrvSvg: string;

			export const Svg_SelLineSvg: string;

			export const Svg_SelLineTypeSvg: string;

			export const Svg_SelOpenCrvSvg: string;

			export const Svg_SelPolylineSvg: string;

			export const Svg_SelSelfIntersectingCrvSvg: string;

			export const Svg_SelShortCrvSvg: string;

			export const Svg_Scale1DSvg: string;

			export const Svg_Scale2DSvg: string;

			export const Svg_ScaleByPlaneSvg: string;

			export const Svg_CageSelControlsSvg: string;

			export const Svg_SelectInvertSvg: string;

			export const Svg_SelFenceSvg: string;

			export const Svg_SelKeySvg: string;

			export const Svg_SelVolumeObjectSvg: string;

			export const Svg_SelBlockInstanceSvg: string;

			export const Svg_SelBoxSvg: string;

			export const Svg_SelBrushSvg: string;

			export const Svg_SelCircularSvg: string;

			export const Svg_SelColorSvg: string;

			export const Svg_SelGroupSvg: string;

			export const Svg_SelIDSvg: string;

			export const Svg_SelLayerSvg: string;

			export const Svg_SelNameSvg: string;

			export const Svg_SelChainSvg: string;

			export const Svg_SelDimSvg: string;

			export const Svg_SelDotSvg: string;

			export const Svg_SelDupSvg: string;

			export const Svg_SelHatchSvg: string;

			export const Svg_SelVolumeSphereSvg: string;

			export const Svg_SelectSelLastSvg: string;

			export const Svg_SelLightSvg: string;

			export const Svg_SelNoneSvg: string;

			export const Svg_SelNonManifoldSvg: string;

			export const Svg_SelPtCloudSvg: string;

			export const Svg_SelectionFilterSvg: string;

			export const Svg_SelectPreviousSelectionSvg: string;

			export const Svg_SelPtSvg: string;

			export const Svg_SelAllSvg: string;

			export const Svg_SelectAllSvgSvg_SelectAllSvg: string;

			export const Svg_SelVisibleSvg: string;

			export const Svg_SelControlPointSvg: string;

			export const Svg_SelectConnectedPointsSvg: string;

			export const Svg_SelectControlPointRegionSvg: string;

			export const Svg_SelectClosedPolysurfacesSvg: string;

			export const Svg_SelectExtrusionsSvg: string;

			export const Svg_SelectOpenPolysurfacesSvg: string;

			export const Svg_SelectPicturesSvg: string;

			export const Svg_SelectClosedSurfacesSvg: string;

			export const Svg_SelectOpenSurfacesSvg: string;

			export const Svg_SelectPlanarSurfacesSvg: string;

			export const Svg_SelectTrimmedSurfacesSvg: string;

			export const Svg_SelectUntrimmedSurfacesSvg: string;

			export const Svg_SolidToolsRoundHoleSvg: string;

			export const Svg_MoveFaceSvg: string;

			export const Svg_ExtrudeFaceSvg: string;

			export const Svg_ExtrudeFaceAlongPathSvg: string;

			export const Svg_MergeCoplanarFacesSvg: string;

			export const Svg_MoveFaceToABoundarySvg: string;

			export const Svg_Sphere3PointsSvg: string;

			export const Svg_Sphere4PointsSvg: string;

			export const Svg_SphereFromCircleTangentToCurvesSvg: string;

			export const Svg_SelectUnweldedMeshEdgePointsSvg: string;

			export const Svg_StepSizeCustomStepsSvg: string;

			export const Svg_StepSizeLargeStepsSvg: string;

			export const Svg_RemovNakedMicroEdgesSvg: string;

			export const Svg_RemoveNakedMicroEdgesSvg: string;

			export const Svg_FilletSurfaceSvg: string;

			export const Svg_PointSetDeviationSvg: string;

			export const Svg_SelWindowSvg: string;

			export const Svg_SubDBoxSvg: string;

			export const Svg_SubDConeSvg: string;

			export const Svg_SubDCylinderSvg: string;

			export const Svg_InsetSvg: string;

			export const Svg_SurfaceCreationDevLoftSvg: string;

			export const Svg_SurfaceFromPlanarCurvesSvg: string;

			export const Svg_SurfacePatchSvg: string;

			export const Svg_SurfaceFrom23Or4EdgeCurvesSvg: string;

			export const Svg_SurfaceFromNetworkOfCurvesSvg: string;

			export const Svg_ChamferSurfaceSvg: string;

			export const Svg_DivideAlongCreasesSvg: string;

			export const Svg_HistorySettingsDarkmodeCopySvg: string;

			export const Svg_BendSvg: string;

			export const Svg_MirrorSvg: string;

			export const Svg_SmoothSvg: string;

			export const Svg_TransformMirrorDarkmodeSvg: string;

			export const Svg_OrientSvg: string;

			export const Svg_ScalePositionsSvg: string;

			export const Svg_OneViewSvg: string;

			export const Svg_MaximizeRestoreViewportSvg: string;

			export const Svg_SplitViewportHorizontallySvg: string;

			export const Svg_SplitViewportVerticallySvg: string;

			export const Svg_ToggleViewportTabsDarkmodeSvg: string;

			export const Svg_ToggleViewportTabsSvg: string;

			export const Svg_ViewportTabControlsDarkmodeSvg: string;

			export const Svg_ViewportTabControlsSvg: string;

			export const Svg_DisplayClippingPlaneSvg: string;

			export const Svg_HideOffSvg: string;

			export const Svg_HideShowVariesSvg: string;

			export const Svg_HideClustersASvg: string;

			export const Svg_HideClustersBSvg: string;

			export const Svg_HideClustersCSvg: string;

			export const Svg_3DDigitizingDarkmodeSvg: string;

			export const Svg_vSvg: string;

			export const Svg_CurveFromObjectCurveToolsMain1ProjectCurvesAutoDarkmodeSvgSvg_CurveFromObjectCurveToolsMain1ProjectCurvesAutoDarkmodeSvg: string;

			export const Svg_CurveFromObjectCurveToolsMain1ProjectCurvesSvg: string;

			export const Svg_EllipseAroundCurveSvg: string;

			export const Svg_DisplayArtisticDisplayDarkmodeSvg: string;

			export const Svg_EdgeToolsMergeEdgesSvg: string;

			export const Svg_EdgeToolsSplitEdgeSvg: string;

			export const Svg_GeometryFixStandardRedoDarkmodeSvg: string;

			export const Svg_GeometryFixStandardRedoSvg: string;

			export const Svg_TextObjectDarkmodeSvg: string;

			export const Svg_TextObjectSvg: string;

			export const Svg_RotateSvg: string;

			export const Svg_MeshBooleanSplitDarkmodeSvg: string;

			export const Svg_MeshBooleanSplitSvg: string;

			export const Svg_ViewportLayoutGridDisplayOffDarkmodeSvg: string;

			export const Svg_VisibilityIsolateObjectsDarkmodeSvg: string;

			export const Svg_VisibilityIsolateObjectsSvg: string;

			export const Svg_VisibilityUnisolateLockAdarkmodeSvg: string;

			export const Svg_VisibilityUnisolateLockDarkmodeSvg: string;

			export const Svg_VisibilityUnisolateLockSvg: string;
		}
	}

	export namespace Rhino.Ui.Internal.DockBars {
		export class DragStrengthPanel {
			constructor();

			static readonly DockBarId: string;

			PanelShown(
				documentSerialNumber: number,
				reason: Rhino.UI.ShowPanelReason,
			): void;

			PanelHidden(
				documentSerialNumber: number,
				reason: Rhino.UI.ShowPanelReason,
			): void;

			PanelClosing(
				documentSerialNumber: number,
				onCloseDocument: boolean,
			): void;
		}
	}

	export namespace Rhino.Ui.Internal.DockBars {
		export class DragStrengthViewModel {
			constructor();

			Strength: number;

			ModelUnitSystem: Rhino.UnitSystem;

			PageUnitSystem: Rhino.UnitSystem;

			ModelDistanceDisplayMode: Rhino.UI.DistanceDisplayMode;

			PageDistanceDisplayMode: Rhino.UI.DistanceDisplayMode;

			ModelDistanceDisplayPrecision: number;

			PageDistanceDisplayPrecision: number;

			OnLeft(): void;

			OnRight(): void;

			OkToClose(parent: unknown): boolean;

			UnitsDistanceDisplayAndPrecisionFromDoc(doc: Rhino.RhinoDoc): void;

			UnitsAndDistanceDisplayFromDoc(doc: Rhino.RhinoDoc): void;

			DistanceDisplayPrecisionFromDoc(doc: Rhino.RhinoDoc): void;
		}
	}

	export namespace Rhino.UI {
		export namespace EtoExtensions {
			export function ToEto(
				font: Rhino.DocObjects.Font,
				size: number,
				decoration?: Eto.Drawing.FontDecoration,
			): Eto.Drawing.Font;

			export function ToEto(font: Rhino.DocObjects.Font): Eto.Drawing.FontTypeface;

			export function ToEto(
				familyName: string,
				faceName: string,
				size: number,
			): Eto.Drawing.Font;

			export function ToEto(font: unknown): Eto.Drawing.Font;

			export function LocalizeAndRestore(
				window: Eto.Forms.Window,
				type?: unknown,
			): void;

			export function SavePosition(
				window: Eto.Forms.Window,
				type?: unknown,
			): void;

			export function RestorePosition(
				window: Eto.Forms.Window,
				type?: unknown,
			): boolean;

			export function ShowSemiModal<T>(
				dialog: Eto.Forms.Dialog$1<T>,
				doc: Rhino.RhinoDoc,
				parent: Eto.Forms.Control,
			): T;

			export function ShowSemiModal(
				dialog: Eto.Forms.Dialog,
				doc: Rhino.RhinoDoc,
				parent: Eto.Forms.Control,
			): void;

			export function PushPickButton(
				panel: Eto.Forms.Panel,
				pickFunction: unknown,
			): void;

			export function PushPickButton(
				window: Eto.Forms.Window,
				pickFunction: unknown,
			): void;

			export function ToEto(bmp: unknown): Eto.Drawing.Bitmap;

			export function ToEto(
				icon: unknown,
				useMainWindowPixelSize?: boolean,
			): Eto.Drawing.Icon;

			export function ToEto(color: unknown): Eto.Drawing.Color;

			export function ToSystemDrawing(color: Eto.Drawing.Color): unknown;

			export function ToEto(color: Rhino.Display.Color4f): Eto.Drawing.Color;

			export function ToColor4f(color: Eto.Drawing.Color): Rhino.Display.Color4f;

			export function ToEtoScreen(
				point: unknown,
				screen?: Eto.Forms.Screen,
			): Eto.Drawing.PointF;

			export function ToEtoScreen(
				rect: unknown,
				screen?: Eto.Forms.Screen,
			): Eto.Drawing.RectangleF;

			export function ToSystemDrawingScreen(
				point: Eto.Drawing.PointF,
				screen?: Eto.Forms.Screen,
			): unknown;

			export function ToSystemDrawingScreen(
				point: Eto.Drawing.Point,
				screen?: Eto.Forms.Screen,
			): unknown;

			export function ToSystemDrawingScreen(
				rect: Eto.Drawing.RectangleF,
				screen?: Eto.Forms.Screen,
			): unknown;

			export function ToSystemDrawingScreen(
				rect: Eto.Drawing.Rectangle,
				screen?: Eto.Forms.Screen,
			): unknown;

			export function ToEto(
				image: unknown,
				useMainWindowPixelSize: boolean,
			): Eto.Drawing.Image;

			export function Show(
				form: Eto.Forms.Form,
				doc: Rhino.RhinoDoc,
			): void;

			export function GetRhinoDoc(form: Eto.Forms.Form): Rhino.RhinoDoc;

			export function WindowsFromDocument<TClassType>(doc: Rhino.RhinoDoc): Iterable<TClassType>;

			export function UseRhinoStyle(control: Eto.Forms.Control): void;
		}
	}

	export namespace Rhino.DocObjects {
		/** Extension methods from {@link Rhino.UI.EtoExtensions} */
		export interface Font {
			ToEto(
				size: number,
				decoration?: Eto.Drawing.FontDecoration,
			): Eto.Drawing.Font;

			ToEto(): Eto.Drawing.FontTypeface;
		}
	}

	export namespace System.Drawing {
		/** Extension methods from {@link Rhino.UI.EtoExtensions} */
		export interface Font {
			ToEto(): Eto.Drawing.Font;
		}
	}

	export namespace Eto.Forms {
		/** Extension methods from {@link Rhino.UI.EtoExtensions} */
		export interface Window {
			LocalizeAndRestore(type?: unknown): void;

			SavePosition(type?: unknown): void;

			RestorePosition(type?: unknown): boolean;

			PushPickButton(pickFunction: unknown): void;
		}
	}

	export namespace Eto.Forms {
		/** Extension methods from {@link Rhino.UI.EtoExtensions} */
		export interface Dialog {
			ShowSemiModal(
				doc: Rhino.RhinoDoc,
				parent: Eto.Forms.Control,
			): void;
		}
	}

	export namespace Eto.Forms {
		/** Extension methods from {@link Rhino.UI.EtoExtensions} */
		export interface Panel {
			PushPickButton(pickFunction: unknown): void;
		}
	}

	export namespace System.Drawing {
		/** Extension methods from {@link Rhino.UI.EtoExtensions} */
		export interface Bitmap {
			ToEto(): Eto.Drawing.Bitmap;

			ToEto(useMainWindowPixelSize: boolean): Eto.Drawing.Image;
		}
	}

	export namespace System.Drawing {
		/** Extension methods from {@link Rhino.UI.EtoExtensions} */
		export interface Icon {
			ToEto(useMainWindowPixelSize?: boolean): Eto.Drawing.Icon;
		}
	}

	export namespace Eto.Forms {
		/** Extension methods from {@link Rhino.UI.EtoExtensions} */
		export interface Form {
			Show(doc: Rhino.RhinoDoc): void;

			GetRhinoDoc(): Rhino.RhinoDoc;
		}
	}

	export namespace Eto.Forms {
		/** Extension methods from {@link Rhino.UI.EtoExtensions} */
		export interface Control {
			UseRhinoStyle(): void;
		}
	}

	export namespace Rhino.UI {
		export namespace ImageResources {
			export function SvgResourceFromId(resourceId: string): [string, string];

			export function SvgFromResourceId(
				fullPathToResource: string,
				assembly: unknown,
			): string;

			export function SvgFromResourceId(
				resourceId: string,
				darkMode: boolean,
			): string;

			export function CreateBitmap(
				resourceId: string,
				width: number,
				height: number,
				adjustForDarkMode: boolean,
			): unknown;

			export function CreateBitmap(
				resourceId: string,
				width: number,
				height: number,
				adjustForDarkMode: boolean,
				forceDarkMode: boolean,
			): unknown;

			export function CreateEtoIcon(
				fullPathToResource: string,
				assembly: unknown,
				width: number,
				height: number,
				adjustForDarkMode: boolean,
			): Eto.Drawing.Icon;

			export function CreateEtoIcon(
				svgContents: string,
				width: number,
				height: number,
				adjustForDarkMode: boolean,
			): Eto.Drawing.Icon;

			export function CreateEtoIcon(
				resourceId: string,
				width: number,
				height: number,
				adjustForDarkMode: boolean,
			): Eto.Drawing.Icon;

			export function CreateEtoBitmap(
				fullPathToResource: string,
				assembly: unknown,
				width: number,
				height: number,
				adjustForDarkMode: boolean,
			): Eto.Drawing.Bitmap;

			export function CreateEtoBitmap(
				resourceId: string,
				width: number,
				height: number,
				adjustForDarkMode: boolean,
			): Eto.Drawing.Bitmap;

			export function CreateEtoBitmap(
				svgContent: string,
				width: number,
				height: number,
				adjustForDarkMode: boolean,
			): Eto.Drawing.Bitmap;
		}
	}

	export namespace Rhino.UI {
		export namespace RhinoEtoApp {
			export const MainWindow: Eto.Forms.Window;

			export const MainWindowForOwner: Eto.Forms.Window;

			export function MainWindowForDocument(doc: Rhino.RhinoDoc): Eto.Forms.Window;

			export function DocumentPropertiesWindowForPage(page: Rhino.UI.OptionsDialogPage): Eto.Forms.Window;

			export function ApplicationPreferencesWindowForPage(page: Rhino.UI.OptionsDialogPage): Eto.Forms.Window;
		}
	}

	export namespace Rhino.UI {
		export class ViewModel {
			ModelUnitSystem: Rhino.UnitSystem;

			PageUnitSystem: Rhino.UnitSystem;

			ModelDistanceDisplayMode: Rhino.UI.DistanceDisplayMode;

			PageDistanceDisplayMode: Rhino.UI.DistanceDisplayMode;

			ModelDistanceDisplayPrecision: number;

			PageDistanceDisplayPrecision: number;

			OkToClose(parent: unknown): boolean;

			UnitsDistanceDisplayAndPrecisionFromDoc(doc: Rhino.RhinoDoc): void;

			UnitsAndDistanceDisplayFromDoc(doc: Rhino.RhinoDoc): void;

			DistanceDisplayPrecisionFromDoc(doc: Rhino.RhinoDoc): void;
		}
	}

	export namespace Rhino.UI {
		export namespace ThemeSettings {
			export const Content: Rhino.UI.Theme.ContentThemeZone;

			export const Frame: Rhino.UI.Theme.FrameThemeZone;
		}
	}

	export namespace Rhino.UI.CodeEditor {
		export class EditorConfigPanel {
			constructor(
				whichEditor: Rhino.UI.CodeEditor.WhichEditor,
				defaultConfig: Rhino.UI.CodeEditor.EditorConfig,
			);
		}
	}

	export namespace Rhino.UI.CodeEditor {
		export enum WhichEditor {
			GhPython = 0,

			RhinoPython = 1,
		}
	}

	export namespace Rhino.UI.CodeEditor {
		export class PersistentEditorSettings {
			constructor(whichEditor: Rhino.UI.CodeEditor.WhichEditor);

			GetCustomSetting(
				key: string,
				defaultValue: boolean,
			): boolean;

			GetCustomSetting(
				key: string,
				defaultValue: string,
			): string;

			SetCustomSetting(
				key: string,
				value: boolean,
			): void;

			SetCustomSetting(
				key: string,
				value: string,
			): void;

			ReadEditorConfig(defaultConfig: Rhino.UI.CodeEditor.EditorConfig): Rhino.UI.CodeEditor.EditorConfig;

			SaveEditorConfig(config: Rhino.UI.CodeEditor.EditorConfig): void;

			DeleteEditorConfig(): void;
		}
	}

	export namespace Rhino.UI.CodeEditor {
		export class EditorConfig {
		}
	}

	export namespace Rhino.UI.CodeEditor {
		export class EditorConfigViewModel {
			constructor(
				which: Rhino.UI.CodeEditor.WhichEditor,
				defaultConfig: Rhino.UI.CodeEditor.EditorConfig,
			);

			readonly EditorConfig: Rhino.UI.CodeEditor.EditorConfig;

			readonly DefaultsAreOverridden: boolean;

			ReplaceTabsWithSpaces: boolean;

			IndentWidthInChars: number;

			ShowWhitespace: boolean;

			ShowIndentationGuides: boolean;

			Font: Eto.Drawing.Font;

			ModelUnitSystem: Rhino.UnitSystem;

			PageUnitSystem: Rhino.UnitSystem;

			ModelDistanceDisplayMode: Rhino.UI.DistanceDisplayMode;

			PageDistanceDisplayMode: Rhino.UI.DistanceDisplayMode;

			ModelDistanceDisplayPrecision: number;

			PageDistanceDisplayPrecision: number;

			RestoreDefaults(): void;

			Save(): void;

			OkToClose(parent: unknown): boolean;

			UnitsDistanceDisplayAndPrecisionFromDoc(doc: Rhino.RhinoDoc): void;

			UnitsAndDistanceDisplayFromDoc(doc: Rhino.RhinoDoc): void;

			DistanceDisplayPrecisionFromDoc(doc: Rhino.RhinoDoc): void;
		}
	}

	export namespace Rhino.UI.CodeEditor {
		export class FilesSearchPathPanel {
			constructor(
				searchPaths: string[],
				updateSearchPaths: (arg1: string[]) => void,
			);
		}
	}

	export namespace Rhino.UI.CodeEditor {
		export class FilesSearchPathViewModel {
			constructor(
				searchPaths: string[],
				updateSearchPaths: (arg1: string[]) => void,
			);

			readonly SearchPaths: Iterable<string>;

			SelectedSearchPath: string;

			readonly HasSelectedUserSearchPath: boolean;

			ModelUnitSystem: Rhino.UnitSystem;

			PageUnitSystem: Rhino.UnitSystem;

			ModelDistanceDisplayMode: Rhino.UI.DistanceDisplayMode;

			PageDistanceDisplayMode: Rhino.UI.DistanceDisplayMode;

			ModelDistanceDisplayPrecision: number;

			PageDistanceDisplayPrecision: number;

			AddSearchPath(searchPath: string): boolean;

			DeleteSelectedSearchPath(): boolean;

			OkToClose(parent: unknown): boolean;

			UnitsDistanceDisplayAndPrecisionFromDoc(doc: Rhino.RhinoDoc): void;

			UnitsAndDistanceDisplayFromDoc(doc: Rhino.RhinoDoc): void;

			DistanceDisplayPrecisionFromDoc(doc: Rhino.RhinoDoc): void;
		}
	}

	export namespace Rhino.UI.ViewModels {
		export class AnnotationException {
			constructor();

			constructor(msg: string);

			constructor(
				msg: string,
				inner: unknown,
			);
		}
	}

	export namespace Rhino.UI.ViewModels {
		export class SelectionFilterViewModel {
			constructor();

			EventSet: boolean;

			LostFocus: boolean;

			OneShotFilterState: boolean;

			readonly PersistentFilterState: boolean;

			readonly DisableCheckBoxVisibilityState: boolean;

			UiLayoutIsDirty: boolean;

			Annotations: boolean;

			Blocks: boolean;

			ControlPoints: boolean;

			Curves: boolean;

			Hatches: boolean;

			Lights: boolean;

			Meshes: boolean;

			Others: boolean;

			Points: boolean;

			PointClouds: boolean;

			PolySurfaces: boolean;

			SubD: boolean;

			Surfaces: boolean;

			Disable: boolean;

			readonly CheckBoxEnabledState: boolean;

			SubObjects: boolean;

			ControlId: string;

			LastControlId: string;

			ControlIdCheckState: boolean;

			ModelUnitSystem: Rhino.UnitSystem;

			PageUnitSystem: Rhino.UnitSystem;

			ModelDistanceDisplayMode: Rhino.UI.DistanceDisplayMode;

			PageDistanceDisplayMode: Rhino.UI.DistanceDisplayMode;

			ModelDistanceDisplayPrecision: number;

			PageDistanceDisplayPrecision: number;

			Closing(): void;

			Shown(): void;

			OneShotSelectionValidateOnLostFocus(): void;

			FilterEvent(): void;

			GetAppFilterState(): void;

			PlayRightClickState(obj: Rhino.DocObjects.ObjectType | undefined): void;

			RecordPreviousState(): void;

			OkToClose(parent: unknown): boolean;

			UnitsDistanceDisplayAndPrecisionFromDoc(doc: Rhino.RhinoDoc): void;

			UnitsAndDistanceDisplayFromDoc(doc: Rhino.RhinoDoc): void;

			DistanceDisplayPrecisionFromDoc(doc: Rhino.RhinoDoc): void;
		}
	}

	export namespace Rhino.UI.ViewModels {
		export class PreviousFilterState {
			constructor();

			GlobalFilterState: Rhino.DocObjects.ObjectType;

			OneShotFilterState: Rhino.DocObjects.ObjectType;

			Annotation: boolean;

			Blocks: boolean;

			ControlPoints: boolean;

			Curves: boolean;

			Hatches: boolean;

			Lights: boolean;

			Meshes: boolean;

			Others: boolean;

			Points: boolean;

			PointClouds: boolean;

			PolySurfaces: boolean;

			Surfaces: boolean;

			SubD: boolean;

			LastSelection: number;

			OneShot: boolean;
		}
	}

	export namespace Rhino.UI.Theme {
		export class ListThemeElement {
			constructor();

			readonly Focus: Rhino.UI.Theme.ListThemeState;

			readonly FocusHover: Rhino.UI.Theme.ListThemeState;

			readonly Checked: Rhino.UI.Theme.ListThemeState;

			readonly CheckedHover: Rhino.UI.Theme.ListThemeState;

			readonly CheckedPressed: Rhino.UI.Theme.ListThemeState;

			readonly Enabled: Rhino.UI.Theme.ListThemeState;

			readonly EnabledHover: Rhino.UI.Theme.ListThemeState;

			readonly EnabledPressed: Rhino.UI.Theme.ListThemeState;

			readonly Disabled: Rhino.UI.Theme.ListThemeState;

			readonly Id: string;

			Enumerate(): Iterable<Rhino.UI.Theme.IThemeEntry>;
		}
	}

	export namespace Rhino.UI.Theme {
		export class ListThemeState {
			constructor();

			readonly Border: Eto.Drawing.Color;

			readonly Background: Eto.Drawing.Color;

			readonly Text: Eto.Drawing.Color;

			readonly Id: string;

			Enumerate(): Iterable<Rhino.UI.Theme.IThemeEntry>;
		}
	}

	export namespace Rhino.UI.Theme {
		export class ButtonThemeElement {
			constructor();

			readonly Default: Rhino.UI.Theme.ButtonThemeState;

			readonly DefaultHover: Rhino.UI.Theme.ButtonThemeState;

			readonly DefaultPressed: Rhino.UI.Theme.ButtonThemeState;

			readonly Unchecked: Rhino.UI.Theme.ButtonThemeState;

			readonly UncheckedtHover: Rhino.UI.Theme.ButtonThemeState;

			readonly UncheckedPressed: Rhino.UI.Theme.ButtonThemeState;

			readonly Checked: Rhino.UI.Theme.ButtonThemeState;

			readonly CheckedHover: Rhino.UI.Theme.ButtonThemeState;

			readonly CheckedPressed: Rhino.UI.Theme.ButtonThemeState;

			readonly Enabled: Rhino.UI.Theme.ButtonThemeState;

			readonly EnabledHover: Rhino.UI.Theme.ButtonThemeState;

			readonly EnabledPressed: Rhino.UI.Theme.ButtonThemeState;

			readonly Disabled: Rhino.UI.Theme.ButtonThemeState;

			readonly Id: string;

			Enumerate(): Iterable<Rhino.UI.Theme.IThemeEntry>;
		}
	}

	export namespace Rhino.UI.Theme {
		export class ButtonThemeState {
			constructor();

			readonly Border: Eto.Drawing.Color;

			readonly Background: Eto.Drawing.Color;

			readonly Text: Eto.Drawing.Color;

			readonly Id: string;

			Enumerate(): Iterable<Rhino.UI.Theme.IThemeEntry>;
		}
	}

	export namespace Rhino.UI.Theme {
		export function CheckedThemeElement$(T: IType): typeof CheckedThemeElement$1<any>;

		export class CheckedThemeElement$1<T> {
			new(): CheckedThemeElement$1<T>;

			readonly Checked: T;

			readonly CheckedHover: T;

			readonly CheckedPressed: T;

			readonly Enabled: T;

			readonly EnabledHover: T;

			readonly EnabledPressed: T;

			readonly Disabled: T;

			readonly Id: string;

			Enumerate(): Iterable<Rhino.UI.Theme.IThemeEntry>;
		}
	}

	export namespace Rhino.UI.Theme {
		export class CheckedThemeState {
			constructor();

			readonly Border: Eto.Drawing.Color;

			readonly Background: Eto.Drawing.Color;

			readonly Text: Eto.Drawing.Color;

			readonly Id: string;

			Enumerate(): Iterable<Rhino.UI.Theme.IThemeEntry>;
		}
	}

	export namespace Rhino.UI.Theme {
		export class EntryThemeElement {
			constructor();

			readonly Enabled: Rhino.UI.Theme.EntryThemeState;

			readonly EnabledHover: Rhino.UI.Theme.EntryThemeState;

			readonly EnabledPressed: Rhino.UI.Theme.EntryThemeState;

			readonly Disabled: Rhino.UI.Theme.EntryThemeState;

			readonly Id: string;

			Enumerate(): Iterable<Rhino.UI.Theme.IThemeEntry>;
		}
	}

	export namespace Rhino.UI.Theme {
		export class EntryThemeState {
			constructor();

			readonly PlaceholderText: Eto.Drawing.Color;

			readonly Border: Eto.Drawing.Color;

			readonly Background: Eto.Drawing.Color;

			readonly Text: Eto.Drawing.Color;

			readonly Id: string;

			Enumerate(): Iterable<Rhino.UI.Theme.IThemeEntry>;
		}
	}

	export namespace Rhino.UI.Theme {
		export class LinkThemeElement {
			constructor();

			readonly Enabled: Rhino.UI.Theme.LinkThemeState;

			readonly EnabledHover: Rhino.UI.Theme.LinkThemeState;

			readonly EnabledPressed: Rhino.UI.Theme.LinkThemeState;

			readonly Disabled: Rhino.UI.Theme.LinkThemeState;

			readonly Id: string;

			Enumerate(): Iterable<Rhino.UI.Theme.IThemeEntry>;
		}
	}

	export namespace Rhino.UI.Theme {
		export class LinkThemeState {
			constructor();

			readonly Border: Eto.Drawing.Color;

			readonly Background: Eto.Drawing.Color;

			readonly Text: Eto.Drawing.Color;

			readonly Id: string;

			Enumerate(): Iterable<Rhino.UI.Theme.IThemeEntry>;
		}
	}

	export namespace Rhino.UI.Theme {
		export class ScrollbarThemeElement {
			constructor();

			readonly Size: number;

			readonly ArrowSize: number;

			readonly Radius: number;

			readonly Enabled: Rhino.UI.Theme.ScrollbarThemeState;

			readonly EnabledHover: Rhino.UI.Theme.ScrollbarThemeState;

			readonly EnabledPressed: Rhino.UI.Theme.ScrollbarThemeState;

			readonly Disabled: Rhino.UI.Theme.ScrollbarThemeState;

			readonly Id: string;

			Enumerate(): Iterable<Rhino.UI.Theme.IThemeEntry>;
		}
	}

	export namespace Rhino.UI.Theme {
		export class ScrollbarThemeState {
			constructor();

			readonly Background: Eto.Drawing.Color;

			readonly Border: Eto.Drawing.Color;

			readonly Glyph: Eto.Drawing.Color;

			readonly Thumb: Eto.Drawing.Color;

			readonly Id: string;

			Enumerate(): Iterable<Rhino.UI.Theme.IThemeEntry>;
		}
	}

	export namespace Rhino.UI.Theme {
		export class ThemeBase {
			readonly Id: string;

			Enumerate(): Iterable<Rhino.UI.Theme.IThemeEntry>;
		}
	}

	export namespace Rhino.UI.Theme {
		export class TextThemeElement {
			constructor();

			readonly Enabled: Eto.Drawing.Color;

			readonly Disabled: Eto.Drawing.Color;

			readonly Highlight: Eto.Drawing.Color;

			readonly HighlightHover: Eto.Drawing.Color;

			readonly Id: string;

			Enumerate(): Iterable<Rhino.UI.Theme.IThemeEntry>;
		}
	}

	export namespace Rhino.UI.Theme {
		export class ThemeElementBase {
			readonly Id: string;

			Enumerate(): Iterable<Rhino.UI.Theme.IThemeEntry>;
		}
	}

	export namespace Rhino.UI.Theme {
		export function ThemeElement$(T: IType): typeof ThemeElement$1<any>;

		export class ThemeElement$1<T> {
			readonly Enabled: T;

			readonly EnabledHover: T;

			readonly EnabledPressed: T;

			readonly Disabled: T;

			readonly Id: string;

			Enumerate(): Iterable<Rhino.UI.Theme.IThemeEntry>;
		}
	}

	export namespace Rhino.UI.Theme {
		export class ThemeStateBase {
			readonly Id: string;

			Enumerate(): Iterable<Rhino.UI.Theme.IThemeEntry>;
		}
	}

	export namespace Rhino.UI.Theme {
		export class ThemeState {
			readonly Border: Eto.Drawing.Color;

			readonly Background: Eto.Drawing.Color;

			readonly Text: Eto.Drawing.Color;

			readonly Id: string;

			Enumerate(): Iterable<Rhino.UI.Theme.IThemeEntry>;
		}
	}

	export namespace Rhino.UI.Theme {
		export interface IThemeEntry {
			readonly Id: string;

			readonly Value: unknown;
		}
	}

	export namespace Rhino.UI.Theme {
		export class FrameThemeZone {
			readonly Edge: Eto.Drawing.Color;

			readonly GripperDot: Eto.Drawing.Color;

			readonly Background: Eto.Drawing.Color;

			readonly Highlight: Eto.Drawing.Color;

			readonly HighlightHover: Eto.Drawing.Color;

			readonly Divider: Eto.Drawing.Color;

			readonly Button: Rhino.UI.Theme.ButtonThemeElement;

			readonly Tab: Rhino.UI.Theme.ButtonThemeElement;

			readonly Entry: Rhino.UI.Theme.EntryThemeElement;

			readonly List: Rhino.UI.Theme.ListThemeElement;

			readonly Text: Rhino.UI.Theme.TextThemeElement;

			readonly Link: Rhino.UI.Theme.LinkThemeElement;

			readonly Scrollbar: Rhino.UI.Theme.ScrollbarThemeElement;

			readonly Id: string;

			Enumerate(): Iterable<Rhino.UI.Theme.IThemeEntry>;
		}
	}

	export namespace Rhino.UI.Theme {
		export class ContentThemeZone {
			readonly MessageBoxBackground: Eto.Drawing.Color;

			readonly GripperDot: Eto.Drawing.Color;

			readonly Background: Eto.Drawing.Color;

			readonly Highlight: Eto.Drawing.Color;

			readonly HighlightHover: Eto.Drawing.Color;

			readonly Divider: Eto.Drawing.Color;

			readonly Button: Rhino.UI.Theme.ButtonThemeElement;

			readonly Tab: Rhino.UI.Theme.ButtonThemeElement;

			readonly Entry: Rhino.UI.Theme.EntryThemeElement;

			readonly List: Rhino.UI.Theme.ListThemeElement;

			readonly Text: Rhino.UI.Theme.TextThemeElement;

			readonly Link: Rhino.UI.Theme.LinkThemeElement;

			readonly Scrollbar: Rhino.UI.Theme.ScrollbarThemeElement;

			readonly Id: string;

			Enumerate(): Iterable<Rhino.UI.Theme.IThemeEntry>;
		}
	}

	export namespace Rhino.UI.Theme {
		export class ThemeZone {
			readonly GripperDot: Eto.Drawing.Color;

			readonly Background: Eto.Drawing.Color;

			readonly Highlight: Eto.Drawing.Color;

			readonly HighlightHover: Eto.Drawing.Color;

			readonly Divider: Eto.Drawing.Color;

			readonly Button: Rhino.UI.Theme.ButtonThemeElement;

			readonly Tab: Rhino.UI.Theme.ButtonThemeElement;

			readonly Entry: Rhino.UI.Theme.EntryThemeElement;

			readonly List: Rhino.UI.Theme.ListThemeElement;

			readonly Text: Rhino.UI.Theme.TextThemeElement;

			readonly Link: Rhino.UI.Theme.LinkThemeElement;

			readonly Scrollbar: Rhino.UI.Theme.ScrollbarThemeElement;

			readonly Id: string;

			Enumerate(): Iterable<Rhino.UI.Theme.IThemeEntry>;
		}
	}

	export namespace Rhino.UI.Tether {
		export interface TetherDestroyedEventHandler { (
			source: unknown,
			e: Rhino.UI.Tether.TetherDestroyedEventArgs,
		): void; }
	}

	export namespace Rhino.UI.Tether {
		export class TetherDestroyedEventArgs {
			constructor();
		}
	}

	export namespace Rhino.UI.Tether {
		export enum CurveTetherStyle {
			ScreenTangent = 1,

			WorldTangent = 2,

			ScreenPerpendicular = 3,

			MaximumCurvature = 4,
		}
	}

	export namespace Rhino.UI.Runtime {
		export namespace HostUtils {
		}
	}

	export namespace Rhino.UI.Runtime.HostUtils {
		export interface WindowsRhinoActivatedEvent { (activated: boolean): void; }
	}

	export namespace Rhino.UI.Runtime {
		export interface IPlatformService {
			readonly MainRhinoWindow: Eto.Forms.Window;

			SetWindowPos(
				window: Eto.Forms.Window,
				rectangle: Eto.Drawing.RectangleF,
				move: boolean,
				resize: boolean,
			): boolean;

			InvokeRequired(control: Eto.Forms.Control): boolean;

			SetImageTemplateProperty(
				image: Eto.Drawing.Image,
				value: boolean,
			): void;

			SelectedImageFromIcon(
				icon: Eto.Drawing.Icon,
				scaledSize: Eto.Drawing.Size,
			): Eto.Drawing.Image;

			ShowSemiModal(
				dialog: Eto.Forms.Dialog,
				doc: Rhino.RhinoDoc,
				parent: Eto.Forms.Control,
			): void;

			PushPickButton(
				window: Eto.Forms.Window,
				pickFunction: unknown,
			): void;

			ToEto(bmp: unknown): Eto.Drawing.Bitmap;

			ToEto(
				bmp: unknown,
				background_color: unknown,
			): Eto.Drawing.Bitmap;

			ToEto(icon: unknown): Eto.Drawing.Icon;

			GetRhinoDocumentWindow(docRuntimeSerialNumber: number): Eto.Forms.Window;

			GetRhinoDocumentPropertiesWindow(page: Rhino.UI.OptionsDialogPage): Eto.Forms.Window;

			GetRhinoPreferencesWindow(page: Rhino.UI.OptionsDialogPage): Eto.Forms.Window;

			GetEtoWindow(handle: unknown): Eto.Forms.Window;

			GetNumericUpDownScrollWidth(control: Eto.Forms.NumericStepper): number;

			TextBoxHorizontalContentAlignment(
				control: Eto.Forms.TextBox,
				alignment: Eto.Forms.TextAlignment,
			): void;

			ControlPadding(control: Eto.Forms.Control): { left: number, top: number, right: number, bottom: number };

			SetControlPadding(
				control: Eto.Forms.Control,
				left: number,
				top: number,
				right: number,
				bottom: number,
			): void;

			BringCurrentProcessToForeground(): void;

			ToEtoControl(nativeControlHandle: unknown): Eto.Forms.Control;

			ToEtoControl(nativePage: unknown): Eto.Forms.Control;

			ToEtoFont(
				font: Rhino.DocObjects.Font,
				size: number,
				decoration: Eto.Drawing.FontDecoration,
			): Eto.Drawing.Font;

			ToEtoFontTypeface(font: Rhino.DocObjects.Font): Eto.Drawing.FontTypeface;

			ToEtoFont(sysFont: unknown): Eto.Drawing.Font;

			ToEtoIcon(nativeImagePointer: unknown): Eto.Drawing.Icon;

			ToEtoBitmap(nativeImagePointer: unknown): Eto.Drawing.Bitmap;

			PlaySoundFile(fileName: string): void;

			GetEtoUiFont(
				style: Rhino.UI.Fonts.Style,
				size: Rhino.UI.Fonts.Size,
			): Eto.Drawing.Font;

			ToEtoScreen(
				point: unknown,
				screen?: Eto.Forms.Screen,
			): Eto.Drawing.PointF;

			ToEtoScreen(
				rect: unknown,
				screen?: Eto.Forms.Screen,
			): Eto.Drawing.RectangleF;

			ToSystemDrawingScreen(
				point: Eto.Drawing.PointF,
				screen?: Eto.Forms.Screen,
			): unknown;

			ToSystemDrawingScreen(
				rect: Eto.Drawing.RectangleF,
				screen?: Eto.Forms.Screen,
			): unknown;
		}
	}

	export namespace Rhino.UI.Runtime {
		export namespace PlatformServiceProvider {
			export var Service: Rhino.UI.Runtime.IPlatformService;
		}
	}

	export namespace Rhino.UI.Runtime {
		export class RhinoUiServiceLocator {
			constructor();

			GetService<T>(): T;
		}
	}

	export namespace Rhino.UI.ObjectProperties {
		export class ColorPatch {
			constructor();

			Varies: boolean;

			IsCustom: boolean;

			IsPerFace: boolean;

			SelectedIconIndex: number;

			IsPrintColor: boolean;

			Color: Eto.Drawing.Color;

			HoverBrush: Eto.Drawing.Brush;

			HoverBorderPen: Eto.Drawing.Pen;

			HighlightBrush: Eto.Drawing.Brush;

			HighlightBorderPen: Eto.Drawing.Pen;

			Image: Eto.Drawing.Image;

			DisabledImage: Eto.Drawing.Image;

			Size: Eto.Drawing.Size;

			MaskImageWithBackgroundColorWhenDisabled: boolean;
		}
	}

	export namespace Rhino.UI.ObjectProperties {
		export class LayerDropDown {
			constructor();

			DocumentSerialNumber: number;

			LayerIndex: number;

			LayerVaries: boolean;

			Refresh: boolean;

			CloseForm(setFocus: boolean): void;
		}
	}

	export namespace Rhino.UI.ObjectProperties {
		export class PlotWeightComboBox {
			constructor();

			PlotWeightSource: Rhino.DocObjects.ObjectPlotWeightSource;

			PlotWeight: number;

			PlotWidthText: string;

			PlotWeightVaries: boolean;

			RefreshPlotWeightList(): void;
		}
	}

	export namespace Rhino.UI.ObjectProperties {
		export class TextureMappingPropertiesPage {
			constructor();

			readonly EnglishPageTitle: string;

			readonly LocalPageTitle: string;

			readonly Index: number;

			readonly PageIconEmbeddedResourceString: string;

			readonly PageType: Rhino.UI.PropertyPageType;

			readonly SupportedTypes: Rhino.DocObjects.ObjectType;

			readonly PageControl: unknown;

			PageIcon(sizeInPixels: unknown): unknown;

			UpdateDisplay(): void;

			ShouldDisplay(e: Rhino.UI.ObjectPropertiesPageEventArgs): boolean;

			UpdatePage(e: Rhino.UI.ObjectPropertiesPageEventArgs): void;

			OnActivate(active: boolean): boolean;

			RunScript(e: Rhino.UI.ObjectPropertiesPageEventArgs): Rhino.Commands.Result;

			dispose(): void;
		}
	}

	export namespace Rhino.UI.ObjectProperties {
		export class UserStringsDocumentOptionsPage {
			constructor(doc: Rhino.RhinoDoc);

			readonly LocalPageTitle: string;

			readonly PageControl: unknown;

			readonly PageImage: unknown;

			OnHelp(): void;

			OnApply(): boolean;
		}
	}

	export namespace Rhino.UI.ObjectProperties {
		export class UserStringsPanelControl {
			constructor(doc: Rhino.RhinoDoc);

			constructor();

			constructor(layoutId: string);

			constructor(
				doc: Rhino.RhinoDoc,
				isFxHosted: boolean,
				isDocumentText: boolean,
				isLayoutText: boolean,
				layoutId: string,
			);

			constructor(documentSerialNumber: number);

			SelectedObjects: Rhino.DocObjects.RhinoObject[];

			Document: Rhino.RhinoDoc;

			IsLayoutText: boolean;

			LayoutId: string;

			DocumentPanelActive: boolean;

			static readonly PanelId: string;

			IsFxHosted: boolean;

			EnableEventWatchers: boolean;

			SelectedRows: Iterable<number>;

			HelpUrl: string;

			ActivateEventWatchers(): void;

			DeactivateEventWatchers(): void;

			InitializeControls(rhObjs: Rhino.DocObjects.RhinoObject[]): void;

			OnApply(): boolean;

			LoadLayoutStrings(): void;

			GetSelectedObjectUserText(
				selectedObjects: Rhino.DocObjects.RhinoObject[],
				sortOnCompletion: boolean,
			): void;

			static Panel(documentSerialNumber: number): Rhino.UI.ObjectProperties.UserStringsPanelControl;

			PanelShown(
				documentSerialNumber: number,
				reason: Rhino.UI.ShowPanelReason,
			): void;

			PanelHidden(
				documentSerialNumber: number,
				reason: Rhino.UI.ShowPanelReason,
			): void;

			PanelClosing(
				documentSerialNumber: number,
				onCloseDocument: boolean,
			): void;
		}
	}

	export namespace Rhino.UI.ObjectProperties {
		export class UserStringItem {
			constructor();

			Key: string;

			Value: string;

			Formula: string;

			Guid: string;

			DocumentText: boolean;

			KeyCount: number;

			readonly FxImage: Eto.Drawing.Image;

			AppliesToAll: boolean;

			readonly AppliesToAllIcon: Eto.Drawing.Image;
		}
	}

	export namespace Rhino.UI.ObjectProperties {
		export class PropertiesEditorPanel {
			constructor(
				panelRuntimeId: string,
				doc: Rhino.RhinoDoc,
			);

			static readonly ChildPadding: number;

			readonly RuntimeId: string;

			readonly HelpUrl: string;

			IsObjectProperties: boolean;

			static Register(): void;

			PanelShown(
				documentSerialNumber: number,
				reason: Rhino.UI.ShowPanelReason,
			): void;

			PanelHidden(
				documentSerialNumber: number,
				reason: Rhino.UI.ShowPanelReason,
			): void;

			PanelClosing(
				documentSerialNumber: number,
				onCloseDocument: boolean,
			): void;

			OnClick(id: string): void;
		}
	}

	export namespace Rhino.UI.Internal {
		export class BitmapHelpers {
			constructor();

			static DrawSquare(
				bmpSize: Eto.Drawing.Size,
				drawColor: Eto.Drawing.Color,
				outlineColor: Eto.Drawing.Color,
			): Eto.Drawing.Bitmap;

			static DrawSquareGraphics(
				graphics: Eto.Drawing.Graphics,
				rect: Eto.Drawing.RectangleF,
				drawColor: Eto.Drawing.Color,
				outlineColor: Eto.Drawing.Color,
			): void;

			static DrawDiamond(
				bmpSize: Eto.Drawing.Size,
				drawColor: Eto.Drawing.Color,
				outlineColor: Eto.Drawing.Color,
			): Eto.Drawing.Bitmap;

			static GetHatchPreviewBmp(
				size: Eto.Drawing.Size,
				drawColor: Eto.Drawing.Color,
				outlineColor: Eto.Drawing.Color,
				hatchPattern: Rhino.DocObjects.HatchPattern,
			): Eto.Drawing.Bitmap;

			static GetLinetypePreview(
				size: Eto.Drawing.Size,
				lt: Rhino.DocObjects.Linetype,
			): Eto.Drawing.Bitmap;

			static DrawStarOverlay(
				image: Eto.Drawing.Bitmap,
				numberOfStarPoints: number,
			): Eto.Drawing.Bitmap;

			static DrawStarOverlay(
				icon: Eto.Drawing.Icon,
				numberOfStarPoints: number,
			): Eto.Drawing.Icon;
		}
	}

	export namespace Rhino.UI.Internal {
		export class DwgOptions {
			constructor();

			AcadVersionDropdownIndex: number;

			AcadVersion: Rhino.UI.Internal.DwgOptions.eVersion;

			Name: string;

			WriteLinesAsDropdownIndex: number;

			WriteLinesAs: Rhino.UI.Internal.DwgOptions.eWriteAs;

			WriteArcsAsDropdownIndex: number;

			WriteArcsAs: Rhino.UI.Internal.DwgOptions.eWriteAs;

			WriteSplinesAsDropdownIndex: number;

			WriteSplinesAs: Rhino.UI.Internal.DwgOptions.eWriteAs;

			WritePolylinesAsDropdownIndex: number;

			WritePolylinesAs: Rhino.UI.Internal.DwgOptions.eWriteAs;

			WritePolycurvesAsDropdownIndex: number;

			WritePolycurvesAs: Rhino.UI.Internal.DwgOptions.eWriteAs;

			WriteSurfacesAsDropdownIndex: number;

			WriteSurfacesAs: Rhino.UI.Internal.DwgOptions.eWriteAs;

			WriteMeshesAsDropdownIndex: number;

			WriteMeshesAs: Rhino.UI.Internal.DwgOptions.eWriteAs;

			SplitPolycurves: boolean;

			SplitSplines: boolean;

			CurveUseMaxAngle: boolean;

			CurveMaxAngleDegrees: number;

			CurveUseChordHeight: boolean;

			CurveChordHeight: number;

			CurveUseSegmentLength: boolean;

			CurveSegmentLength: number;

			FullLayerPathIndex: number;

			FullLayerPath: boolean;

			NoDxfHeader: boolean;

			Simplify: boolean;

			SimplifyTolerance: number;

			MinPointDistance: number;

			FlattenDropdownIndex: number;

			Flatten: Rhino.UI.Internal.DwgOptions.eFlatten;

			IsDefault: boolean;

			PreserveArcNormalsIndex: number;

			PreserveArcNormals: boolean;

			UseLwPolylines: boolean;

			ColorMethodIndex: number;

			ColorMethod: Rhino.UI.Internal.DwgOptions.eColorMethod;

			Index: number;

			SortIndex: number;

			Deleted: boolean;

			ModelUnitSystem: Rhino.UnitSystem;

			PageUnitSystem: Rhino.UnitSystem;

			ModelDistanceDisplayMode: Rhino.UI.DistanceDisplayMode;

			PageDistanceDisplayMode: Rhino.UI.DistanceDisplayMode;

			ModelDistanceDisplayPrecision: number;

			PageDistanceDisplayPrecision: number;

			static VersionUIName(input: Rhino.UI.Internal.DwgOptions.eVersion): string;

			static VersionsList(): unknown;

			static WriteAsUIName(input: Rhino.UI.Internal.DwgOptions.eWriteAs): string;

			static WriteLinesAsList(ver: Rhino.UI.Internal.DwgOptions.eVersion): unknown;

			static WriteArcsAsList(ver: Rhino.UI.Internal.DwgOptions.eVersion): unknown;

			static WriteSplinesAsList(ver: Rhino.UI.Internal.DwgOptions.eVersion): unknown;

			static WritePolylinesAsList(ver: Rhino.UI.Internal.DwgOptions.eVersion): unknown;

			static WritePolycurvesAsList(ver: Rhino.UI.Internal.DwgOptions.eVersion): unknown;

			static WriteSurfacesAsList(): unknown;

			static WriteMeshesAsList(): unknown;

			static FlattenUIName(input: Rhino.UI.Internal.DwgOptions.eFlatten): string;

			static FlattenList(): unknown;

			static ColorMethodList(): unknown;

			WriteToSettings(optionsettings: Rhino.PersistentSettings): boolean;

			static LocalizedDefaultName(): string;

			OkToClose(parent: unknown): boolean;

			UnitsDistanceDisplayAndPrecisionFromDoc(doc: Rhino.RhinoDoc): void;

			UnitsAndDistanceDisplayFromDoc(doc: Rhino.RhinoDoc): void;

			DistanceDisplayPrecisionFromDoc(doc: Rhino.RhinoDoc): void;
		}
	}

	export namespace Rhino.UI.Internal.DwgOptions {
		export enum eVersion {
			vAC12 = 12,

			vAC13 = 13,

			vAC14 = 14,

			vAC15 = 2000,

			vAC18 = 2004,

			vAC21 = 2007,

			vAC24 = 2010,

			vAC27 = 2013,

			vAC32 = 2018,
		}
	}

	export namespace Rhino.UI.Internal.DwgOptions {
		export enum eWriteAs {
			asLines = 0,

			asArcs = 1,

			asPolybulges = 2,

			asPolylines = 3,

			asSplines = 4,

			asCurves = 5,

			asMeshes = 6,

			as3dFaces = 7,

			asAcisBody = 8,

			as3dPolylines = 9,
		}
	}

	export namespace Rhino.UI.Internal.DwgOptions {
		export enum eFlatten {
			ftNone = 0,

			ftCplane = 1,

			ftView = 2,
		}
	}

	export namespace Rhino.UI.Internal.DwgOptions {
		export enum eColorMethod {
			clrACI = 0,

			clrRGB = 1,
		}
	}

	export namespace Rhino.UI.Internal.TabPanels {
		export enum ControlBarResizeMode {
			Left = 10,

			Right = 11,

			Top = 12,

			TopLeft = 13,

			TopRight = 14,

			Bottom = 15,

			BottomLeft = 16,

			BottomRight = 17,
		}
	}

	export namespace Rhino.UI.Internal.OptionsPages {
		export class AppearancePage implements Rhino.UI.Internal.OptionsPages.IOptionsPage {
			constructor(
				host: Rhino.UI.Internal.OptionsPages.OptionsPageHost,
				docRuntimeSerialNumber: number,
			);

			readonly HelpUrl: string;

			OnApply(): boolean;

			OnCancel(): void;

			OnDefaults(): void;

			OnHelp(): void;

			OnHidePage(): boolean;

			OnShowPage(): boolean;

			RunScript(
				doc: Rhino.RhinoDoc,
				mode: Rhino.Commands.RunMode,
			): Rhino.Commands.Result;
		}
	}

	export namespace Rhino.UI.Internal.OptionsPages {
		export class AppearanceViewModel {
			constructor(
				host: Rhino.UI.Internal.OptionsPages.OptionsPageHost,
				doc_sn: number,
			);

			readonly FontQuartets: unknown;

			SelectedFontName: string;

			readonly Languages: unknown;

			LanguageIndex: number;

			CommandTextSize: number;

			BackgroundColor: Eto.Drawing.Color;

			TextColor: Eto.Drawing.Color;

			HoverColor: Eto.Drawing.Color;

			EchoPromptsToHistory: boolean;

			AutocompleteCommands: boolean;

			UseFuzzyAutocomplete: boolean;

			ArrowIconShaftSize: number;

			ArrowIconHeadSize: number;

			ShowMenu: boolean;

			ShowCommandPrompt: boolean;

			ShowStatusBar: boolean;

			ShowViewportTitles: boolean;

			ShowTitleBar: boolean;

			ShowFullPath: boolean;

			ShowCrosshairs: boolean;

			ViewportTabsAtStart: boolean;

			readonly Document: Rhino.RhinoDoc;

			ModelUnitSystem: Rhino.UnitSystem;

			PageUnitSystem: Rhino.UnitSystem;

			ModelDistanceDisplayMode: Rhino.UI.DistanceDisplayMode;

			PageDistanceDisplayMode: Rhino.UI.DistanceDisplayMode;

			ModelDistanceDisplayPrecision: number;

			PageDistanceDisplayPrecision: number;

			OnApply(): void;

			OnDefaults(): void;

			OnCancel(): void;

			OnShowPage(): void;

			RunCommandPromptFontScript(
				doc: Rhino.RhinoDoc,
				mode: Rhino.Commands.RunMode,
			): Rhino.Commands.Result;

			RunDirArrowScript(
				doc: Rhino.RhinoDoc,
				mode: Rhino.Commands.RunMode,
			): Rhino.Commands.Result;

			RunCommandPromptFontAndSizeScript(
				doc: Rhino.RhinoDoc,
				mode: Rhino.Commands.RunMode,
			): Rhino.Commands.Result;

			RunCommandPromptScript(
				doc: Rhino.RhinoDoc,
				mode: Rhino.Commands.RunMode,
			): Rhino.Commands.Result;

			RunVisibleScript(
				doc: Rhino.RhinoDoc,
				mode: Rhino.Commands.RunMode,
			): Rhino.Commands.Result;

			RunWindowsScript(
				doc: Rhino.RhinoDoc,
				mode: Rhino.Commands.RunMode,
			): Rhino.Commands.Result;

			RunMacScript(
				doc: Rhino.RhinoDoc,
				mode: Rhino.Commands.RunMode,
			): Rhino.Commands.Result;

			RunScript(
				doc: Rhino.RhinoDoc,
				mode: Rhino.Commands.RunMode,
			): Rhino.Commands.Result;

			IsValidFontName(fontName: string): boolean;

			OkToClose(parent: unknown): boolean;

			UnitsDistanceDisplayAndPrecisionFromDoc(doc: Rhino.RhinoDoc): void;

			UnitsAndDistanceDisplayFromDoc(doc: Rhino.RhinoDoc): void;

			DistanceDisplayPrecisionFromDoc(doc: Rhino.RhinoDoc): void;
		}
	}

	export namespace Rhino.UI.Internal.OptionsPages.AppearanceViewModel {
		export class Language {
			constructor(
				locale: number,
				text: string,
			);

			readonly Locale: number;

			readonly Text: string;

			ModelUnitSystem: Rhino.UnitSystem;

			PageUnitSystem: Rhino.UnitSystem;

			ModelDistanceDisplayMode: Rhino.UI.DistanceDisplayMode;

			PageDistanceDisplayMode: Rhino.UI.DistanceDisplayMode;

			ModelDistanceDisplayPrecision: number;

			PageDistanceDisplayPrecision: number;

			ToString(): string;

			OkToClose(parent: unknown): boolean;

			UnitsDistanceDisplayAndPrecisionFromDoc(doc: Rhino.RhinoDoc): void;

			UnitsAndDistanceDisplayFromDoc(doc: Rhino.RhinoDoc): void;

			DistanceDisplayPrecisionFromDoc(doc: Rhino.RhinoDoc): void;
		}
	}

	export namespace Rhino.UI.Internal.OptionsPages {
		export class ColorsPage implements Rhino.UI.Internal.OptionsPages.IOptionsPage {
			constructor(
				host: Rhino.UI.Internal.OptionsPages.OptionsPageHost,
				docRuntimeSerialNumber: number,
			);

			readonly HelpUrl: string;

			OnApply(): boolean;

			OnCancel(): void;

			OnDefaults(): void;

			OnHelp(): void;

			OnHidePage(): boolean;

			OnShowPage(): boolean;

			RunScript(
				doc: Rhino.RhinoDoc,
				mode: Rhino.Commands.RunMode,
			): Rhino.Commands.Result;
		}
	}

	export namespace Rhino.UI.Internal.OptionsPages {
		export class GridSettingsPage implements Rhino.UI.Internal.OptionsPages.IOptionsPage {
			constructor(
				host: Rhino.UI.Internal.OptionsPages.OptionsPageHost,
				vm: Rhino.UI.Internal.OptionsPages.GridSettingsViewModel,
			);

			readonly Document: Rhino.RhinoDoc;

			readonly HelpUrl: string;

			OnApply(): boolean;

			OnCancel(): void;

			OnDefaults(): void;

			OnHelp(): void;

			OnHidePage(): boolean;

			OnShowPage(): boolean;

			RunScript(
				doc: Rhino.RhinoDoc,
				mode: Rhino.Commands.RunMode,
			): Rhino.Commands.Result;
		}
	}

	export namespace Rhino.UI.Internal.OptionsPages {
		export class GridSettingsViewModel {
			constructor(doc_sn: number);

			readonly Document: Rhino.RhinoDoc;

			Panel: Rhino.UI.Internal.OptionsPages.GridSettingsPage;

			readonly GridUnits: string;

			readonly SnapUnits: string;

			GridSpacing: number;

			SnapSpacing: number;

			GridLineCount: number;

			GridThickLineFrequency: number;

			ShowGridLines: boolean;

			ShowGridAxes: boolean;

			ApplyToIndex: number;

			ApplyToAll: boolean;

			ShowWorldAxes: boolean;

			ModelUnitSystem: Rhino.UnitSystem;

			PageUnitSystem: Rhino.UnitSystem;

			ModelDistanceDisplayMode: Rhino.UI.DistanceDisplayMode;

			PageDistanceDisplayMode: Rhino.UI.DistanceDisplayMode;

			ModelDistanceDisplayPrecision: number;

			PageDistanceDisplayPrecision: number;

			ActiveView(): Rhino.Display.RhinoView;

			Cancel(bCurrent: boolean): void;

			UpdateViews(bScriptMode?: boolean): boolean;

			OkToClose(parent: unknown): boolean;

			UnitsDistanceDisplayAndPrecisionFromDoc(doc: Rhino.RhinoDoc): void;

			UnitsAndDistanceDisplayFromDoc(doc: Rhino.RhinoDoc): void;

			DistanceDisplayPrecisionFromDoc(doc: Rhino.RhinoDoc): void;
		}
	}

	export namespace Rhino.UI.Internal.OptionsPages {
		export class SelectionMenuPage implements Rhino.UI.Internal.OptionsPages.IOptionsPage {
			constructor(
				host: Rhino.UI.Internal.OptionsPages.OptionsPageHost,
				vm: Rhino.UI.Internal.OptionsPages.SelectionMenuViewModel,
			);

			readonly Document: Rhino.RhinoDoc;

			readonly HelpUrl: string;

			OnApply(): boolean;

			OnCancel(): void;

			OnDefaults(): void;

			OnHelp(): void;

			OnHidePage(): boolean;

			OnShowPage(): boolean;

			RunScript(
				doc: Rhino.RhinoDoc,
				mode: Rhino.Commands.RunMode,
			): Rhino.Commands.Result;
		}
	}

	export namespace Rhino.UI.Internal.OptionsPages {
		export class SelectionMenuViewModel {
			constructor(doc_sn: number);

			readonly Document: Rhino.RhinoDoc;

			XOffset: number;

			YOffset: number;

			MaxAutomaticHeight: number;

			AutomaticResize: boolean;

			ShowTitlebarAndBorder: boolean;

			ShowObjectName: boolean;

			readonly EnableObjectTypeDetails: boolean;

			ShowObjectType: boolean;

			ShowObjectLayer: boolean;

			ShowObjectColor: boolean;

			ShowObjectTypeDetails: boolean;

			ShowAllOption: boolean;

			DynamicHighlight: boolean;

			UseCustomColor: boolean;

			HighlightColor: Eto.Drawing.Color;

			FollowCursor: boolean;

			ModelUnitSystem: Rhino.UnitSystem;

			PageUnitSystem: Rhino.UnitSystem;

			ModelDistanceDisplayMode: Rhino.UI.DistanceDisplayMode;

			PageDistanceDisplayMode: Rhino.UI.DistanceDisplayMode;

			ModelDistanceDisplayPrecision: number;

			PageDistanceDisplayPrecision: number;

			SetOriginalValues(): void;

			Cancel(): void;

			Defaults(): void;

			RunScript(doc: Rhino.RhinoDoc): Rhino.Commands.Result;

			OkToClose(parent: unknown): boolean;

			UnitsDistanceDisplayAndPrecisionFromDoc(doc: Rhino.RhinoDoc): void;

			UnitsAndDistanceDisplayFromDoc(doc: Rhino.RhinoDoc): void;

			DistanceDisplayPrecisionFromDoc(doc: Rhino.RhinoDoc): void;
		}
	}

	export namespace Rhino.UI.Internal.OptionsPages {
		export class UnitsSettingsPage implements Rhino.UI.Internal.OptionsPages.IOptionsPage {
			constructor(
				host: Rhino.UI.Internal.OptionsPages.OptionsPageHost,
				docRuntimeSerialNumber: number,
			);

			readonly HelpUrl: string;

			OnApply(): boolean;

			OnCancel(): void;

			OnDefaults(): void;

			OnHelp(): void;

			OnShowPage(): boolean;

			OnHidePage(): boolean;

			RunScript(
				doc: Rhino.RhinoDoc,
				mode: Rhino.Commands.RunMode,
			): Rhino.Commands.Result;
		}
	}

	export namespace Rhino.UI.Internal.OptionsPages {
		export class UnitsSettingsViewModel {
			constructor(
				host: Rhino.UI.Internal.OptionsPages.OptionsPageHost,
				doc_sn: number,
				isPageSettings: boolean,
			);

			readonly IsPageSettings: boolean;

			Units: Rhino.UnitSystem;

			readonly AllowFeetAndInches: boolean;

			DisplayPrecision: number;

			DisplayDecimal: boolean;

			DisplayFractional: boolean;

			DisplayFeetAndInches: boolean;

			readonly Document: Rhino.RhinoDoc;

			readonly DisplayPrecisionList: unknown;

			readonly UnitsTypeString: string;

			AbsoluteTolerance: number;

			AngleToleranceInDegrees: number;

			readonly UnitsString: string;

			CustomUnitsString: string;

			CustomUnitsPerMeter: number;

			readonly CustomEnabled: boolean;

			ModelUnitSystem: Rhino.UnitSystem;

			PageUnitSystem: Rhino.UnitSystem;

			ModelDistanceDisplayMode: Rhino.UI.DistanceDisplayMode;

			PageDistanceDisplayMode: Rhino.UI.DistanceDisplayMode;

			ModelDistanceDisplayPrecision: number;

			PageDistanceDisplayPrecision: number;

			DisplayAbsoluteToleranceMessagebox(): void;

			DisplayAngleToleranceMessagebox(): void;

			OnShowPage(): void;

			OnApply(bScripted?: boolean): void;

			OnCancel(): void;

			RunScript(): Rhino.Commands.Result;

			OkToClose(parent: unknown): boolean;

			UnitsDistanceDisplayAndPrecisionFromDoc(doc: Rhino.RhinoDoc): void;

			UnitsAndDistanceDisplayFromDoc(doc: Rhino.RhinoDoc): void;

			DistanceDisplayPrecisionFromDoc(doc: Rhino.RhinoDoc): void;
		}
	}

	export namespace Rhino.UI.Internal.OptionsPages {
		export interface IOptionsPage {
			OnShowPage(): boolean;

			OnHidePage(): boolean;

			OnApply(): boolean;

			OnCancel(): void;

			OnDefaults(): void;

			OnHelp(): void;

			RunScript(
				doc: Rhino.RhinoDoc,
				mode: Rhino.Commands.RunMode,
			): Rhino.Commands.Result;
		}
	}

	export namespace Rhino.UI.Internal.OptionsPages {
		export class OptionsPageHost {
			constructor(
				localizedTitle: string,
				englishTitle: string,
				imageResourId: string,
				showDefaultsButton: boolean,
				showApplyButton: boolean,
				newPanelFunc: (arg1: Rhino.UI.Internal.OptionsPages.OptionsPageHost) => Rhino.UI.Internal.OptionsPages.IOptionsPage,
			);

			constructor(
				pageType: Rhino.UI.OptionsDialogPage.PageType,
				localizedTitle: string,
				englishTitle: string,
				imageResourId: string,
				showDefaultsButton: boolean,
				showApplyButton: boolean,
				newPanelFunc: (arg1: Rhino.UI.Internal.OptionsPages.OptionsPageHost) => Rhino.UI.Internal.OptionsPages.IOptionsPage,
				childPages?: Iterable<Rhino.UI.OptionsDialogPage>,
			);

			readonly PageControl: unknown;

			readonly LocalPageTitle: string;

			readonly PageImage: unknown;

			readonly ShowDefaultsButton: boolean;

			readonly ShowApplyButton: boolean;

			OnActivate(active: boolean): boolean;

			OnApply(): boolean;

			OnCancel(): void;

			OnDefaults(): void;

			OnHelp(): void;

			RunScript(
				doc: Rhino.RhinoDoc,
				mode: Rhino.Commands.RunMode,
			): Rhino.Commands.Result;
		}
	}

	export namespace Rhino.UI.Internal.MeshingUI {
		export class MeshParametersStyle {
			constructor(
				id: string,
				name: string,
				inputParams: Rhino.Geometry.MeshingParameters,
				detailed: boolean,
			);

			readonly IsReadOnly: boolean;

			readonly IsSeparator: boolean;

			readonly IsCustom: boolean;

			readonly Id: string;

			static readonly SeparatorId: string;

			static readonly RhinoDefaults: string;

			static readonly RhinoJaggedAndFast: string;

			static readonly RhinoSmoothAndSlower: string;

			static readonly Custom: string;

			readonly Image: Eto.Drawing.Image;

			Name: string;

			Parameters: Rhino.Geometry.MeshingParameters;

			Detailed: boolean;

			Deleted: boolean;

			ModelUnitSystem: Rhino.UnitSystem;

			PageUnitSystem: Rhino.UnitSystem;

			ModelDistanceDisplayMode: Rhino.UI.DistanceDisplayMode;

			PageDistanceDisplayMode: Rhino.UI.DistanceDisplayMode;

			ModelDistanceDisplayPrecision: number;

			PageDistanceDisplayPrecision: number;

			ToString(): string;

			OkToClose(parent: unknown): boolean;

			UnitsDistanceDisplayAndPrecisionFromDoc(doc: Rhino.RhinoDoc): void;

			UnitsAndDistanceDisplayFromDoc(doc: Rhino.RhinoDoc): void;

			DistanceDisplayPrecisionFromDoc(doc: Rhino.RhinoDoc): void;
		}
	}

	export namespace Rhino.UI.Internal.MeshingUI {
		export class MeshingStyleListViewModel {
			constructor(
				document: Rhino.RhinoDoc,
				input_mp: Rhino.Geometry.MeshingParameters,
				bDetailedView: boolean,
			);

			readonly Document: Rhino.RhinoDoc;

			readonly OriginalDetailedView: boolean;

			MeshParameters: Rhino.Geometry.MeshingParameters;

			readonly OriginalMeshParameters: Rhino.Geometry.MeshingParameters;

			SelectedStyleId: string;

			SelectedStyle: Rhino.UI.Internal.MeshingUI.MeshParametersStyle;

			ModelUnitSystem: Rhino.UnitSystem;

			PageUnitSystem: Rhino.UnitSystem;

			ModelDistanceDisplayMode: Rhino.UI.DistanceDisplayMode;

			PageDistanceDisplayMode: Rhino.UI.DistanceDisplayMode;

			ModelDistanceDisplayPrecision: number;

			PageDistanceDisplayPrecision: number;

			DeleteStyleFromSettings(styleToDelete: Rhino.UI.Internal.MeshingUI.MeshParametersStyle): void;

			SavePresetListToFile(fileName: string): boolean;

			SavePresetListToSettings(): void;

			RetrieveStyleListFromFile(fileName: string): boolean;

			RetrievePresetListFromSettings(): unknown;

			FindStyleGuidByName(name: string): string;

			FindStyleGuid(
				name: string,
				mp: Rhino.Geometry.MeshingParameters,
			): string;

			FindStyle(guid: string): Rhino.UI.Internal.MeshingUI.MeshParametersStyle;

			AddStyle(style: Rhino.UI.Internal.MeshingUI.MeshParametersStyle): boolean;

			DeleteStyle(style: Rhino.UI.Internal.MeshingUI.MeshParametersStyle): boolean;

			EditStyle(style: Rhino.UI.Internal.MeshingUI.MeshParametersStyle): boolean;

			OkToClose(parent: unknown): boolean;

			UnitsDistanceDisplayAndPrecisionFromDoc(doc: Rhino.RhinoDoc): void;

			UnitsAndDistanceDisplayFromDoc(doc: Rhino.RhinoDoc): void;

			DistanceDisplayPrecisionFromDoc(doc: Rhino.RhinoDoc): void;
		}
	}

	export namespace Rhino.UI.Internal.MeshingUI {
		export class MeshSettingsViewModel {
			constructor(
				docSn: number,
				pageStyle: Rhino.UI.Internal.MeshingUI.PageStyle,
				inputMp: Rhino.Geometry.MeshingParameters,
				mode: number,
			);

			readonly Document: Rhino.RhinoDoc;

			PreviewMeshingParameters: Rhino.Geometry.MeshingParameters;

			MeshParameters: Rhino.Geometry.MeshingParameters;

			Detailed: boolean;

			PageStyle: Rhino.UI.Internal.MeshingUI.PageStyle;

			NurbsMeshingSliderPosition: number;

			Density: number;

			MaximumAngle: number;

			MaximumAspectRatio: number;

			MinimumEdgeLength: number;

			MaximumEdgeLength: number;

			MaxDistanceEdgeToSurface: number;

			MinimumInitialGridQuads: number;

			RefineMesh: boolean;

			JaggedSeams: boolean;

			SimplePlanes: boolean;

			PackTextures: boolean;

			PersistentPresets: unknown;

			SelectedPreset: Rhino.UI.Internal.MeshingUI.MeshParametersStyle;

			SelectedPresetIndex: number;

			DefaultControlColor: Eto.Drawing.Color;

			LabelDefaultColor: Eto.Drawing.Color;

			ChangedValueColor: Eto.Drawing.Color;

			DensityChanged: boolean;

			readonly DensityColor: Eto.Drawing.Color;

			MaximumAngleChanged: boolean;

			readonly MaximumAngleColor: Eto.Drawing.Color;

			MaximumAspectRatioChanged: boolean;

			readonly MaximumAspectRatioColor: Eto.Drawing.Color;

			MaximumEdgeLengthChanged: boolean;

			readonly MaximumEdgeLengthColor: Eto.Drawing.Color;

			MinimumEdgeLengthChanged: boolean;

			readonly MinimumEdgeLengthColor: Eto.Drawing.Color;

			MaxDistanceEdgeToSurfaceChanged: boolean;

			readonly MaxDistanceEdgeToSurfaceColor: Eto.Drawing.Color;

			MinimumInitialGridQuadsChanged: boolean;

			readonly MinimumInitialGridQuadsColor: Eto.Drawing.Color;

			RefineMeshChanged: boolean;

			readonly RefineMeshColor: Eto.Drawing.Color;

			JaggedSeamsChanged: boolean;

			readonly JaggedSeamsColor: Eto.Drawing.Color;

			PackTexturesChanged: boolean;

			readonly PackTexturesColor: Eto.Drawing.Color;

			SimplePlanesChanged: boolean;

			readonly SimplePlanesColor: Eto.Drawing.Color;

			SubDAbsoluteSliderPositionChanged: boolean;

			readonly SubDAbsoluteSliderPositionColor: Eto.Drawing.Color;

			PreviousSubDAbsoluteSliderPosition: number;

			SubDAbsoluteSliderPosition: number;

			PreviousSubDAdaptiveSliderPosition: number;

			SubDAdaptiveSliderPosition: number;

			EnablePreview: boolean;

			readonly OriginalDetailedView: boolean;

			readonly OriginalMeshParameters: Rhino.Geometry.MeshingParameters;

			ModelUnitSystem: Rhino.UnitSystem;

			PageUnitSystem: Rhino.UnitSystem;

			ModelDistanceDisplayMode: Rhino.UI.DistanceDisplayMode;

			PageDistanceDisplayMode: Rhino.UI.DistanceDisplayMode;

			ModelDistanceDisplayPrecision: number;

			PageDistanceDisplayPrecision: number;

			ReloadPreset(): void;

			FindPresetAndSelectedIndex(): void;

			ShowUpdatePresetMenuItem(): boolean;

			GetPresetsFromPersistentSettings(): void;

			RetrievePresetListFromSettings(): unknown;

			AddPreset(style: Rhino.UI.Internal.MeshingUI.MeshParametersStyle): boolean;

			DeletePreset(style: Rhino.UI.Internal.MeshingUI.MeshParametersStyle): boolean;

			DeletePresetFromPersistentSettings(styleToDelete: Rhino.UI.Internal.MeshingUI.MeshParametersStyle): void;

			SaveAllPresetsToPersistentSettings(): void;

			SetMpSubDFromSubDSliderPosition(): void;

			Reset(): void;

			Defaults(): void;

			Set(): void;

			PreviewMeshes(): Rhino.Commands.Result;

			TurnPreviewOff(): void;

			SavePresetMenuClick(): void;

			UpdatePresetMenuClick(): void;

			DeletePresetMenuClick(): void;

			ExportPresetMenuClick(): void;

			ImportPresetsMenuClick(windowOwner: Eto.Forms.Control): void;

			AddPresetToPersistentPresets(preset: Rhino.UI.Internal.MeshingUI.MeshParametersStyle): boolean;

			FindPresetByName(name: string): string;

			FindPresetFromGuid(guid: string): Rhino.UI.Internal.MeshingUI.MeshParametersStyle;

			SavePresetListToFile(fileName: string): void;

			LoadPresetsFromFile(fileName: string): boolean;

			OkToClose(parent: unknown): boolean;

			UnitsDistanceDisplayAndPrecisionFromDoc(doc: Rhino.RhinoDoc): void;

			UnitsAndDistanceDisplayFromDoc(doc: Rhino.RhinoDoc): void;

			DistanceDisplayPrecisionFromDoc(doc: Rhino.RhinoDoc): void;
		}
	}

	export namespace Rhino.UI.Internal.MeshingUI {
		export enum PageStyle {
			Properties = 0,

			Mesh = 1,

			Stl = 2,

			Analysis = 3,

			ParamsOnly = 4,

			PerObject = 5,
		}
	}

	export namespace Rhino.UI.Forms {
		export enum SectionSource {
			ByClippingPlane = 0,

			Custom = 1,
		}
	}

	export namespace Rhino.UI.Forms {
		export class SectionStyleDialog {
			constructor(documentSerialNumber: number);

			constructor(
				documentSerialNumber: number,
				hatchIndex: number,
				rotation: number,
				scale: number,
				backfillColor: Eto.Drawing.Color,
				showBoundary: boolean,
				fillRule: Rhino.DocObjects.ObjectSectionFillRule,
			);

			readonly SectionSource: Rhino.UI.Forms.SectionSource;

			HatchIndex: number;

			RotationDegrees: number;

			readonly RotationRadians: number;

			Scale: number;

			SectionFillRule: Rhino.DocObjects.ObjectSectionFillRule;

			BackfillColor: Eto.Drawing.Color;

			ShowBoundary: boolean;

			Content: Eto.Forms.Control;

			ButtonOptions: Eto.Forms.Control;

			ShowHelpButton: boolean;

			SavePosition: boolean;

			UpdateSourceOnApply: boolean;

			Buttons: Rhino.UI.Forms.CommandDialog.ShowButtons;

			FocusDefaultButtonOnLoad: boolean;
		}
	}

	export namespace Rhino.UI.Forms {
		export class PrintDialogUi {
			constructor(
				documentRuntimeSerialNumber: number,
				settings: Rhino.PersistentSettings,
			);

			static EtoExportSvg(
				documentRuntimeSerialNumber: number,
				settings: Rhino.PersistentSettings,
			): Rhino.Display.ViewCaptureSettings;

			static EtoExportSvgArray(
				documentRuntimeSerialNumber: number,
				settings: Rhino.PersistentSettings,
				options: Rhino.FileIO.FileWriteOptions,
			): Rhino.Display.ViewCaptureSettings[];

			static EtoExportPdf(
				documentRuntimeSerialNumber: number,
				settings: Rhino.PersistentSettings,
				selectedObjectsOnly: boolean,
			): unknown;

			static EtoExportPdfPrintOptions(
				documentRuntimeSerialNumber: number,
				settings: Rhino.PersistentSettings,
				selectedObjectsOnly: boolean,
			): unknown;

			static ShowSavePdfFileDialog(
				documentName: string,
				documentRuntimeSerial: number,
			): { result: Eto.Forms.DialogResult, path: string };

			static IsPdfInUse(path: string): boolean;

			static IsFileInUse(filePath: string): boolean;

			static EtoExportPdf(
				documentRuntimeSerialNumber: number,
				settings: Rhino.PersistentSettings,
			): void;

			static ShowPrintDialog(
				dialogTitle: string,
				documentRuntimeSerialNumber: number,
				settings: Rhino.PersistentSettings,
				selectedObjectsOnly: boolean,
				showPrinterDestinations: boolean,
			): Rhino.Commands.Result;
		}
	}

	export namespace Rhino.UI.Forms {
		export class PrintWidthDialog {
			constructor();

			constructor(
				title: string,
				message: string,
				selectedWidth: number,
			);

			SelectedWidth: number;

			StartingValue: number;

			Content: Eto.Forms.Control;

			Message: string;
		}
	}

	export namespace Rhino.UI.Forms {
		export class PropertyListBoxDialog {
			constructor(
				title: string,
				message: string,
				items: unknown,
				values: string[],
			);

			readonly Values: string[];

			Collection: unknown;

			Content: Eto.Forms.Control;

			Message: string;
		}
	}

	export namespace Rhino.UI.Forms.PropertyListBoxDialog {
		export class ListProperty {
			constructor();

			PropertyName: string;

			Value: string;
		}
	}

	export namespace Rhino.UI.Forms {
		export class BaseDialog {
			constructor();

			Content: Eto.Forms.Control;

			Message: string;
		}
	}

	export namespace Rhino.UI.Forms {
		export class CommandDialog {
			constructor();

			Content: Eto.Forms.Control;

			ButtonOptions: Eto.Forms.Control;

			ShowHelpButton: boolean;

			SavePosition: boolean;

			UpdateSourceOnApply: boolean;

			Buttons: Rhino.UI.Forms.CommandDialog.ShowButtons;

			static readonly DefaultShowButtons: Rhino.UI.Forms.CommandDialog.ShowButtons;

			FocusDefaultButtonOnLoad: boolean;
		}
	}

	export namespace Rhino.UI.Forms.CommandDialog {
		export enum ShowButtons {
			Close = 1,

			CloseHelp = 5,

			OKCancel = 3,

			OKCancelHelp = 7,
		}
	}

	export namespace Rhino.UI.Forms {
		export class ColorList {
			constructor(name: string);

			constructor(
				name: string,
				entries: Iterable<Rhino.UI.Forms.ColorListEntry>,
			);

			Name: string;

			static readonly Default: Rhino.UI.Forms.ColorList;
		}
	}

	export namespace Rhino.UI.Forms {
		export class ColorListEntry {
			constructor(
				name: string,
				color: Eto.Drawing.Color,
			);

			readonly Name: string;

			readonly Color: Eto.Drawing.Color;
		}
	}

	export namespace Rhino.UI.Forms {
		export class ColorListDialog {
			constructor();

			AutoDetatch: boolean;

			ColorList: Rhino.UI.Forms.ColorList;

			SelectedEntry: Rhino.UI.Forms.ColorListEntry;

			readonly IsActive: boolean;

			Deactivate(): void;

			ShowDialog(parent: Eto.Forms.Control): Eto.Forms.DialogResult;
		}
	}

	export namespace Rhino.UI.Forms.ColorListDialog {
		export interface ICallback {
			OnIsActiveChanged(
				widget: Rhino.UI.Forms.ColorListDialog,
				e: unknown,
			): void;
		}
	}

	export namespace Rhino.UI.Forms.ColorListDialog {
		export interface IHandler {
			ColorList: Rhino.UI.Forms.ColorList;

			AutoDetatch: boolean;

			readonly IsActive: boolean;

			Deactivate(): void;

			ShowDialog(parent: Eto.Forms.Control): Eto.Forms.DialogResult;
		}
	}

	export namespace Rhino.UI.Forms.ViewModels {
		export class PrintFileOptions {
			constructor();

			IncludeFilePrefix: boolean;

			PrefixString: string;

			OpenAfterSave: boolean;

			EnableMultiFileSaving: boolean;

			UsePageNumber: boolean;

			UsePageName: boolean;

			PageName: string;

			PageNumber: number;

			Vcs: Rhino.Display.ViewCaptureSettings;
		}
	}

	export namespace Rhino.UI.DialogPanels {
		export class EtoCommandHistoryPanel {
			constructor(documentSerialNumber: number);

			constructor(doc: Rhino.RhinoDoc);

			static readonly PanelId: string;

			readonly HelpUrl: string;

			static Register(): void;

			PanelClosing(
				documentSerialNumber: number,
				onCloseDocument: boolean,
			): void;

			PanelHidden(
				documentSerialNumber: number,
				reason: Rhino.UI.ShowPanelReason,
			): void;

			PanelShown(
				documentSerialNumber: number,
				reason: Rhino.UI.ShowPanelReason,
			): void;
		}
	}

	export namespace Rhino.UI.DialogPanels {
		export class CommandHistoryPanel {
			constructor(documentSerialNumber: number);

			constructor(doc: Rhino.RhinoDoc);

			readonly HelpUrl: string;

			static readonly PanelId: string;

			PanelClosing(
				documentSerialNumber: number,
				onCloseDocument: boolean,
			): void;

			PanelHidden(
				documentSerialNumber: number,
				reason: Rhino.UI.ShowPanelReason,
			): void;

			PanelShown(
				documentSerialNumber: number,
				reason: Rhino.UI.ShowPanelReason,
			): void;
		}
	}

	export namespace Rhino.UI.DialogPanels {
		export class CommandHelpPanel {
			constructor();

			static readonly Id: string;

			readonly TextBox: Eto.Forms.TextBox;

			readonly HelpUrl: string;

			static Register(): void;

			GetLanguageString(language_id: number): string;

			FindCommand(
				commandname: string,
				bClicked: boolean,
			): boolean;

			PanelShown(
				documentSerialNumber: number,
				reason: Rhino.UI.ShowPanelReason,
			): void;

			PanelHidden(
				documentSerialNumber: number,
				reason: Rhino.UI.ShowPanelReason,
			): void;

			PanelClosing(
				documentSerialNumber: number,
				onCloseDocument: boolean,
			): void;

			OnCloseDocument(
				sender: unknown,
				args: Rhino.DocumentEventArgs,
			): void;
		}
	}

	export namespace Rhino.UI.DialogPanels {
		export class DisplayPropertiesPanel {
			constructor(documentSerialNumber: number);

			ViewModel: Rhino.UI.DialogPanels.DisplayPropertiesViewModel;

			static readonly PanelId: string;

			PanelShown(
				documentSerialNumber: number,
				reason: Rhino.UI.ShowPanelReason,
			): void;

			PanelHidden(
				documentSerialNumber: number,
				reason: Rhino.UI.ShowPanelReason,
			): void;

			PanelClosing(
				documentSerialNumber: number,
				onCloseDocument: boolean,
			): void;
		}
	}

	export namespace Rhino.UI.DialogPanels {
		export class DisplayPropertiesViewModel {
			constructor(documentSerialNumber: number);

			DocumentSerialNumber: number;

			Document: Rhino.RhinoDoc;

			ActiveViewport: string;

			DisplayModeDescriptions: unknown;

			SelectedDisplayModeIndex: number;

			FlairModeDescriptions: unknown;

			CurveTaperDescriptions: unknown;

			CurveTaperSelectedIndex: number;

			SelectedFlairModeIndex: number;

			EndWidth: number;

			TaperWidth: number;

			TaperPosition: number;

			CurveWidth: number;

			BackgroundModeDescriptions: unknown;

			SelectedBackgroundModeIndex: number;

			FlatShading: boolean;

			ShadeVertexColors: boolean;

			Shadows: boolean;

			SurfaceIsoCurves: boolean;

			SurfaceEdges: boolean;

			TangentEdges: boolean;

			TangentSeams: boolean;

			SubDWires: boolean;

			SubDCreases: boolean;

			SubDBoundaries: boolean;

			SubDSymmetry: boolean;

			MeshWires: boolean;

			Curves: boolean;

			Lights: boolean;

			ClippingPlanes: boolean;

			Text: boolean;

			Annotations: boolean;

			Points: boolean;

			PointClouds: boolean;

			Transparency: number;

			Grid: boolean;

			CPlaneAxes: boolean;

			ZAxis: boolean;

			WorldIcon: boolean;

			ColorBackFaces: boolean;

			BackFaceColor: Eto.Drawing.Color;

			BBoxDisplay: boolean;

			ShowEdges: boolean;

			ActiveViewId: string;

			ModelUnitSystem: Rhino.UnitSystem;

			PageUnitSystem: Rhino.UnitSystem;

			ModelDistanceDisplayMode: Rhino.UI.DistanceDisplayMode;

			PageDistanceDisplayMode: Rhino.UI.DistanceDisplayMode;

			ModelDistanceDisplayPrecision: number;

			PageDistanceDisplayPrecision: number;

			StartDocumentEventWatchers(): void;

			StopDocumentEventWatchers(): void;

			OkToClose(parent: unknown): boolean;

			UnitsDistanceDisplayAndPrecisionFromDoc(doc: Rhino.RhinoDoc): void;

			UnitsAndDistanceDisplayFromDoc(doc: Rhino.RhinoDoc): void;

			DistanceDisplayPrecisionFromDoc(doc: Rhino.RhinoDoc): void;
		}
	}

	export namespace Rhino.UI.DialogPanels {
		export class HatchImportUi {
			constructor(hatches: Iterable<Rhino.DocObjects.HatchPattern>);

			Content: Eto.Forms.Control;

			ButtonOptions: Eto.Forms.Control;

			ShowHelpButton: boolean;

			SavePosition: boolean;

			UpdateSourceOnApply: boolean;

			Buttons: Rhino.UI.Forms.CommandDialog.ShowButtons;

			FocusDefaultButtonOnLoad: boolean;
		}
	}

	export namespace Rhino.UI.DialogPanels {
		export class HatchImport {
			constructor();

			HatchPattern: Rhino.DocObjects.HatchPattern;

			Checked: boolean;

			readonly CheckIcon: Eto.Drawing.Image;

			ModelUnitSystem: Rhino.UnitSystem;

			PageUnitSystem: Rhino.UnitSystem;

			ModelDistanceDisplayMode: Rhino.UI.DistanceDisplayMode;

			PageDistanceDisplayMode: Rhino.UI.DistanceDisplayMode;

			ModelDistanceDisplayPrecision: number;

			PageDistanceDisplayPrecision: number;

			OkToClose(parent: unknown): boolean;

			UnitsDistanceDisplayAndPrecisionFromDoc(doc: Rhino.RhinoDoc): void;

			UnitsAndDistanceDisplayFromDoc(doc: Rhino.RhinoDoc): void;

			DistanceDisplayPrecisionFromDoc(doc: Rhino.RhinoDoc): void;
		}
	}

	export namespace Rhino.UI.DialogPanels {
		export class LayersPanel {
			constructor(doc: Rhino.RhinoDoc);

			constructor(documentSerialNumber: number);

			static readonly PanelId: string;

			readonly HelpUrl: string;

			static Register(): void;

			PanelClosing(
				documentSerialNumber: number,
				onCloseDocument: boolean,
			): void;

			PanelHidden(
				documentSerialNumber: number,
				reason: Rhino.UI.ShowPanelReason,
			): void;

			PanelShown(
				documentSerialNumber: number,
				reason: Rhino.UI.ShowPanelReason,
			): void;
		}
	}

	export namespace Rhino.UI.DialogPanels {
		export class RhinoDocUndoRecord {
			constructor(
				doc: Rhino.RhinoDoc,
				description: string,
			);

			constructor(
				docRuntimeSerialNumber: number,
				description: string,
			);

			dispose(): void;
		}
	}

	export namespace Rhino.UI.DialogPanels {
		export class LinetypesCommandPanel {
			constructor(doc: Rhino.RhinoDoc);

			static readonly PanelId: string;

			static SetupMode: boolean;

			ViewModel: Rhino.UI.DialogPanels.LinetypesCommandPanelViewModel;

			DocumentSerial: number;

			readonly HelpUrl: string;

			PanelShown(
				documentSerialNumber: number,
				reason: Rhino.UI.ShowPanelReason,
			): void;

			PanelHidden(
				documentSerialNumber: number,
				reason: Rhino.UI.ShowPanelReason,
			): void;

			PanelClosing(
				documentSerialNumber: number,
				onCloseDocument: boolean,
			): void;
		}
	}

	export namespace Rhino.UI.DialogPanels {
		export class LinetypesCommandPanelViewModel {
			constructor(doc: Rhino.RhinoDoc);

			DocumentSerial: number;

			LineTypeCollection: unknown;

			SelectedGridViewIndex: number;

			SelectedRow: number;

			SelectedPatternUnitIndex: number;

			PatternIsMillimeter: boolean;

			Pattern: string;

			CurrentLineTypeItem: Rhino.UI.DialogPanels.LinetypeTempItem;

			SortByName: boolean;

			SortByPattern: boolean;

			SortIndex: number;

			UnitList: Iterable<string>;

			LinetypeScaleValue: number;

			ModelUnitSystem: Rhino.UnitSystem;

			PageUnitSystem: Rhino.UnitSystem;

			ModelDistanceDisplayMode: Rhino.UI.DistanceDisplayMode;

			PageDistanceDisplayMode: Rhino.UI.DistanceDisplayMode;

			ModelDistanceDisplayPrecision: number;

			PageDistanceDisplayPrecision: number;

			StartEventWatchers(): void;

			StopEventWatchers(): void;

			ReloadLinetypes(doc: Rhino.RhinoDoc): void;

			ReloadDeletedDefaultLinetypes(): void;

			SortLinetypes(e: Eto.Forms.GridColumnEventArgs): void;

			SortLinetypesByName(
				ascending: boolean,
				reset: boolean,
			): void;

			SortLinetypesByPattern(
				ascending: boolean,
				reset: boolean,
			): void;

			CopyCommand(): void;

			AddCommand(): void;

			DeleteCommand(): void;

			ImportCommand(): void;

			LoadLineTypeCollection(
				reset: boolean,
				reloadDeleted: boolean,
			): void;

			OkToClose(parent: unknown): boolean;

			UnitsDistanceDisplayAndPrecisionFromDoc(doc: Rhino.RhinoDoc): void;

			UnitsAndDistanceDisplayFromDoc(doc: Rhino.RhinoDoc): void;

			DistanceDisplayPrecisionFromDoc(doc: Rhino.RhinoDoc): void;
		}
	}

	export namespace Rhino.UI.DialogPanels {
		export class LinetypeTempItem {
			constructor();

			DocumentRuntimeSerial: number;

			ConvertRequired: boolean;

			LineType: Rhino.DocObjects.Linetype;

			Width: number;

			TaperEnabled: boolean;

			TaperEndWidth: number;

			TaperWidth: number;

			TaperPosition: number;

			AlwaysModelDistances: boolean;

			Name: string;

			Pattern: string;

			CanDelete: boolean;

			readonly DeleteImage: Eto.Drawing.Image;

			SelectedPatternUnitIndex: number;

			SelectedCapStyleIndex: number;

			SelectedJoinStyleIndex: number;

			WidthUnitSystem: Rhino.UnitSystem;

			SelectedWidthUnitIndex: number;

			IsMillimeter: boolean;

			BlockUsage: number;

			ObjectUsage: number;

			LayerUsage: number;

			ToolTip: string;

			Usage: Eto.Drawing.Image;

			UsageIndex: number;

			ModelUnitSystem: Rhino.UnitSystem;

			PageUnitSystem: Rhino.UnitSystem;

			ModelDistanceDisplayMode: Rhino.UI.DistanceDisplayMode;

			PageDistanceDisplayMode: Rhino.UI.DistanceDisplayMode;

			ModelDistanceDisplayPrecision: number;

			PageDistanceDisplayPrecision: number;

			OkToClose(parent: unknown): boolean;

			UnitsDistanceDisplayAndPrecisionFromDoc(doc: Rhino.RhinoDoc): void;

			UnitsAndDistanceDisplayFromDoc(doc: Rhino.RhinoDoc): void;

			DistanceDisplayPrecisionFromDoc(doc: Rhino.RhinoDoc): void;
		}
	}

	export namespace Rhino.UI.DialogPanels {
		export class DetailedMeshPropertiesDialog {
			constructor(doc: Rhino.RhinoDoc);

			Content: Eto.Forms.Control;

			ButtonOptions: Eto.Forms.Control;

			ShowHelpButton: boolean;

			SavePosition: boolean;

			UpdateSourceOnApply: boolean;

			Buttons: Rhino.UI.Forms.CommandDialog.ShowButtons;

			FocusDefaultButtonOnLoad: boolean;
		}
	}

	export namespace Rhino.UI.DialogPanels.DetailedMeshPropertiesDialog {
		export class MeshPropertiesPanelDetailed {
			constructor(
				doc: Rhino.RhinoDoc,
				dialogControls: Iterable<Eto.Forms.Control>,
			);

			ViewModel: Rhino.UI.DialogPanels.MeshPropertiesViewModel;
		}
	}

	export namespace Rhino.UI.DialogPanels {
		export class MeshPropertiesViewModel {
			constructor(doc: Rhino.RhinoDoc);

			Document: Rhino.RhinoDoc;

			MeshingParameters: Rhino.Geometry.MeshingParameters;

			Density: number;

			MaximumAngle: number;

			MaximumAspectRatio: number;

			MinimumEdgeLength: number;

			MaximumEdgeLength: number;

			MaximumDistanceEdgeToSrf: number;

			MinimumInitialGridQuads: number;

			RefineMesh: boolean;

			JaggedSeams: boolean;

			SimplePlanes: boolean;

			PackTextures: boolean;

			SubDDivisionLevel: number;

			ModelUnitSystem: Rhino.UnitSystem;

			PageUnitSystem: Rhino.UnitSystem;

			ModelDistanceDisplayMode: Rhino.UI.DistanceDisplayMode;

			PageDistanceDisplayMode: Rhino.UI.DistanceDisplayMode;

			ModelDistanceDisplayPrecision: number;

			PageDistanceDisplayPrecision: number;

			OkToClose(parent: unknown): boolean;

			UnitsDistanceDisplayAndPrecisionFromDoc(doc: Rhino.RhinoDoc): void;

			UnitsAndDistanceDisplayFromDoc(doc: Rhino.RhinoDoc): void;

			DistanceDisplayPrecisionFromDoc(doc: Rhino.RhinoDoc): void;
		}
	}

	export namespace Rhino.UI.DialogPanels {
		export class NotesPanel {
			constructor(doc: Rhino.RhinoDoc);

			static readonly Id: string;

			readonly HelpUrl: string;

			static Register(): void;

			PanelShown(
				documentSerialNumber: number,
				reason: Rhino.UI.ShowPanelReason,
			): void;

			PanelHidden(
				documentSerialNumber: number,
				reason: Rhino.UI.ShowPanelReason,
			): void;

			PanelClosing(
				documentSerialNumber: number,
				onCloseDocument: boolean,
			): void;
		}
	}

	export namespace Rhino.UI.DialogPanels {
		export class OSnapPanel {
			constructor();

			static readonly PanelId: string;

			readonly HelpUrl: string;

			PanelShown(
				documentSerialNumber: number,
				reason: Rhino.UI.ShowPanelReason,
			): void;

			PanelHidden(
				documentSerialNumber: number,
				reason: Rhino.UI.ShowPanelReason,
			): void;

			PanelClosing(
				documentSerialNumber: number,
				onCloseDocument: boolean,
			): void;
		}
	}

	export namespace Rhino.UI.DialogPanels {
		export class SelectionFilterUi {
			constructor();

			ViewModel: Rhino.UI.ViewModels.SelectionFilterViewModel;

			readonly HelpUrl: string;

			GetCurrentControlLayout(): void;

			PanelShown(
				documentSerialNumber: number,
				reason: Rhino.UI.ShowPanelReason,
			): void;

			PanelHidden(
				documentSerialNumber: number,
				reason: Rhino.UI.ShowPanelReason,
			): void;

			PanelClosing(
				documentSerialNumber: number,
				onCloseDocument: boolean,
			): void;
		}
	}

	export namespace Rhino.UI.DialogPanels {
		export class WebBrowserPanel {
			constructor();

			static readonly PanelId: string;

			readonly HelpUrl: string;

			static Register(): void;

			PanelClosing(
				documentSerialNumber: number,
				onCloseDocument: boolean,
			): void;

			PanelHidden(
				documentSerialNumber: number,
				reason: Rhino.UI.ShowPanelReason,
			): void;

			PanelShown(
				documentSerialNumber: number,
				reason: Rhino.UI.ShowPanelReason,
			): void;
		}
	}

	export namespace Rhino.UI.DialogPanels {
		export class Linetype {
			constructor(doc: Rhino.RhinoDoc);

			static Register(): void;
		}
	}

	export namespace Rhino.UI.DialogPanels {
		export class PlotWidth {
			constructor(doc: Rhino.RhinoDoc);

			static Register(): void;
		}
	}

	export namespace Rhino.UI.DialogPanels {
		export class TutorialsPanel {
			constructor();

			static readonly Id: string;

			static Register(): void;

			PanelShown(
				documentSerialNumber: number,
				reason: Rhino.UI.ShowPanelReason,
			): void;

			PanelHidden(
				documentSerialNumber: number,
				reason: Rhino.UI.ShowPanelReason,
			): void;

			PanelClosing(
				documentSerialNumber: number,
				onCloseDocument: boolean,
			): void;
		}
	}

	export namespace Rhino.UI.Interfaces {
		export interface IGradient {
			Draw(
				graphics: unknown,
				dest: unknown,
			): void;

			MouseDown(
				dest: unknown,
				point: unknown,
			): boolean;

			MouseMove(
				dest: unknown,
				point: unknown,
			): boolean;

			MouseUp(
				dest: unknown,
				point: unknown,
				deselect: boolean,
			): boolean;

			SetColorStops(stops: Iterable<Rhino.Display.ColorStop>): void;

			GetColorStops(): Rhino.Display.ColorStop[];
		}
	}

	export namespace Rhino.UI.Controls {
		export class CollapsibleSectionContainerHandler implements Rhino.UI.Controls.EtoCollapsibleSectionHolder.SectionContainer.IHandler {
			constructor();

			readonly Collapsible: boolean;

			readonly Caption: string;

			Expanded: boolean;

			Header: Eto.Forms.Control;

			Content: Eto.Forms.Control;

			readonly Divider: Rhino.UI.Controls.Divider;

			Padding: Eto.Drawing.Padding;

			MinimumSize: Eto.Drawing.Size;

			ContextMenu: Eto.Forms.ContextMenu;

			AttachEvent(id: string): void;

			AddButtons(hbh: Rhino.UI.Controls.IHeaderButtonHandler): void;

			AddHeaderButtons(buttonDrawables: unknown): void;
		}
	}

	export namespace Rhino.UI.Controls {
		export class EtoExpanderHandler {
			constructor();

			Expanded: boolean;

			Header: Eto.Forms.Control;

			Content: Eto.Forms.Control;

			readonly Divider: Rhino.UI.Controls.Divider;

			Padding: Eto.Drawing.Padding;

			MinimumSize: Eto.Drawing.Size;

			ContextMenu: Eto.Forms.ContextMenu;

			AttachEvent(id: string): void;
		}
	}

	export namespace Rhino.UI.Controls {
		export class ButtonDrawable {
			constructor(
				hbh: Rhino.UI.Controls.IHeaderButtonHandler,
				index: number,
				image: Eto.Drawing.Bitmap,
				tooltip: string,
			);
		}
	}

	export namespace Rhino.UI.Controls {
		export enum GridWrapMode {
			Horizontal = 0,

			Vertical = 1,
		}
	}

	export namespace Rhino.UI.Controls {
		export class ControlGridLayout {
			constructor();

			GridWrapMode: Rhino.UI.Controls.GridWrapMode;

			ArrangeControls: boolean;

			ItemSize: Eto.Drawing.Size;

			ItemPadding: Eto.Drawing.Padding;

			readonly Items: unknown;

			CenterAlign: boolean;

			Rows: number;

			Columns: number;
		}
	}

	export namespace Rhino.UI.Controls {
		export class Divider {
			constructor();

			static readonly UnsetColor: Eto.Drawing.Color;

			Color: Eto.Drawing.Color;

			ForceHorizontalLine: boolean;

			readonly Orientation: Eto.Forms.Orientation;
		}
	}

	export namespace Rhino.UI.Controls {
		export class PrintWidthGridView {
			constructor();
		}
	}

	export namespace Rhino.UI.Controls {
		export class Slider {
			constructor(
				parent: Eto.Forms.Control,
				usePercentageSign: boolean,
			);

			constructor(parent: Eto.Forms.Control);

			constructor(
				parent: Eto.Forms.Control,
				usePercentageSign: boolean,
				text1: string,
				text2: string,
			);

			Height: number;

			Enabled: boolean;

			AlternateText: string;

			MarkerPointColor1: Eto.Drawing.Color;

			MarkerPointColor2: Eto.Drawing.Color;

			DrawNumberUnderPoint: boolean;

			DrawArrows: boolean;

			DrawTextOnTop: boolean;

			DrawTextLabels: boolean;

			DrawEndLines: boolean;

			MultipleValues: boolean;

			AllowValuesToCrossRange: boolean;

			AllowValuesToCrossMaxRange: boolean;

			AllowValuesToCrossMinRange: boolean;

			AllowValuesToCross: boolean;

			Decimals: number;

			Value1?: number;

			Value2?: number;

			SetMinMax(
				min: number,
				max: number,
			): void;

			SetVaries(
				varies: boolean,
				value: number,
			): void;

			SetVaries(varies: boolean): void;
		}
	}

	export namespace Rhino.UI.Controls {
		export class RangeDialog {
			constructor(
				min: number,
				max: number,
				decimals: number,
				increment: number,
				min_range: boolean,
				max_range: boolean,
			);

			DefaultSize: Eto.Drawing.Size;
		}
	}

	export namespace Rhino.UI.Controls {
		export class ImageButton {
			constructor();

			constructor(useFrameColors: boolean);

			HoverBrush: Eto.Drawing.Brush;

			HoverBorderPen: Eto.Drawing.Pen;

			HighlightBrush: Eto.Drawing.Brush;

			HighlightBorderPen: Eto.Drawing.Pen;

			Image: Eto.Drawing.Image;

			DisabledImage: Eto.Drawing.Image;

			Size: Eto.Drawing.Size;

			MaskImageWithBackgroundColorWhenDisabled: boolean;
		}
	}

	export namespace Rhino.UI.Controls {
		export class ImageToolTipButton {
			constructor(
				leftToolTip: string,
				rightToolTip: string,
			);

			constructor(
				normalImageResourceId: string,
				disabledImageResourceId: string,
				leftToolTip: string,
				rightToolTip: string,
			);

			HoverBrush: Eto.Drawing.Brush;

			HoverBorderPen: Eto.Drawing.Pen;

			HighlightBrush: Eto.Drawing.Brush;

			HighlightBorderPen: Eto.Drawing.Pen;

			Image: Eto.Drawing.Image;

			DisabledImage: Eto.Drawing.Image;

			Size: Eto.Drawing.Size;

			MaskImageWithBackgroundColorWhenDisabled: boolean;
		}
	}

	export namespace Rhino.UI.Controls {
		export class LabelSeparator {
			constructor();

			Text: string;

			Color: Eto.Drawing.Color;

			UseRhinoColorScheme: boolean;
		}
	}

	export namespace Rhino.UI.Controls {
		export class LineTypeGridView {
			constructor(doc: Rhino.RhinoDoc);

			LineTypeCollection: Eto.Forms.FilterCollection$1<Rhino.UI.Controls.LineTypeItem>;

			Document: Rhino.RhinoDoc;

			AddLineTypeItem(
				lt: Rhino.DocObjects.Linetype,
				linetypename: string,
			): void;
		}
	}

	export namespace Rhino.UI.Controls {
		export class LineTypeItem {
			constructor(linetypeId: string);

			Name: string;

			Pattern: string;

			OriginalPattern: string;

			readonly LineTypeId: string;

			LinetypeIndex: number;

			AlwaysModelDistances: boolean;

			ModelUnitSystem: Rhino.UnitSystem;

			PageUnitSystem: Rhino.UnitSystem;

			ModelDistanceDisplayMode: Rhino.UI.DistanceDisplayMode;

			PageDistanceDisplayMode: Rhino.UI.DistanceDisplayMode;

			ModelDistanceDisplayPrecision: number;

			PageDistanceDisplayPrecision: number;

			OkToClose(parent: unknown): boolean;

			UnitsDistanceDisplayAndPrecisionFromDoc(doc: Rhino.RhinoDoc): void;

			UnitsAndDistanceDisplayFromDoc(doc: Rhino.RhinoDoc): void;

			DistanceDisplayPrecisionFromDoc(doc: Rhino.RhinoDoc): void;
		}
	}

	export namespace Rhino.UI.Controls {
		export class NumericUpDownWithUnitParsingEventArgs {
			constructor(
				previousValue: number,
				newValue: number,
				stepperArgs: Eto.Forms.StepperEventArgs,
			);

			readonly PreviousValue: number;

			readonly NewValue: number;

			readonly StepperArgs: Eto.Forms.StepperEventArgs;
		}
	}

	export namespace Rhino.UI.Controls {
		export enum NumericUpDownWithUnitParsingUpdateMode {
			OnValueChange = 1,

			OnEnterOrLoseFocus = 2,

			WhenDoneChanging = 8,

			Always = 4294967295,
		}
	}

	export namespace Rhino.UI.Controls {
		export class NumericUpDownWithUnitParsing {
			constructor(showStepper?: boolean);

			readonly IsStepping: boolean;

			readonly IsTextChanging: boolean;

			static readonly UpdateModeWhenInPanel: Rhino.UI.Controls.NumericUpDownWithUnitParsingUpdateMode;

			ValueUpdateMode: Rhino.UI.Controls.NumericUpDownWithUnitParsingUpdateMode;

			AutoDetectPropertyPanelEmbedding: boolean;

			readonly ValueBinding: Eto.Forms.BindableBinding$2<Rhino.UI.Controls.NumericUpDownWithUnitParsing, number>;

			Value: number;

			HideAlternateTextWhenValueChanges: boolean;

			IsAlternateTextVisible: boolean;

			UseDistanceDisplayMode: boolean;

			InvalidTextColor: Eto.Drawing.Color;

			AlternateTextColor: Eto.Drawing.Color;

			NumericTextColor: Eto.Drawing.Color;

			AlternateText: string;

			Prefix: string;

			Suffix: string;

			Increment: number;

			WantReturn: boolean;

			WantReturnInPanel: boolean;

			MinValue: number;

			MaxValue: number;

			DecimalPlaces: number;

			MaximumDecimalPlaces: number;

			SetFormatUnitSystem(doc: Rhino.RhinoDoc): void;

			static GetFormatUnitSystem(doc: Rhino.RhinoDoc): { unitSystem: Rhino.UnitSystem, distanceDisplayMode: Rhino.UI.DistanceDisplayMode };

			static GetFormatUnitSystem(
				doc: Rhino.RhinoDoc,
				pageUnits: boolean,
			): { unitSystem: Rhino.UnitSystem, distanceDisplayMode: Rhino.UI.DistanceDisplayMode };

			SetFormatUnitSystem(
				unitSystem: Rhino.UnitSystem,
				distanceDisplayMode: Rhino.UI.DistanceDisplayMode,
			): void;

			UseViewModelUnits(viewModel: Rhino.UI.ViewModel): void;

			UseViewPageUnits(viewModel: Rhino.UI.ViewModel): void;
		}
	}

	export namespace Rhino.UI.Controls {
		export class UnitParsingMaskedTextProvider {
			constructor();

			Parent: Eto.Forms.TextBox;

			readonly PrefixOfset: number;

			readonly SuffixOfset: number;

			readonly DisplayText: string;

			Text: string;

			readonly EditPositions: Iterable<number>;

			readonly IsEmpty: boolean;

			readonly MaskCompleted: boolean;

			ShowAlternateText: boolean;

			FormatText: boolean;

			HideAlternateTextWhenValueChanges: boolean;

			AlternateText: string;

			TextIsValid: boolean;

			Prefix: string;

			Suffix: string;

			Value: number;

			PreviousValue: number;

			Increment: number;

			MinValue: number;

			MaxValue: number;

			DecimalPlaces: number;

			MaximumDecimalPlaces: number;

			RevertValue(): void;

			Clear(
				position: number,
				length: number,
				forward: boolean,
			): boolean;

			Delete(
				position: number,
				length: number,
				forward: boolean,
			): boolean;

			Insert(
				character: unknown,
				position: number,
			): boolean;

			Replace(
				character: unknown,
				position: number,
			): boolean;

			SetFormatUnitSystem(
				unitSystem: Rhino.UnitSystem,
				distanceDisplayMode: Rhino.UI.DistanceDisplayMode,
			): void;

			static GetDistanceDisplayMode(rhinoDoc: Rhino.RhinoDoc): Rhino.UI.DistanceDisplayMode;

			static GetDistanceDisplayMode(
				rhinoDoc: Rhino.RhinoDoc,
				getPageUnits: boolean,
			): Rhino.UI.DistanceDisplayMode;

			PushShowAlternateText(): void;

			PopShowAlternateText(): void;
		}
	}

	export namespace Rhino.UI.Controls {
		export class RichTextAreaWithAlternateText {
			constructor();

			readonly RichTextArea: Eto.Forms.RichTextArea;

			readonly AlternateTextArea: Eto.Forms.TextArea;

			ShowAlternateText: boolean;

			HideAlternateTextWhenValueChanges: boolean;

			SelectAllOnGotFocus: boolean;

			AlternateText: string;

			ReadOnly: boolean;
		}
	}

	export namespace Rhino.UI.Controls {
		export class RenderContentMenu {
			constructor();

			static AddMenuItem(
				plugInId: string,
				menuItemName: string,
				menuOrder: number,
				separatorStyle: Rhino.UI.Controls.RenderContentMenu.SeparatorStyle,
				isToplevel: boolean,
				icon: unknown,
				executeCommandCallback: (arg1: Rhino.Render.RenderContentCollection) => Rhino.Commands.Result,
				isEnabledCallback: (arg1: Rhino.Render.RenderContentCollection, arg2: Rhino.UI.Controls.RenderContentMenu.Context) => boolean,
			): void;
		}
	}

	export namespace Rhino.UI.Controls.RenderContentMenu {
		export enum SeparatorStyle {
			None = 0,

			Before = 1,

			After = 2,

			Both = 3,
		}
	}

	export namespace Rhino.UI.Controls.RenderContentMenu {
		export enum Context {
			Unknown = 0,

			MainThumbnailList = 1,

			MainTree = 2,

			EditorPreview = 3,

			SubNodeControl = 4,

			ColorButton = 5,

			CreateNewButton = 6,

			ContentControl = 7,

			NewContentControl = 8,

			NewContentControlDropDown = 9,

			BreadcrumbControl = 10,

			FloatingPreview = 11,

			Spanner = 12,

			SpannerModal = 13,

			ContentTypeSection = 14,

			ContentTypeBrowserNew = 15,

			ContentTypeBrowserExisting = 16,

			ContentInstanceBrowser = 17,

			ToolTipPreview = 18,
		}
	}

	export namespace Rhino.UI.Controls {
		export class EtoCollapsibleSectionHolder2 {
			constructor();

			UseCheckBoxes: boolean;

			UseScrollbars: boolean;

			readonly Uuid: string;

			readonly Sections: Iterable<Rhino.UI.Controls.ICollapsibleSection>;

			HolderParent: unknown;

			Shown: boolean;

			Enabled: boolean;

			readonly Created: boolean;

			EnableHeaderButton(
				s: Rhino.UI.Controls.ICollapsibleSection,
				index: number,
				bEnable: boolean,
			): boolean;

			ShowHeaderButton(
				s: Rhino.UI.Controls.ICollapsibleSection,
				index: number,
				bShow: boolean,
			): boolean;

			SetFullHeightSection(sec: Rhino.UI.Controls.ICollapsibleSection): void;

			SectionAt(index: number): Rhino.UI.Controls.ICollapsibleSection;

			FindSectionIndex(section: Rhino.UI.Controls.ICollapsibleSection): number;

			Move(
				rect: unknown,
				bRepaint: boolean,
				bRepaintNC: boolean,
			): void;

			Add(section: Rhino.UI.Controls.ICollapsibleSection): void;

			Remove(section: Rhino.UI.Controls.ICollapsibleSection): void;

			SectionCheckBox(caption: string): Eto.Forms.CheckBox;

			UnRegisterSectionCheckBoxes(): void;

			RegisterSectionCheckBoxes(): void;
		}
	}

	export namespace Rhino.UI.Controls {
		export class EtoCollapsibleSectionHolder {
			constructor();

			UseCheckBoxes: boolean;

			UseScrollbars: boolean;

			readonly Uuid: string;

			readonly Sections: Iterable<Rhino.UI.Controls.ICollapsibleSection>;

			HolderParent: unknown;

			Shown: boolean;

			Enabled: boolean;

			readonly Created: boolean;

			SectionAt(index: number): Rhino.UI.Controls.ICollapsibleSection;

			FindSectionIndex(section: Rhino.UI.Controls.ICollapsibleSection): number;

			Move(
				rect: unknown,
				bRepaint: boolean,
				bRepaintNC: boolean,
			): void;

			Add(section: Rhino.UI.Controls.ICollapsibleSection): void;

			Remove(section: Rhino.UI.Controls.ICollapsibleSection): void;

			SectionCheckBox(caption: string): Eto.Forms.CheckBox;

			UnRegisterSectionCheckBoxes(): void;

			RegisterSectionCheckBoxes(): void;
		}
	}

	export namespace Rhino.UI.Controls.EtoCollapsibleSectionHolder {
		export interface OnCheckboxCheckedHandler { (
			sender: unknown,
			e: unknown,
		): void; }
	}

	export namespace Rhino.UI.Controls.EtoCollapsibleSectionHolder {
		export class SectionContainer {
			constructor(
				section: Rhino.UI.Controls.ICollapsibleSection,
				content: Eto.Forms.Control,
			);

			readonly Interface: Rhino.UI.Controls.ICollapsibleSection;
		}
	}

	export namespace Rhino.UI.Controls.EtoCollapsibleSectionHolder.SectionContainer {
		export interface IHandler {
			readonly Collapsible: boolean;

			readonly Caption: string;
		}
	}

	export namespace Rhino.UI.Controls {
		export class EtoCollapsibleSection2 {
			readonly Caption: Rhino.UI.LocalizeStringPair;

			readonly SectionHeight: number;

			readonly Collapsible: boolean;

			readonly Hidden: boolean;

			readonly InitiallyExpanded: boolean;

			readonly SettingsTag: string;

			ViewModel: Rhino.UI.Controls.IRdkViewModel;

			readonly CppPointer: unknown;

			readonly CommandOptionName: Rhino.UI.LocalizeStringPair;

			readonly PlugInId: string;

			readonly ViewModelId: string;

			OnAttachedToHolder(holder: Rhino.UI.Controls.ICollapsibleSectionHolder2): void;

			EnableHeaderButton(
				index: number,
				bEnable: boolean,
			): boolean;

			NewHeaderButtonHandler(): Rhino.UI.Controls.IHeaderButtonHandler;

			OnAttachingToHolder(holder: Rhino.UI.Controls.ICollapsibleSectionHolder2): void;

			OnDetachedFromHolder(holder: Rhino.UI.Controls.ICollapsibleSectionHolder2): void;

			OnDetachingFromHolder(holder: Rhino.UI.Controls.ICollapsibleSectionHolder2): void;

			ShowHeaderButton(
				index: number,
				bShow: boolean,
			): boolean;

			HolderVisible(visible: boolean): void;

			ReplaceCallback(callback: Rhino.UI.Controls.ICollapsibleSection): void;

			RunScript(vm: Rhino.UI.Controls.IRdkViewModel): number;

			CurrentRendererDependent(bValue: boolean): void;

			ApplyStyles(): void;
		}
	}

	export namespace Rhino.UI.Controls {
		export class EtoCollapsibleSection3 {
			readonly Caption: Rhino.UI.LocalizeStringPair;

			readonly SectionHeight: number;

			readonly Collapsible: boolean;

			readonly Hidden: boolean;

			readonly InitiallyExpanded: boolean;

			readonly SettingsTag: string;

			ViewModel: Rhino.UI.Controls.IRdkViewModel;

			readonly CppPointer: unknown;

			readonly CommandOptionName: Rhino.UI.LocalizeStringPair;

			readonly PlugInId: string;

			readonly ViewModelId: string;

			UpdateView(flags: number): void;

			OnAttachedToHolder(holder: Rhino.UI.Controls.ICollapsibleSectionHolder2): void;

			EnableHeaderButton(
				index: number,
				bEnable: boolean,
			): boolean;

			NewHeaderButtonHandler(): Rhino.UI.Controls.IHeaderButtonHandler;

			OnAttachingToHolder(holder: Rhino.UI.Controls.ICollapsibleSectionHolder2): void;

			OnDetachedFromHolder(holder: Rhino.UI.Controls.ICollapsibleSectionHolder2): void;

			OnDetachingFromHolder(holder: Rhino.UI.Controls.ICollapsibleSectionHolder2): void;

			ShowHeaderButton(
				index: number,
				bShow: boolean,
			): boolean;

			HolderVisible(visible: boolean): void;

			ReplaceCallback(callback: Rhino.UI.Controls.ICollapsibleSection): void;

			RunScript(vm: Rhino.UI.Controls.IRdkViewModel): number;

			CurrentRendererDependent(bValue: boolean): void;

			ApplyStyles(): void;
		}
	}

	export namespace Rhino.UI.Controls {
		export class EtoCollapsibleSection {
			constructor();

			readonly Caption: Rhino.UI.LocalizeStringPair;

			readonly SectionHeight: number;

			readonly Collapsible: boolean;

			readonly Hidden: boolean;

			readonly InitiallyExpanded: boolean;

			readonly SettingsTag: string;

			ViewModel: Rhino.UI.Controls.IRdkViewModel;

			readonly CppPointer: unknown;

			readonly CommandOptionName: Rhino.UI.LocalizeStringPair;

			readonly PlugInId: string;

			readonly ViewModelId: string;

			ReplaceCallback(callback: Rhino.UI.Controls.ICollapsibleSection): void;

			RunScript(vm: Rhino.UI.Controls.IRdkViewModel): number;

			CurrentRendererDependent(bValue: boolean): void;

			ApplyStyles(): void;
		}
	}

	export namespace Rhino.UI.Controls {
		export class EtoContentUISection3 {
			constructor();

			readonly Hidden: boolean;

			readonly Caption: Rhino.UI.LocalizeStringPair;

			readonly SectionHeight: number;

			readonly Collapsible: boolean;

			readonly InitiallyExpanded: boolean;

			readonly SettingsTag: string;

			ViewModel: Rhino.UI.Controls.IRdkViewModel;

			readonly CppPointer: unknown;

			readonly CommandOptionName: Rhino.UI.LocalizeStringPair;

			readonly PlugInId: string;

			readonly ViewModelId: string;

			GetSelection(): Rhino.Render.RenderContentCollection;

			SetSelection(collection: Rhino.Render.RenderContentCollection): boolean;

			UpdateView(flags: number): void;

			OnAttachedToHolder(holder: Rhino.UI.Controls.ICollapsibleSectionHolder2): void;

			EnableHeaderButton(
				index: number,
				bEnable: boolean,
			): boolean;

			NewHeaderButtonHandler(): Rhino.UI.Controls.IHeaderButtonHandler;

			OnAttachingToHolder(holder: Rhino.UI.Controls.ICollapsibleSectionHolder2): void;

			OnDetachedFromHolder(holder: Rhino.UI.Controls.ICollapsibleSectionHolder2): void;

			OnDetachingFromHolder(holder: Rhino.UI.Controls.ICollapsibleSectionHolder2): void;

			ShowHeaderButton(
				index: number,
				bShow: boolean,
			): boolean;

			HolderVisible(visible: boolean): void;

			ReplaceCallback(callback: Rhino.UI.Controls.ICollapsibleSection): void;

			RunScript(vm: Rhino.UI.Controls.IRdkViewModel): number;

			CurrentRendererDependent(bValue: boolean): void;

			ApplyStyles(): void;
		}
	}

	export namespace Rhino.UI.Controls {
		export class EtoContentUISection2 {
			constructor();

			readonly Hidden: boolean;

			readonly Caption: Rhino.UI.LocalizeStringPair;

			readonly SectionHeight: number;

			readonly Collapsible: boolean;

			readonly InitiallyExpanded: boolean;

			readonly SettingsTag: string;

			ViewModel: Rhino.UI.Controls.IRdkViewModel;

			readonly CppPointer: unknown;

			readonly CommandOptionName: Rhino.UI.LocalizeStringPair;

			readonly PlugInId: string;

			readonly ViewModelId: string;

			GetSelection(): Rhino.Render.RenderContentCollection;

			SetSelection(collection: Rhino.Render.RenderContentCollection): boolean;

			OnAttachedToHolder(holder: Rhino.UI.Controls.ICollapsibleSectionHolder2): void;

			EnableHeaderButton(
				index: number,
				bEnable: boolean,
			): boolean;

			NewHeaderButtonHandler(): Rhino.UI.Controls.IHeaderButtonHandler;

			OnAttachingToHolder(holder: Rhino.UI.Controls.ICollapsibleSectionHolder2): void;

			OnDetachedFromHolder(holder: Rhino.UI.Controls.ICollapsibleSectionHolder2): void;

			OnDetachingFromHolder(holder: Rhino.UI.Controls.ICollapsibleSectionHolder2): void;

			ShowHeaderButton(
				index: number,
				bShow: boolean,
			): boolean;

			HolderVisible(visible: boolean): void;

			ReplaceCallback(callback: Rhino.UI.Controls.ICollapsibleSection): void;

			RunScript(vm: Rhino.UI.Controls.IRdkViewModel): number;

			CurrentRendererDependent(bValue: boolean): void;

			ApplyStyles(): void;
		}
	}

	export namespace Rhino.UI.Controls {
		export class EtoContentUISection {
			readonly Caption: Rhino.UI.LocalizeStringPair;

			readonly SectionHeight: number;

			readonly Collapsible: boolean;

			readonly Hidden: boolean;

			readonly InitiallyExpanded: boolean;

			readonly SettingsTag: string;

			ViewModel: Rhino.UI.Controls.IRdkViewModel;

			readonly CppPointer: unknown;

			readonly CommandOptionName: Rhino.UI.LocalizeStringPair;

			readonly PlugInId: string;

			readonly ViewModelId: string;

			GetSelection(): Rhino.Render.RenderContentCollection;

			SetSelection(collection: Rhino.Render.RenderContentCollection): boolean;

			ReplaceCallback(callback: Rhino.UI.Controls.ICollapsibleSection): void;

			RunScript(vm: Rhino.UI.Controls.IRdkViewModel): number;

			CurrentRendererDependent(bValue: boolean): void;

			ApplyStyles(): void;
		}
	}

	export namespace Rhino.UI.Controls {
		export class EtoPostEffectCollapsibleSection {
			readonly PostEffects: Rhino.Render.PostEffects.PostEffect[];

			readonly PostEffectId: string;

			readonly Caption: Rhino.UI.LocalizeStringPair;

			readonly SectionHeight: number;

			readonly Collapsible: boolean;

			readonly Hidden: boolean;

			readonly InitiallyExpanded: boolean;

			readonly SettingsTag: string;

			ViewModel: Rhino.UI.Controls.IRdkViewModel;

			readonly CppPointer: unknown;

			readonly CommandOptionName: Rhino.UI.LocalizeStringPair;

			readonly PlugInId: string;

			readonly ViewModelId: string;

			GetParameter(
				paramName: string,
				defaultValue: unknown,
			): unknown;

			SetParameter(
				paramName: string,
				value: unknown,
			): boolean;

			GetPostEffects(type: Rhino.Render.PostEffects.PostEffectType): Rhino.Render.PostEffects.PostEffect[];

			ReplaceCallback(callback: Rhino.UI.Controls.ICollapsibleSection): void;

			RunScript(vm: Rhino.UI.Controls.IRdkViewModel): number;

			CurrentRendererDependent(bValue: boolean): void;

			ApplyStyles(): void;
		}
	}

	export namespace Rhino.UI.Controls {
		export class ViewportControl {
			constructor();

			constructor(viewportTitle: string);

			readonly Viewport: Rhino.Display.RhinoViewport;

			Refresh(): void;
		}
	}

	export namespace Rhino.UI.Controls {
		export class PanelWithBorder {
			constructor();

			BackgroundColor: Eto.Drawing.Color;

			BorderColor: Eto.Drawing.Color;

			BorderThickness: number;

			Content: Eto.Forms.Control;

			Padding: Eto.Drawing.Padding;
		}
	}

	export namespace Rhino.UI.Controls {
		export namespace RhinoLayout {
			export const SplitterWidth: number;

			export function Padding(paddingType: Rhino.UI.Controls.RhinoLayout.PaddingType): Eto.Drawing.Padding;

			export function Spacing(spacingType: Rhino.UI.Controls.RhinoLayout.SpacingType): Eto.Drawing.Size;

			export function StackedSpacing(spacingType: Rhino.UI.Controls.RhinoLayout.SpacingType): number;

			export function StackedSpacing(
				orientation: Eto.Forms.Orientation,
				spacingType: Rhino.UI.Controls.RhinoLayout.SpacingType,
			): number;

			export function FixedWidth(controlType: Rhino.UI.Controls.RhinoLayout.WidthControlType): number;

			export function FixedSize(controlType: Rhino.UI.Controls.RhinoLayout.WidthControlType): Eto.Drawing.Size;

			export function LabelRow(
				text: string,
				editControl: Eto.Forms.Control,
				stretch: boolean,
			): Eto.Forms.TableRow;

			export function LabelRow(
				label: Eto.Forms.Label,
				editControl: Eto.Forms.Control,
				stretch: boolean,
			): Eto.Forms.TableRow;

			export function LabelTableLayout(
				text: string,
				editControl: Eto.Forms.Control,
				stretch: boolean,
				spacingType: Rhino.UI.Controls.RhinoLayout.SpacingType,
			): Eto.Forms.TableLayout;

			export function LabelTableLayout(
				label: Eto.Forms.Label,
				editControl: Eto.Forms.Control,
				stretch: boolean,
				spacingType: Rhino.UI.Controls.RhinoLayout.SpacingType,
			): Eto.Forms.TableLayout;

			export function NewLabel(text: string): Eto.Forms.Label;

			export function NewLabelSeparator(text: string): Eto.Forms.Label;

			export function NewLabelSeparator(
				text: string,
				wrapMode: Eto.Forms.WrapMode,
			): Eto.Forms.Label;

			export function NewFileOpenImageButton(): Rhino.UI.Controls.ImageButton;

			export function DisablePanelColorStyling(
				etoControl: Eto.Forms.Control,
				colorProperty: Rhino.UI.Controls.RhinoLayout.DisablePanelColorStylingProperty,
			): void;

			export function DisablePanelColorStyling(panel: Eto.Forms.Panel): void;

			export function EnablePanelColorStyling(
				panel: Eto.Forms.Panel,
				invalidate?: boolean,
			): void;

			export function EnablePanelColorStyling(
				control: Eto.Forms.Control,
				colorProperty: Rhino.UI.Controls.RhinoLayout.DisablePanelColorStylingProperty,
				invalidate?: boolean,
			): void;
		}
	}

	export namespace Rhino.UI.Controls.RhinoLayout {
		export enum PaddingType {
			None = 0,

			Dialog = 1,

			Indented = 2,

			RhinoPanel = 3,

			RhinoPropertiesPage = 4,

			ButtonRow = 5,
		}
	}

	export namespace Rhino.UI.Controls.RhinoLayout {
		export enum SpacingType {
			Dialog = 0,

			Panel = 1,

			PropertiesPage = 2,

			ButtonRow = 3,
		}
	}

	export namespace Rhino.UI.Controls.RhinoLayout {
		export enum WidthControlType {
			Numeric = 0,

			OrderOfMagnitude = 1,

			Text = 2,

			AutoSize = 3,
		}
	}

	export namespace Rhino.UI.Controls.RhinoLayout {
		export enum DisablePanelColorStylingProperty {
			None = 0,

			Foreground = 1,

			Background = 2,

			All = 16777215,
		}
	}

	export namespace Rhino.UI.Controls {
		export class StaticAlignedLabel {
			constructor();

			constructor(align: Eto.Forms.TextAlignment);
		}
	}

	export namespace Rhino.UI.Controls {
		export class RhinoButtonStackLayout {
			constructor(
				orientation: Eto.Forms.Orientation,
				spacingType: Rhino.UI.Controls.RhinoLayout.SpacingType,
			);

			constructor(
				orientation: Eto.Forms.Orientation,
				spacingType: Rhino.UI.Controls.RhinoLayout.SpacingType,
				buttons: Eto.Forms.Button[],
			);
		}
	}

	export namespace Rhino.UI.Controls {
		export class RhinoNestedTableLayout {
			constructor(spacingType: Rhino.UI.Controls.RhinoLayout.SpacingType);

			constructor(
				spacingType: Rhino.UI.Controls.RhinoLayout.SpacingType,
				rows: Eto.Forms.TableRow[],
			);
		}
	}

	export namespace Rhino.UI.Controls {
		export class RhinoPanelStackLayout {
			constructor(orientation?: Eto.Forms.Orientation);
		}
	}

	export namespace Rhino.UI.Controls {
		export class RhinoNestedStackLayout {
			constructor(
				orientation: Eto.Forms.Orientation,
				spacingType: Rhino.UI.Controls.RhinoLayout.SpacingType,
			);

			constructor(spacingType: Rhino.UI.Controls.RhinoLayout.SpacingType);
		}
	}

	export namespace Rhino.UI.Controls {
		export class RhinoButtonTableLayout {
			constructor(spacingType: Rhino.UI.Controls.RhinoLayout.SpacingType);

			constructor(
				orientation: Eto.Forms.Orientation,
				spacingType: Rhino.UI.Controls.RhinoLayout.SpacingType,
				buttons: Eto.Forms.Button[],
			);
		}
	}

	export namespace Rhino.UI.Controls {
		export class RhinoDialogPanel {
			constructor();
		}
	}

	export namespace Rhino.UI.Controls {
		export class RhinoScrollableDialogPanel {
			constructor(paddingType?: Rhino.UI.Controls.RhinoLayout.PaddingType);

			constructor(border: boolean);
		}
	}

	export namespace Rhino.UI.Controls {
		export class RhinoPanelScrollable {
			constructor();
		}
	}

	export namespace Rhino.UI.Controls {
		export class RhinoTableLayout {
			constructor(
				padding: Rhino.UI.Controls.RhinoLayout.PaddingType,
				spacing: Rhino.UI.Controls.RhinoLayout.SpacingType,
			);
		}
	}

	export namespace Rhino.UI.Controls {
		export class RhinoDialogTableLayout {
			constructor(embeddedInRhinoDialogPanel: boolean);
		}
	}

	export namespace Rhino.UI.Controls {
		export class RhinoPanelTableLayout {
			constructor();
		}
	}

	export namespace Rhino.UI.Controls {
		export class RhinoPropertiesPageTableLayout {
			constructor();
		}
	}

	export namespace Rhino.UI.Controls {
		export class RhinoIndentedPanel {
			constructor();
		}
	}

	export namespace Rhino.UI.Controls {
		export class RhinoIndentedTableLayout {
			constructor(spacingType: Rhino.UI.Controls.RhinoLayout.SpacingType);
		}
	}

	export namespace Rhino.UI.Controls {
		export class RhinoGroupBox {
			constructor(spacingType: Rhino.UI.Controls.RhinoLayout.SpacingType);

			Text: string;

			BackgroundColor: Eto.Drawing.Color;

			Content: Eto.Forms.Control;

			Padding: Eto.Drawing.Padding;
		}
	}

	export namespace Rhino.UI.Controls {
		export class RhinoButtonRow {
			constructor();

			AddButton(button: Eto.Forms.Button): void;

			AddButton(imageButton: Rhino.UI.Controls.ImageButton): void;

			AddButton(): Rhino.UI.Controls.ImageButton;

			AddButton(tooltip: string): Rhino.UI.Controls.ImageButton;

			AddButton(
				imageResource: string,
				tooltip: string,
			): Rhino.UI.Controls.ImageButton;

			AddButton(
				image: Eto.Drawing.Image,
				tooltip: string,
			): Rhino.UI.Controls.ImageButton;

			AddButton(
				image: Eto.Drawing.Image,
				useOverlay: boolean,
				tooltip: string,
			): Rhino.UI.Controls.ImageButton;
		}
	}

	export namespace Rhino.UI.Controls {
		export class AddRemoveButton {
			constructor(style?: string);

			AddEnabled: boolean;

			AddCommand: Eto.Forms.Command;

			RemoveEnabled: boolean;

			RemoveCommand: Eto.Forms.Command;

			AddToolTip: string;

			RemoveToolTip: string;

			InsertButton(
				resourceId: string,
				toolTip: string,
				click: (arg1: unknown, arg2: unknown) => void,
			): Eto.Forms.ButtonSegmentedItem;
		}
	}
}
